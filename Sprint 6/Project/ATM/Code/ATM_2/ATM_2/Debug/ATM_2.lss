
ATM_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000070  00800060  00001b8c  00001c20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000024  008000d0  008000d0  00001c90  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001c90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001cc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00001cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002235  00000000  00000000  00001ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c4d  00000000  00000000  000040f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014f5  00000000  00000000  00004d46  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000640  00000000  00000000  0000623c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083b  00000000  00000000  0000687c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000177e  00000000  00000000  000070b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00008835  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 53 0b 	jmp	0x16a6	; 0x16a6 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e8       	ldi	r30, 0x8C	; 140
      68:	fb e1       	ldi	r31, 0x1B	; 27
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 3d       	cpi	r26, 0xD0	; 208
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a0 ed       	ldi	r26, 0xD0	; 208
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 3f       	cpi	r26, 0xF4	; 244
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 7e 07 	call	0xefc	; 0xefc <main>
      8a:	0c 94 c4 0d 	jmp	0x1b88	; 0x1b88 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <appInit>:
// CARD signal trigger
volatile uint8 card_trigger_signal ;
uint8 ATM_STATUS,reset_mode,counter1,btn_value_temp;
uint8 pin[PIN_LENTH];

void appInit(void){
      92:	df 92       	push	r13
      94:	ef 92       	push	r14
      96:	ff 92       	push	r15
      98:	0f 93       	push	r16
      9a:	1f 93       	push	r17
      9c:	cf 93       	push	r28
      9e:	df 93       	push	r29
	 reset_mode = 0;
      a0:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <reset_mode>
	 card_trigger_signal = 0;
      a4:	10 92 e6 00 	sts	0x00E6, r1	; 0x8000e6 <card_trigger_signal>
	 ATM_STATUS = ATM_NORMAL_MODE;
      a8:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <ATM_STATUS>
	// init LCD
	atm_lcd.E_port = PORT_C;
      ac:	eb ed       	ldi	r30, 0xDB	; 219
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	c2 e0       	ldi	r28, 0x02	; 2
      b2:	0c 2f       	mov	r16, r28
      b4:	c2 83       	std	Z+2, r28	; 0x02
	atm_lcd.E_pin = PINC3;
      b6:	d3 e0       	ldi	r29, 0x03	; 3
      b8:	3d 2f       	mov	r19, r29
      ba:	d5 83       	std	Z+5, r29	; 0x05
	atm_lcd.RS_port = PORT_C;
      bc:	ec 2e       	mov	r14, r28
      be:	c0 83       	st	Z, r28
	atm_lcd.RS_pin = PINC1;
      c0:	81 e0       	ldi	r24, 0x01	; 1
      c2:	18 2f       	mov	r17, r24
      c4:	83 83       	std	Z+3, r24	; 0x03
	atm_lcd.RW_port = PORT_C;
      c6:	fc 2e       	mov	r15, r28
      c8:	c1 83       	std	Z+1, r28	; 0x01
	atm_lcd.RW_pin = PINC2;
      ca:	2c 2f       	mov	r18, r28
      cc:	c4 83       	std	Z+4, r28	; 0x04
	// data pins
	atm_lcd.lcd_data_port = PORT_C;
      ce:	4c 2f       	mov	r20, r28
      d0:	c6 83       	std	Z+6, r28	; 0x06
	atm_lcd.lcd_data1_pin = PINC4;
      d2:	84 e0       	ldi	r24, 0x04	; 4
      d4:	58 2f       	mov	r21, r24
      d6:	87 83       	std	Z+7, r24	; 0x07
	atm_lcd.lcd_data2_pin = PINC5;
      d8:	0f 2e       	mov	r0, r31
      da:	f5 e0       	ldi	r31, 0x05	; 5
      dc:	df 2e       	mov	r13, r31
      de:	f0 2d       	mov	r31, r0
      e0:	6d 2d       	mov	r22, r13
      e2:	d0 86       	std	Z+8, r13	; 0x08
	atm_lcd.lcd_data3_pin = PINC6;
      e4:	86 e0       	ldi	r24, 0x06	; 6
      e6:	78 2f       	mov	r23, r24
      e8:	81 87       	std	Z+9, r24	; 0x09
	atm_lcd.lcd_data4_pin = PINC7;
      ea:	87 e0       	ldi	r24, 0x07	; 7
      ec:	82 87       	std	Z+10, r24	; 0x0a
	LCD_init(atm_lcd);
      ee:	0e 94 70 05 	call	0xae0	; 0xae0 <LCD_init>
	// keypad 
	kpd.cols_port = PORT_A;
      f2:	eb ee       	ldi	r30, 0xEB	; 235
      f4:	f0 e0       	ldi	r31, 0x00	; 0
      f6:	14 82       	std	Z+4, r1	; 0x04
	kpd.rows_port = PORT_A;
      f8:	15 82       	std	Z+5, r1	; 0x05
	kpd.number_of_cols = 3;
      fa:	4d 2f       	mov	r20, r29
      fc:	d0 83       	st	Z, r29
	kpd.number_of_rows = 3;
      fe:	5d 2f       	mov	r21, r29
     100:	d1 83       	std	Z+1, r29	; 0x01
	kpd.cols_first_pin = PINA2;
     102:	6c 2f       	mov	r22, r28
     104:	c2 83       	std	Z+2, r28	; 0x02
	kpd.rows_first_pin = PINA5;
     106:	7d 2d       	mov	r23, r13
     108:	d3 82       	std	Z+3, r13	; 0x03
	
	KPD_init(kpd);
     10a:	80 e0       	ldi	r24, 0x00	; 0
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <KPD_init>
	// Buzzer
	buzzer.buzzer_port = PORT_D;
     112:	e8 ed       	ldi	r30, 0xD8	; 216
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	d0 83       	st	Z, r29
	buzzer.buzzer_pin = PIND3;
     118:	d1 83       	std	Z+1, r29	; 0x01
	buzzer_init(buzzer);
     11a:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <buzzer>
     11e:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <buzzer+0x1>
     122:	0e 94 4a 04 	call	0x894	; 0x894 <buzzer_init>
	// button 
	zero_enter_btn.button_port = PORT_D;
     126:	e5 ed       	ldi	r30, 0xD5	; 213
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	d0 83       	st	Z, r29
	zero_enter_btn.button_pin = PIND2;
     12c:	c1 83       	std	Z+1, r28	; 0x01
	BUTTON_init(zero_enter_btn);
     12e:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <zero_enter_btn>
     132:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <zero_enter_btn+0x1>
     136:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <BUTTON_init>
	// init pin as input
	dio_init(PORT_B,PINB2,DIO_IN);
     13a:	40 e0       	ldi	r20, 0x00	; 0
     13c:	62 e0       	ldi	r22, 0x02	; 2
     13e:	81 e0       	ldi	r24, 0x01	; 1
     140:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
	
	
	// enable INTERRRUPT 
	// enable interrupt mode 
	SET_BIT(MCUCSR,ISC2);
     144:	84 b7       	in	r24, 0x34	; 52
     146:	80 64       	ori	r24, 0x40	; 64
     148:	84 bf       	out	0x34, r24	; 52
	//enable GICR
	//SET_BIT(GICR,GICR_INT_2);
	SET_BIT(GICR,5);
     14a:	8b b7       	in	r24, 0x3b	; 59
     14c:	80 62       	ori	r24, 0x20	; 32
     14e:	8b bf       	out	0x3b, r24	; 59
	SET_BIT(SREG,1);
     150:	8f b7       	in	r24, 0x3f	; 63
     152:	82 60       	ori	r24, 0x02	; 2
     154:	8f bf       	out	0x3f, r24	; 63
	sei();
     156:	78 94       	sei
	
}
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	df 90       	pop	r13
     166:	08 95       	ret

00000168 <idelMenu>:

void idelMenu(void){
     168:	8f 92       	push	r8
     16a:	9f 92       	push	r9
     16c:	af 92       	push	r10
     16e:	cf 92       	push	r12
     170:	df 92       	push	r13
     172:	ef 92       	push	r14
     174:	ff 92       	push	r15
     176:	0f 93       	push	r16
     178:	1f 93       	push	r17
	LCD_clearScreen(atm_lcd);
     17a:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     17e:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     182:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     186:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     18a:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     18e:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     192:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     196:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     19a:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     19e:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     1a2:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     1a6:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
	LCD_displayStringRowColumn(atm_lcd,0,5,"WELCOME");
     1aa:	0f 2e       	mov	r0, r31
     1ac:	f0 e6       	ldi	r31, 0x60	; 96
     1ae:	8f 2e       	mov	r8, r31
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	9f 2e       	mov	r9, r31
     1b4:	f0 2d       	mov	r31, r0
     1b6:	0f 2e       	mov	r0, r31
     1b8:	f5 e0       	ldi	r31, 0x05	; 5
     1ba:	af 2e       	mov	r10, r31
     1bc:	f0 2d       	mov	r31, r0
     1be:	c1 2c       	mov	r12, r1
     1c0:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     1c4:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     1c8:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     1cc:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     1d0:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     1d4:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     1d8:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     1dc:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     1e0:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     1e4:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     1e8:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     1ec:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
	// delay 1 second
	Timer0_Delay(1000);
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	70 e0       	ldi	r23, 0x00	; 0
     1f4:	8a e7       	ldi	r24, 0x7A	; 122
     1f6:	94 e4       	ldi	r25, 0x44	; 68
     1f8:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
	LCD_clearScreen(atm_lcd);
     1fc:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     200:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     204:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     208:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     20c:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     210:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     214:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     218:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     21c:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     220:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     224:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     228:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
	LCD_displayString(atm_lcd,"Insert a Card");
     22c:	0f 2e       	mov	r0, r31
     22e:	f8 e6       	ldi	r31, 0x68	; 104
     230:	cf 2e       	mov	r12, r31
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	df 2e       	mov	r13, r31
     236:	f0 2d       	mov	r31, r0
     238:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     23c:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     240:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     244:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     248:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     24c:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     250:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     254:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     258:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     25c:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     260:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     264:	0e 94 87 06 	call	0xd0e	; 0xd0e <LCD_displayString>
	
}
     268:	1f 91       	pop	r17
     26a:	0f 91       	pop	r16
     26c:	ff 90       	pop	r15
     26e:	ef 90       	pop	r14
     270:	df 90       	pop	r13
     272:	cf 90       	pop	r12
     274:	af 90       	pop	r10
     276:	9f 90       	pop	r9
     278:	8f 90       	pop	r8
     27a:	08 95       	ret

0000027c <readNumber>:

void readNumber(ST_KPD_t a_kpd,ST_PBTN_t a_zero_enter_btn,uint8 *a_key){
     27c:	ef 92       	push	r14
     27e:	ff 92       	push	r15
     280:	0f 93       	push	r16
     282:	1f 93       	push	r17
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	cd b7       	in	r28, 0x3d	; 61
     28a:	de b7       	in	r29, 0x3e	; 62
     28c:	28 97       	sbiw	r28, 0x08	; 8
     28e:	0f b6       	in	r0, 0x3f	; 63
     290:	f8 94       	cli
     292:	de bf       	out	0x3e, r29	; 62
     294:	0f be       	out	0x3f, r0	; 63
     296:	cd bf       	out	0x3d, r28	; 61
     298:	4b 83       	std	Y+3, r20	; 0x03
     29a:	5c 83       	std	Y+4, r21	; 0x04
     29c:	6d 83       	std	Y+5, r22	; 0x05
     29e:	7e 83       	std	Y+6, r23	; 0x06
     2a0:	8f 83       	std	Y+7, r24	; 0x07
     2a2:	98 87       	std	Y+8, r25	; 0x08
     2a4:	79 01       	movw	r14, r18
	// read numbers from keypad and zero btn 
	uint8 kpd_value ,btn_value; 
	KPD_get_pressed_key(a_kpd,&kpd_value);
     2a6:	9e 01       	movw	r18, r28
     2a8:	2f 5f       	subi	r18, 0xFF	; 255
     2aa:	3f 4f       	sbci	r19, 0xFF	; 255
     2ac:	0e 94 84 04 	call	0x908	; 0x908 <KPD_get_pressed_key>
	BUTTON_read_zero_enter(a_zero_enter_btn,&btn_value);
     2b0:	be 01       	movw	r22, r28
     2b2:	6e 5f       	subi	r22, 0xFE	; 254
     2b4:	7f 4f       	sbci	r23, 0xFF	; 255
     2b6:	c7 01       	movw	r24, r14
     2b8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <BUTTON_read_zero_enter>
	Timer0_Delay(10);
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	80 e2       	ldi	r24, 0x20	; 32
     2c2:	91 e4       	ldi	r25, 0x41	; 65
     2c4:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
	while(kpd_value ==KPD_NO_KEY_PRESSED && btn_value==BTN_NO_PRESS){
     2c8:	1d c0       	rjmp	.+58     	; 0x304 <readNumber+0x88>
			 KPD_get_pressed_key(a_kpd,&kpd_value);
     2ca:	9e 01       	movw	r18, r28
     2cc:	2f 5f       	subi	r18, 0xFF	; 255
     2ce:	3f 4f       	sbci	r19, 0xFF	; 255
     2d0:	4b 81       	ldd	r20, Y+3	; 0x03
     2d2:	5c 81       	ldd	r21, Y+4	; 0x04
     2d4:	6d 81       	ldd	r22, Y+5	; 0x05
     2d6:	7e 81       	ldd	r23, Y+6	; 0x06
     2d8:	8f 81       	ldd	r24, Y+7	; 0x07
     2da:	98 85       	ldd	r25, Y+8	; 0x08
     2dc:	0e 94 84 04 	call	0x908	; 0x908 <KPD_get_pressed_key>
			 	Timer0_Delay(10);
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	80 e2       	ldi	r24, 0x20	; 32
     2e6:	91 e4       	ldi	r25, 0x41	; 65
     2e8:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
			 BUTTON_read_zero_enter(a_zero_enter_btn,&btn_value);
     2ec:	be 01       	movw	r22, r28
     2ee:	6e 5f       	subi	r22, 0xFE	; 254
     2f0:	7f 4f       	sbci	r23, 0xFF	; 255
     2f2:	c7 01       	movw	r24, r14
     2f4:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <BUTTON_read_zero_enter>
				Timer0_Delay(10);
     2f8:	60 e0       	ldi	r22, 0x00	; 0
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	80 e2       	ldi	r24, 0x20	; 32
     2fe:	91 e4       	ldi	r25, 0x41	; 65
     300:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
	// read numbers from keypad and zero btn 
	uint8 kpd_value ,btn_value; 
	KPD_get_pressed_key(a_kpd,&kpd_value);
	BUTTON_read_zero_enter(a_zero_enter_btn,&btn_value);
	Timer0_Delay(10);
	while(kpd_value ==KPD_NO_KEY_PRESSED && btn_value==BTN_NO_PRESS){
     304:	89 81       	ldd	r24, Y+1	; 0x01
     306:	8c 30       	cpi	r24, 0x0C	; 12
     308:	19 f4       	brne	.+6      	; 0x310 <readNumber+0x94>
     30a:	9a 81       	ldd	r25, Y+2	; 0x02
     30c:	9c 30       	cpi	r25, 0x0C	; 12
     30e:	e9 f2       	breq	.-70     	; 0x2ca <readNumber+0x4e>
			 KPD_get_pressed_key(a_kpd,&kpd_value);
			 	Timer0_Delay(10);
			 BUTTON_read_zero_enter(a_zero_enter_btn,&btn_value);
				Timer0_Delay(10);
	}
	if (kpd_value != KPD_NO_KEY_PRESSED)
     310:	8c 30       	cpi	r24, 0x0C	; 12
     312:	19 f0       	breq	.+6      	; 0x31a <readNumber+0x9e>
	{
		*a_key=kpd_value;
     314:	f8 01       	movw	r30, r16
     316:	80 83       	st	Z, r24
     318:	05 c0       	rjmp	.+10     	; 0x324 <readNumber+0xa8>
	} 
	else if (btn_value != BTN_NO_PRESS)
     31a:	8a 81       	ldd	r24, Y+2	; 0x02
     31c:	8c 30       	cpi	r24, 0x0C	; 12
     31e:	11 f0       	breq	.+4      	; 0x324 <readNumber+0xa8>
	{
		*a_key = btn_value;
     320:	f8 01       	movw	r30, r16
     322:	80 83       	st	Z, r24
	}
}
     324:	28 96       	adiw	r28, 0x08	; 8
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	ff 90       	pop	r15
     33a:	ef 90       	pop	r14
     33c:	08 95       	ret

0000033e <appStart>:
// 
// }
// 


void appStart(void){
     33e:	8f 92       	push	r8
     340:	9f 92       	push	r9
     342:	af 92       	push	r10
     344:	cf 92       	push	r12
     346:	ef 92       	push	r14
     348:	ff 92       	push	r15
     34a:	0f 93       	push	r16
     34c:	1f 93       	push	r17
     34e:	cf 93       	push	r28
	if (ATM_STATUS == ATM_BLOKED_MODE)
     350:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <ATM_STATUS>
     354:	81 30       	cpi	r24, 0x01	; 1
     356:	e1 f5       	brne	.+120    	; 0x3d0 <appStart+0x92>
	{
		LCD_clearScreen(atm_lcd);
     358:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     35c:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     360:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     364:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     368:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     36c:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     370:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     374:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     378:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     37c:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     380:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     384:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
		LCD_displayStringRowColumn(atm_lcd,0,3,"OUT FOR MENTENANCE");
     388:	0f 2e       	mov	r0, r31
     38a:	f6 e7       	ldi	r31, 0x76	; 118
     38c:	8f 2e       	mov	r8, r31
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	9f 2e       	mov	r9, r31
     392:	f0 2d       	mov	r31, r0
     394:	0f 2e       	mov	r0, r31
     396:	f3 e0       	ldi	r31, 0x03	; 3
     398:	af 2e       	mov	r10, r31
     39a:	f0 2d       	mov	r31, r0
     39c:	c1 2c       	mov	r12, r1
     39e:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     3a2:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     3a6:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     3aa:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     3ae:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     3b2:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     3b6:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     3ba:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     3be:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     3c2:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     3c6:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     3ca:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
		return;	
     3ce:	ec c1       	rjmp	.+984    	; 0x7a8 <__EEPROM_REGION_LENGTH__+0x3a8>
	}	
	if (reset_mode == 0)
     3d0:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <reset_mode>
     3d4:	81 11       	cpse	r24, r1
     3d6:	06 c0       	rjmp	.+12     	; 0x3e4 <appStart+0xa6>
	{
		idelMenu();
     3d8:	0e 94 b4 00 	call	0x168	; 0x168 <idelMenu>
		reset_mode = 1;
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <reset_mode>
		return;
     3e2:	e2 c1       	rjmp	.+964    	; 0x7a8 <__EEPROM_REGION_LENGTH__+0x3a8>
	}
	if (card_trigger_signal == CARD_INSERTED)
     3e4:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <card_trigger_signal>
     3e8:	81 30       	cpi	r24, 0x01	; 1
     3ea:	09 f0       	breq	.+2      	; 0x3ee <appStart+0xb0>
     3ec:	dd c1       	rjmp	.+954    	; 0x7a8 <__EEPROM_REGION_LENGTH__+0x3a8>
	{
		LCD_clearScreen(atm_lcd);
     3ee:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     3f2:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     3f6:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     3fa:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     3fe:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     402:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     406:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     40a:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     40e:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     412:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     416:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     41a:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
		LCD_displayStringRowColumn(atm_lcd,0,3,"CARD Detected");
     41e:	0f 2e       	mov	r0, r31
     420:	f9 e8       	ldi	r31, 0x89	; 137
     422:	8f 2e       	mov	r8, r31
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	9f 2e       	mov	r9, r31
     428:	f0 2d       	mov	r31, r0
     42a:	0f 2e       	mov	r0, r31
     42c:	f3 e0       	ldi	r31, 0x03	; 3
     42e:	af 2e       	mov	r10, r31
     430:	f0 2d       	mov	r31, r0
     432:	c1 2c       	mov	r12, r1
     434:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     438:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     43c:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     440:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     444:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     448:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     44c:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     450:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     454:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     458:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     45c:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     460:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
		LCD_displayStringRowColumn(atm_lcd,1,0,"READING ...");
     464:	0f 2e       	mov	r0, r31
     466:	f7 e9       	ldi	r31, 0x97	; 151
     468:	8f 2e       	mov	r8, r31
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	9f 2e       	mov	r9, r31
     46e:	f0 2d       	mov	r31, r0
     470:	a1 2c       	mov	r10, r1
     472:	cc 24       	eor	r12, r12
     474:	c3 94       	inc	r12
     476:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     47a:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     47e:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     482:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     486:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     48a:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     48e:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     492:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     496:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     49a:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     49e:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     4a2:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
		counter1 = 0;
     4a6:	10 92 d7 00 	sts	0x00D7, r1	; 0x8000d7 <counter1>
		uint8 is_pin_correct = 0;
		do{
			if (is_pin_correct == INVALID_PIN && counter1 != 0)
     4aa:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <counter1>
     4ae:	88 23       	and	r24, r24
     4b0:	d1 f1       	breq	.+116    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
			{
				LCD_clearScreen(atm_lcd);
     4b2:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     4b6:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     4ba:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     4be:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     4c2:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     4c6:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     4ca:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     4ce:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     4d2:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     4d6:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     4da:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     4de:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
				LCD_displayStringRowColumn(atm_lcd,0,0,"INVALID PIN,Retry");
     4e2:	0f 2e       	mov	r0, r31
     4e4:	f3 ea       	ldi	r31, 0xA3	; 163
     4e6:	8f 2e       	mov	r8, r31
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	9f 2e       	mov	r9, r31
     4ec:	f0 2d       	mov	r31, r0
     4ee:	a1 2c       	mov	r10, r1
     4f0:	c1 2c       	mov	r12, r1
     4f2:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     4f6:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     4fa:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     4fe:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     502:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     506:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     50a:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     50e:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     512:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     516:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     51a:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     51e:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
// 
// }
// 


void appStart(void){
     522:	c0 e0       	ldi	r28, 0x00	; 0
     524:	79 c0       	rjmp	.+242    	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
			{
				LCD_clearScreen(atm_lcd);
				LCD_displayStringRowColumn(atm_lcd,0,0,"INVALID PIN,Retry");
			}else{
							
				LCD_clearScreen(atm_lcd);
     526:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     52a:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     52e:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     532:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     536:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     53a:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     53e:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     542:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     546:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     54a:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     54e:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     552:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
				LCD_displayStringRowColumn(atm_lcd,0,0,"ENTER YOUR PIN");
     556:	0f 2e       	mov	r0, r31
     558:	f5 eb       	ldi	r31, 0xB5	; 181
     55a:	8f 2e       	mov	r8, r31
     55c:	f0 e0       	ldi	r31, 0x00	; 0
     55e:	9f 2e       	mov	r9, r31
     560:	f0 2d       	mov	r31, r0
     562:	a1 2c       	mov	r10, r1
     564:	c1 2c       	mov	r12, r1
     566:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     56a:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     56e:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     572:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     576:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     57a:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     57e:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     582:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     586:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     58a:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     58e:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     592:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
     596:	c5 cf       	rjmp	.-118    	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
			}

			// read PIN
			for (uint8 i = 0;i<PIN_LENTH;i++ )
			{
				readNumber(kpd,zero_enter_btn,&pin[0]);
     598:	20 91 d5 00 	lds	r18, 0x00D5	; 0x8000d5 <zero_enter_btn>
     59c:	30 91 d6 00 	lds	r19, 0x00D6	; 0x8000d6 <zero_enter_btn+0x1>
     5a0:	07 ee       	ldi	r16, 0xE7	; 231
     5a2:	10 e0       	ldi	r17, 0x00	; 0
     5a4:	40 91 eb 00 	lds	r20, 0x00EB	; 0x8000eb <kpd>
     5a8:	50 91 ec 00 	lds	r21, 0x00EC	; 0x8000ec <kpd+0x1>
     5ac:	60 91 ed 00 	lds	r22, 0x00ED	; 0x8000ed <kpd+0x2>
     5b0:	70 91 ee 00 	lds	r23, 0x00EE	; 0x8000ee <kpd+0x3>
     5b4:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <kpd+0x4>
     5b8:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <kpd+0x5>
     5bc:	0e 94 3e 01 	call	0x27c	; 0x27c <readNumber>
				LCD_displayStringRowColumn(atm_lcd,1,(5+i),"X");
     5c0:	0f 2e       	mov	r0, r31
     5c2:	f5 e0       	ldi	r31, 0x05	; 5
     5c4:	af 2e       	mov	r10, r31
     5c6:	f0 2d       	mov	r31, r0
     5c8:	ac 0e       	add	r10, r28
     5ca:	0f 2e       	mov	r0, r31
     5cc:	f4 ec       	ldi	r31, 0xC4	; 196
     5ce:	8f 2e       	mov	r8, r31
     5d0:	f0 e0       	ldi	r31, 0x00	; 0
     5d2:	9f 2e       	mov	r9, r31
     5d4:	f0 2d       	mov	r31, r0
     5d6:	cc 24       	eor	r12, r12
     5d8:	c3 94       	inc	r12
     5da:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     5de:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     5e2:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     5e6:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     5ea:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     5ee:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     5f2:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     5f6:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     5fa:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     5fe:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     602:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     606:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
				Timer0_Delay(50);
     60a:	60 e0       	ldi	r22, 0x00	; 0
     60c:	70 e0       	ldi	r23, 0x00	; 0
     60e:	88 e4       	ldi	r24, 0x48	; 72
     610:	92 e4       	ldi	r25, 0x42	; 66
     612:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
				LCD_clearScreen(atm_lcd);
				LCD_displayStringRowColumn(atm_lcd,0,0,"ENTER YOUR PIN");
			}

			// read PIN
			for (uint8 i = 0;i<PIN_LENTH;i++ )
     616:	cf 5f       	subi	r28, 0xFF	; 255
     618:	c4 30       	cpi	r28, 0x04	; 4
     61a:	08 f4       	brcc	.+2      	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
     61c:	bd cf       	rjmp	.-134    	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
				LCD_displayStringRowColumn(atm_lcd,1,(5+i),"X");
				Timer0_Delay(50);
			}
					
			// wait for enter
			readNumber(kpd,zero_enter_btn,&btn_value_temp);
     61e:	20 91 d5 00 	lds	r18, 0x00D5	; 0x8000d5 <zero_enter_btn>
     622:	30 91 d6 00 	lds	r19, 0x00D6	; 0x8000d6 <zero_enter_btn+0x1>
     626:	03 ef       	ldi	r16, 0xF3	; 243
     628:	10 e0       	ldi	r17, 0x00	; 0
     62a:	40 91 eb 00 	lds	r20, 0x00EB	; 0x8000eb <kpd>
     62e:	50 91 ec 00 	lds	r21, 0x00EC	; 0x8000ec <kpd+0x1>
     632:	60 91 ed 00 	lds	r22, 0x00ED	; 0x8000ed <kpd+0x2>
     636:	70 91 ee 00 	lds	r23, 0x00EE	; 0x8000ee <kpd+0x3>
     63a:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <kpd+0x4>
     63e:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <kpd+0x5>
     642:	0e 94 3e 01 	call	0x27c	; 0x27c <readNumber>
			while(btn_value_temp != BTN_ENTER_PRESSED){
     646:	14 c0       	rjmp	.+40     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
				readNumber(kpd,zero_enter_btn,&btn_value_temp);
     648:	20 91 d5 00 	lds	r18, 0x00D5	; 0x8000d5 <zero_enter_btn>
     64c:	30 91 d6 00 	lds	r19, 0x00D6	; 0x8000d6 <zero_enter_btn+0x1>
     650:	03 ef       	ldi	r16, 0xF3	; 243
     652:	10 e0       	ldi	r17, 0x00	; 0
     654:	40 91 eb 00 	lds	r20, 0x00EB	; 0x8000eb <kpd>
     658:	50 91 ec 00 	lds	r21, 0x00EC	; 0x8000ec <kpd+0x1>
     65c:	60 91 ed 00 	lds	r22, 0x00ED	; 0x8000ed <kpd+0x2>
     660:	70 91 ee 00 	lds	r23, 0x00EE	; 0x8000ee <kpd+0x3>
     664:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <kpd+0x4>
     668:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <kpd+0x5>
     66c:	0e 94 3e 01 	call	0x27c	; 0x27c <readNumber>
				Timer0_Delay(50);
			}
					
			// wait for enter
			readNumber(kpd,zero_enter_btn,&btn_value_temp);
			while(btn_value_temp != BTN_ENTER_PRESSED){
     670:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <btn_value_temp>
     674:	8b 30       	cpi	r24, 0x0B	; 11
     676:	41 f7       	brne	.-48     	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
				readNumber(kpd,zero_enter_btn,&btn_value_temp);
			}
			// check if PIN is correct 
			counter1++;
     678:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <counter1>
     67c:	8f 5f       	subi	r24, 0xFF	; 255
     67e:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <counter1>
			if (counter1 == 1)
			{
				is_pin_correct = 0;
			}
		}while((counter1<2)&&!is_pin_correct);
     682:	82 30       	cpi	r24, 0x02	; 2
     684:	08 f4       	brcc	.+2      	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
     686:	11 cf       	rjmp	.-478    	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>

		if (counter1>=2)
     688:	82 30       	cpi	r24, 0x02	; 2
     68a:	08 f4       	brcc	.+2      	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
     68c:	4c c0       	rjmp	.+152    	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
		{
			// Turn Alarm ON 
			LCD_clearScreen(atm_lcd);
     68e:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     692:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     696:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     69a:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     69e:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     6a2:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     6a6:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     6aa:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     6ae:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     6b2:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     6b6:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     6ba:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
			LCD_displayStringRowColumn(atm_lcd,0,3,"ERROR");
     6be:	0f 2e       	mov	r0, r31
     6c0:	f6 ec       	ldi	r31, 0xC6	; 198
     6c2:	8f 2e       	mov	r8, r31
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	9f 2e       	mov	r9, r31
     6c8:	f0 2d       	mov	r31, r0
     6ca:	0f 2e       	mov	r0, r31
     6cc:	f3 e0       	ldi	r31, 0x03	; 3
     6ce:	af 2e       	mov	r10, r31
     6d0:	f0 2d       	mov	r31, r0
     6d2:	c1 2c       	mov	r12, r1
     6d4:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     6d8:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     6dc:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     6e0:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     6e4:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     6e8:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     6ec:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     6f0:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     6f4:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     6f8:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     6fc:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     700:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
			Timer0_Delay(1000);
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	8a e7       	ldi	r24, 0x7A	; 122
     70a:	94 e4       	ldi	r25, 0x44	; 68
     70c:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
			buzzer_digitalwrite(buzzer,DIO_HIGH);
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <buzzer>
     716:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <buzzer+0x1>
     71a:	0e 94 4f 04 	call	0x89e	; 0x89e <buzzer_digitalwrite>
			ATM_STATUS = ATM_BLOKED_MODE;
     71e:	81 e0       	ldi	r24, 0x01	; 1
     720:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <ATM_STATUS>
			return;
     724:	41 c0       	rjmp	.+130    	; 0x7a8 <__EEPROM_REGION_LENGTH__+0x3a8>
		}
		LCD_clearScreen(atm_lcd);
     726:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     72a:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     72e:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     732:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     736:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     73a:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     73e:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     742:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     746:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     74a:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     74e:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     752:	0e 94 5d 07 	call	0xeba	; 0xeba <LCD_clearScreen>
		LCD_displayStringRowColumn(atm_lcd,0,3,"OK");
     756:	0f 2e       	mov	r0, r31
     758:	fc ec       	ldi	r31, 0xCC	; 204
     75a:	8f 2e       	mov	r8, r31
     75c:	f0 e0       	ldi	r31, 0x00	; 0
     75e:	9f 2e       	mov	r9, r31
     760:	f0 2d       	mov	r31, r0
     762:	0f 2e       	mov	r0, r31
     764:	f3 e0       	ldi	r31, 0x03	; 3
     766:	af 2e       	mov	r10, r31
     768:	f0 2d       	mov	r31, r0
     76a:	c1 2c       	mov	r12, r1
     76c:	e0 90 db 00 	lds	r14, 0x00DB	; 0x8000db <atm_lcd>
     770:	f0 90 dc 00 	lds	r15, 0x00DC	; 0x8000dc <atm_lcd+0x1>
     774:	00 91 dd 00 	lds	r16, 0x00DD	; 0x8000dd <atm_lcd+0x2>
     778:	10 91 de 00 	lds	r17, 0x00DE	; 0x8000de <atm_lcd+0x3>
     77c:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <atm_lcd+0x4>
     780:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <atm_lcd+0x5>
     784:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <atm_lcd+0x6>
     788:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <atm_lcd+0x7>
     78c:	60 91 e3 00 	lds	r22, 0x00E3	; 0x8000e3 <atm_lcd+0x8>
     790:	70 91 e4 00 	lds	r23, 0x00E4	; 0x8000e4 <atm_lcd+0x9>
     794:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <atm_lcd+0xa>
     798:	0e 94 15 07 	call	0xe2a	; 0xe2a <LCD_displayStringRowColumn>
		Timer0_Delay(1000);
     79c:	60 e0       	ldi	r22, 0x00	; 0
     79e:	70 e0       	ldi	r23, 0x00	; 0
     7a0:	8a e7       	ldi	r24, 0x7A	; 122
     7a2:	94 e4       	ldi	r25, 0x44	; 68
     7a4:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
	}
}
     7a8:	cf 91       	pop	r28
     7aa:	1f 91       	pop	r17
     7ac:	0f 91       	pop	r16
     7ae:	ff 90       	pop	r15
     7b0:	ef 90       	pop	r14
     7b2:	cf 90       	pop	r12
     7b4:	af 90       	pop	r10
     7b6:	9f 90       	pop	r9
     7b8:	8f 90       	pop	r8
     7ba:	08 95       	ret

000007bc <__vector_3>:


ISR(INT2_vect){
     7bc:	1f 92       	push	r1
     7be:	0f 92       	push	r0
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	0f 92       	push	r0
     7c4:	11 24       	eor	r1, r1
     7c6:	8f 93       	push	r24
     7c8:	9f 93       	push	r25
	card_trigger_signal = !card_trigger_signal;
     7ca:	90 91 e6 00 	lds	r25, 0x00E6	; 0x8000e6 <card_trigger_signal>
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	91 11       	cpse	r25, r1
     7d2:	80 e0       	ldi	r24, 0x00	; 0
     7d4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <card_trigger_signal>
     7d8:	9f 91       	pop	r25
     7da:	8f 91       	pop	r24
     7dc:	0f 90       	pop	r0
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <BUTTON_init>:

void BUTTON_init(ST_PBTN_t button){
	dio_init(button.button_port,button.button_pin,DIO_IN);
}
void BUTTON_status(ST_PBTN_t button,uint8 *status){
	dio_read_pin(button.button_port,button.button_pin,status);
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	69 2f       	mov	r22, r25
     7ea:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     7ee:	08 95       	ret

000007f0 <BUTTON_read_zero_enter>:
}


void BUTTON_read_zero_enter(ST_PBTN_t button,uint8 * value){
     7f0:	ef 92       	push	r14
     7f2:	ff 92       	push	r15
     7f4:	0f 93       	push	r16
     7f6:	1f 93       	push	r17
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	00 d0       	rcall	.+0      	; 0x7fe <BUTTON_read_zero_enter+0xe>
     7fe:	1f 92       	push	r1
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	8b 01       	movw	r16, r22
	 uint8 button_state = 0;
     806:	19 82       	std	Y+1, r1	; 0x01
	volatile uint16 timeCounter = 0;
     808:	1b 82       	std	Y+3, r1	; 0x03
     80a:	1a 82       	std	Y+2, r1	; 0x02
	dio_read_pin(button.button_port,button.button_pin,&button_state);
     80c:	f9 2e       	mov	r15, r25
     80e:	e8 2e       	mov	r14, r24
     810:	ae 01       	movw	r20, r28
     812:	4f 5f       	subi	r20, 0xFF	; 255
     814:	5f 4f       	sbci	r21, 0xFF	; 255
     816:	69 2f       	mov	r22, r25
     818:	0e 94 71 08 	call	0x10e2	; 0x10e2 <dio_read_pin>
	if (button_state == DIO_HIGH)
     81c:	89 81       	ldd	r24, Y+1	; 0x01
     81e:	81 30       	cpi	r24, 0x01	; 1
     820:	61 f5       	brne	.+88     	; 0x87a <__stack+0x1b>
     822:	27 c0       	rjmp	.+78     	; 0x872 <__stack+0x13>
	{
		while(button_state == DIO_HIGH){
			Timer0_Delay(BTN_MIN_SECOND);
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	88 e4       	ldi	r24, 0x48	; 72
     82a:	92 e4       	ldi	r25, 0x42	; 66
     82c:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
			timeCounter += BTN_MIN_SECOND;
     830:	8a 81       	ldd	r24, Y+2	; 0x02
     832:	9b 81       	ldd	r25, Y+3	; 0x03
     834:	c2 96       	adiw	r24, 0x32	; 50
     836:	9b 83       	std	Y+3, r25	; 0x03
     838:	8a 83       	std	Y+2, r24	; 0x02
			dio_read_pin(button.button_port,button.button_pin,&button_state);
     83a:	ae 01       	movw	r20, r28
     83c:	4f 5f       	subi	r20, 0xFF	; 255
     83e:	5f 4f       	sbci	r21, 0xFF	; 255
     840:	6f 2d       	mov	r22, r15
     842:	8e 2d       	mov	r24, r14
     844:	0e 94 71 08 	call	0x10e2	; 0x10e2 <dio_read_pin>
			if (button_state == DIO_LOW && timeCounter < BTN_2_SECOND)
     848:	89 81       	ldd	r24, Y+1	; 0x01
     84a:	81 11       	cpse	r24, r1
     84c:	09 c0       	rjmp	.+18     	; 0x860 <__stack+0x1>
     84e:	8a 81       	ldd	r24, Y+2	; 0x02
     850:	9b 81       	ldd	r25, Y+3	; 0x03
     852:	8c 3d       	cpi	r24, 0xDC	; 220
     854:	95 40       	sbci	r25, 0x05	; 5
     856:	20 f4       	brcc	.+8      	; 0x860 <__stack+0x1>
			{
				*value = BTN_ZERO_PRESSED;
     858:	8a e0       	ldi	r24, 0x0A	; 10
     85a:	f8 01       	movw	r30, r16
     85c:	80 83       	st	Z, r24
     85e:	09 c0       	rjmp	.+18     	; 0x872 <__stack+0x13>
			}
			else if (timeCounter >= BTN_2_SECOND)
     860:	8a 81       	ldd	r24, Y+2	; 0x02
     862:	9b 81       	ldd	r25, Y+3	; 0x03
     864:	8c 3d       	cpi	r24, 0xDC	; 220
     866:	95 40       	sbci	r25, 0x05	; 5
     868:	20 f0       	brcs	.+8      	; 0x872 <__stack+0x13>
			{
				*value = BTN_ENTER_PRESSED;
     86a:	8b e0       	ldi	r24, 0x0B	; 11
     86c:	f8 01       	movw	r30, r16
     86e:	80 83       	st	Z, r24
				break;
     870:	07 c0       	rjmp	.+14     	; 0x880 <__stack+0x21>
	 uint8 button_state = 0;
	volatile uint16 timeCounter = 0;
	dio_read_pin(button.button_port,button.button_pin,&button_state);
	if (button_state == DIO_HIGH)
	{
		while(button_state == DIO_HIGH){
     872:	89 81       	ldd	r24, Y+1	; 0x01
     874:	81 30       	cpi	r24, 0x01	; 1
     876:	b1 f2       	breq	.-84     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     878:	03 c0       	rjmp	.+6      	; 0x880 <__stack+0x21>
			}
		}
	}
	else
	{
		*value = BTN_NO_PRESS;//NO
     87a:	8c e0       	ldi	r24, 0x0C	; 12
     87c:	f8 01       	movw	r30, r16
     87e:	80 83       	st	Z, r24
	}
     880:	0f 90       	pop	r0
     882:	0f 90       	pop	r0
     884:	0f 90       	pop	r0
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	08 95       	ret

00000894 <buzzer_init>:

/*============= FUNCTION DEFINITION =============*/


void buzzer_init(ST_BUZZER_t buzzer){
	dio_init(buzzer.buzzer_port,buzzer.buzzer_pin,DIO_LOW);
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	69 2f       	mov	r22, r25
     898:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     89c:	08 95       	ret

0000089e <buzzer_digitalwrite>:
}
void buzzer_digitalwrite(ST_BUZZER_t buzzer,uint8 value){
     89e:	46 2f       	mov	r20, r22
	dio_write_pin(buzzer.buzzer_port,buzzer.buzzer_pin,value);
     8a0:	69 2f       	mov	r22, r25
     8a2:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     8a6:	08 95       	ret

000008a8 <KPD_init>:
#include "keypad.h"
#include "../../MCAL/timer0/timer0.h"
#include "../../MCAL/DIO/DIO.h"


void KPD_init(ST_KPD_t kpd){
     8a8:	1f 93       	push	r17
     8aa:	cf 93       	push	r28
     8ac:	df 93       	push	r29
     8ae:	00 d0       	rcall	.+0      	; 0x8b0 <KPD_init+0x8>
     8b0:	00 d0       	rcall	.+0      	; 0x8b2 <KPD_init+0xa>
     8b2:	00 d0       	rcall	.+0      	; 0x8b4 <KPD_init+0xc>
     8b4:	cd b7       	in	r28, 0x3d	; 61
     8b6:	de b7       	in	r29, 0x3e	; 62
     8b8:	49 83       	std	Y+1, r20	; 0x01
     8ba:	5a 83       	std	Y+2, r21	; 0x02
     8bc:	6b 83       	std	Y+3, r22	; 0x03
     8be:	7c 83       	std	Y+4, r23	; 0x04
     8c0:	8d 83       	std	Y+5, r24	; 0x05
     8c2:	9e 83       	std	Y+6, r25	; 0x06
	// set cols as an input
	for (uint8 i = 0 ; i<kpd.number_of_rows;i++)
     8c4:	10 e0       	ldi	r17, 0x00	; 0
     8c6:	07 c0       	rjmp	.+14     	; 0x8d6 <KPD_init+0x2e>
	{
		dio_init(kpd.rows_port,(kpd.rows_first_pin+i),DIO_IN);
     8c8:	6c 81       	ldd	r22, Y+4	; 0x04
     8ca:	61 0f       	add	r22, r17
     8cc:	40 e0       	ldi	r20, 0x00	; 0
     8ce:	8e 81       	ldd	r24, Y+6	; 0x06
     8d0:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
#include "../../MCAL/DIO/DIO.h"


void KPD_init(ST_KPD_t kpd){
	// set cols as an input
	for (uint8 i = 0 ; i<kpd.number_of_rows;i++)
     8d4:	1f 5f       	subi	r17, 0xFF	; 255
     8d6:	8a 81       	ldd	r24, Y+2	; 0x02
     8d8:	18 17       	cp	r17, r24
     8da:	b0 f3       	brcs	.-20     	; 0x8c8 <KPD_init+0x20>
     8dc:	10 e0       	ldi	r17, 0x00	; 0
     8de:	07 c0       	rjmp	.+14     	; 0x8ee <KPD_init+0x46>
		dio_init(kpd.rows_port,(kpd.rows_first_pin+i),DIO_IN);
	}
	// set rows as input 
	for (uint8 i = 0 ; i<kpd.number_of_cols;i++)
	{
		dio_init(kpd.cols_port,(kpd.cols_first_pin+i),DIO_OUT);
     8e0:	6b 81       	ldd	r22, Y+3	; 0x03
     8e2:	61 0f       	add	r22, r17
     8e4:	41 e0       	ldi	r20, 0x01	; 1
     8e6:	8d 81       	ldd	r24, Y+5	; 0x05
     8e8:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
	for (uint8 i = 0 ; i<kpd.number_of_rows;i++)
	{
		dio_init(kpd.rows_port,(kpd.rows_first_pin+i),DIO_IN);
	}
	// set rows as input 
	for (uint8 i = 0 ; i<kpd.number_of_cols;i++)
     8ec:	1f 5f       	subi	r17, 0xFF	; 255
     8ee:	89 81       	ldd	r24, Y+1	; 0x01
     8f0:	18 17       	cp	r17, r24
     8f2:	b0 f3       	brcs	.-20     	; 0x8e0 <KPD_init+0x38>
	{
		dio_init(kpd.cols_port,(kpd.cols_first_pin+i),DIO_OUT);
	}
	
}
     8f4:	26 96       	adiw	r28, 0x06	; 6
     8f6:	0f b6       	in	r0, 0x3f	; 63
     8f8:	f8 94       	cli
     8fa:	de bf       	out	0x3e, r29	; 62
     8fc:	0f be       	out	0x3f, r0	; 63
     8fe:	cd bf       	out	0x3d, r28	; 61
     900:	df 91       	pop	r29
     902:	cf 91       	pop	r28
     904:	1f 91       	pop	r17
     906:	08 95       	ret

00000908 <KPD_get_pressed_key>:
void KPD_get_pressed_key(ST_KPD_t kpd,uint8*key){
     908:	bf 92       	push	r11
     90a:	cf 92       	push	r12
     90c:	df 92       	push	r13
     90e:	ef 92       	push	r14
     910:	ff 92       	push	r15
     912:	0f 93       	push	r16
     914:	1f 93       	push	r17
     916:	cf 93       	push	r28
     918:	df 93       	push	r29
     91a:	cd b7       	in	r28, 0x3d	; 61
     91c:	de b7       	in	r29, 0x3e	; 62
     91e:	27 97       	sbiw	r28, 0x07	; 7
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	f8 94       	cli
     924:	de bf       	out	0x3e, r29	; 62
     926:	0f be       	out	0x3f, r0	; 63
     928:	cd bf       	out	0x3d, r28	; 61
     92a:	4a 83       	std	Y+2, r20	; 0x02
     92c:	5b 83       	std	Y+3, r21	; 0x03
     92e:	6c 83       	std	Y+4, r22	; 0x04
     930:	7d 83       	std	Y+5, r23	; 0x05
     932:	8e 83       	std	Y+6, r24	; 0x06
     934:	9f 83       	std	Y+7, r25	; 0x07
     936:	79 01       	movw	r14, r18
	uint8 value; // counters
	// cols loops
	*key= KPD_NO_KEY_PRESSED;
     938:	8c e0       	ldi	r24, 0x0C	; 12
     93a:	f9 01       	movw	r30, r18
     93c:	80 83       	st	Z, r24
	for (uint8 col = 0 ; col < kpd.number_of_cols;col++)
     93e:	00 e0       	ldi	r16, 0x00	; 0
     940:	32 c0       	rjmp	.+100    	; 0x9a6 <KPD_get_pressed_key+0x9e>
	{
		// activate cols
		
		dio_write_pin(kpd.cols_port,(kpd.cols_first_pin+col),DIO_HIGH);
     942:	dc 80       	ldd	r13, Y+4	; 0x04
     944:	d0 0e       	add	r13, r16
     946:	be 80       	ldd	r11, Y+6	; 0x06
     948:	41 e0       	ldi	r20, 0x01	; 1
     94a:	6d 2d       	mov	r22, r13
     94c:	8b 2d       	mov	r24, r11
     94e:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
		// rows loops
		
		for (uint8 row = 0;row<kpd.number_of_rows;row++)
     952:	10 e0       	ldi	r17, 0x00	; 0
     954:	19 c0       	rjmp	.+50     	; 0x988 <KPD_get_pressed_key+0x80>
		{
			// get read 
			dio_read_pin(kpd.rows_port,(kpd.rows_first_pin+row),&value);
     956:	6d 81       	ldd	r22, Y+5	; 0x05
     958:	61 0f       	add	r22, r17
     95a:	ae 01       	movw	r20, r28
     95c:	4f 5f       	subi	r20, 0xFF	; 255
     95e:	5f 4f       	sbci	r21, 0xFF	; 255
     960:	8f 81       	ldd	r24, Y+7	; 0x07
     962:	0e 94 71 08 	call	0x10e2	; 0x10e2 <dio_read_pin>
			// check if button is pressed
			if (value == DIO_HIGH)
     966:	89 81       	ldd	r24, Y+1	; 0x01
     968:	81 30       	cpi	r24, 0x01	; 1
     96a:	39 f4       	brne	.+14     	; 0x97a <KPD_get_pressed_key+0x72>
			{
				// return key (row_number * numbers_of_cols) + (column number +1)
				*key =  ((row * kpd.number_of_cols) + col + 1);
     96c:	1c 9d       	mul	r17, r12
     96e:	00 0d       	add	r16, r0
     970:	11 24       	eor	r1, r1
     972:	0f 5f       	subi	r16, 0xFF	; 255
     974:	f7 01       	movw	r30, r14
     976:	00 83       	st	Z, r16
     978:	19 c0       	rjmp	.+50     	; 0x9ac <KPD_get_pressed_key+0xa4>
				return;
			}
			Timer0_Delay(10);
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	80 e2       	ldi	r24, 0x20	; 32
     980:	91 e4       	ldi	r25, 0x41	; 65
     982:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
		// activate cols
		
		dio_write_pin(kpd.cols_port,(kpd.cols_first_pin+col),DIO_HIGH);
		// rows loops
		
		for (uint8 row = 0;row<kpd.number_of_rows;row++)
     986:	1f 5f       	subi	r17, 0xFF	; 255
     988:	8b 81       	ldd	r24, Y+3	; 0x03
     98a:	18 17       	cp	r17, r24
     98c:	20 f3       	brcs	.-56     	; 0x956 <KPD_get_pressed_key+0x4e>
				return;
			}
			Timer0_Delay(10);
		}
		
		dio_write_pin(kpd.cols_port,(kpd.cols_first_pin+col),DIO_LOW);
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	6d 2d       	mov	r22, r13
     992:	8b 2d       	mov	r24, r11
     994:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
		Timer0_Delay(10);
     998:	60 e0       	ldi	r22, 0x00	; 0
     99a:	70 e0       	ldi	r23, 0x00	; 0
     99c:	80 e2       	ldi	r24, 0x20	; 32
     99e:	91 e4       	ldi	r25, 0x41	; 65
     9a0:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
}
void KPD_get_pressed_key(ST_KPD_t kpd,uint8*key){
	uint8 value; // counters
	// cols loops
	*key= KPD_NO_KEY_PRESSED;
	for (uint8 col = 0 ; col < kpd.number_of_cols;col++)
     9a4:	0f 5f       	subi	r16, 0xFF	; 255
     9a6:	ca 80       	ldd	r12, Y+2	; 0x02
     9a8:	0c 15       	cp	r16, r12
     9aa:	58 f2       	brcs	.-106    	; 0x942 <KPD_get_pressed_key+0x3a>
		dio_write_pin(kpd.cols_port,(kpd.cols_first_pin+col),DIO_LOW);
		Timer0_Delay(10);
	}
	
	
     9ac:	27 96       	adiw	r28, 0x07	; 7
     9ae:	0f b6       	in	r0, 0x3f	; 63
     9b0:	f8 94       	cli
     9b2:	de bf       	out	0x3e, r29	; 62
     9b4:	0f be       	out	0x3f, r0	; 63
     9b6:	cd bf       	out	0x3d, r28	; 61
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	1f 91       	pop	r17
     9be:	0f 91       	pop	r16
     9c0:	ff 90       	pop	r15
     9c2:	ef 90       	pop	r14
     9c4:	df 90       	pop	r13
     9c6:	cf 90       	pop	r12
     9c8:	bf 90       	pop	r11
     9ca:	08 95       	ret

000009cc <LCD_sendCommand>:
 */
void LCD_intgerToString(ST_LCD_t lcd,int data){
	  char buff[16]; /* String to hold the ascii result */
	  itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
	  LCD_displayString(lcd,buff); /* Display the string */
}
     9cc:	cf 92       	push	r12
     9ce:	df 92       	push	r13
     9d0:	ef 92       	push	r14
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	2c 97       	sbiw	r28, 0x0c	; 12
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61
     9ec:	8e 2d       	mov	r24, r14
     9ee:	fb 82       	std	Y+3, r15	; 0x03
     9f0:	0c 83       	std	Y+4, r16	; 0x04
     9f2:	61 2f       	mov	r22, r17
     9f4:	2e 83       	std	Y+6, r18	; 0x06
     9f6:	3f 83       	std	Y+7, r19	; 0x07
     9f8:	48 87       	std	Y+8, r20	; 0x08
     9fa:	19 82       	std	Y+1, r1	; 0x01
     9fc:	40 e0       	ldi	r20, 0x00	; 0
     9fe:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     a02:	40 e0       	ldi	r20, 0x00	; 0
     a04:	6e 81       	ldd	r22, Y+6	; 0x06
     a06:	8b 81       	ldd	r24, Y+3	; 0x03
     a08:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     a0c:	60 e0       	ldi	r22, 0x00	; 0
     a0e:	70 e0       	ldi	r23, 0x00	; 0
     a10:	80 e8       	ldi	r24, 0x80	; 128
     a12:	9f e3       	ldi	r25, 0x3F	; 63
     a14:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     a18:	0f 81       	ldd	r16, Y+7	; 0x07
     a1a:	1c 81       	ldd	r17, Y+4	; 0x04
     a1c:	41 e0       	ldi	r20, 0x01	; 1
     a1e:	60 2f       	mov	r22, r16
     a20:	81 2f       	mov	r24, r17
     a22:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     a26:	60 e0       	ldi	r22, 0x00	; 0
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	80 e8       	ldi	r24, 0x80	; 128
     a2c:	9f e3       	ldi	r25, 0x3F	; 63
     a2e:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     a32:	f8 84       	ldd	r15, Y+8	; 0x08
     a34:	be 01       	movw	r22, r28
     a36:	6f 5f       	subi	r22, 0xFF	; 255
     a38:	7f 4f       	sbci	r23, 0xFF	; 255
     a3a:	8f 2d       	mov	r24, r15
     a3c:	0e 94 ab 08 	call	0x1156	; 0x1156 <dio_read_port>
     a40:	69 81       	ldd	r22, Y+1	; 0x01
     a42:	6f 70       	andi	r22, 0x0F	; 15
     a44:	8c 2d       	mov	r24, r12
     a46:	80 7f       	andi	r24, 0xF0	; 240
     a48:	68 2b       	or	r22, r24
     a4a:	69 83       	std	Y+1, r22	; 0x01
     a4c:	8f 2d       	mov	r24, r15
     a4e:	0e 94 c9 08 	call	0x1192	; 0x1192 <dio_write_port>
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	80 e8       	ldi	r24, 0x80	; 128
     a58:	9f e3       	ldi	r25, 0x3F	; 63
     a5a:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     a5e:	40 e0       	ldi	r20, 0x00	; 0
     a60:	60 2f       	mov	r22, r16
     a62:	81 2f       	mov	r24, r17
     a64:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     a68:	60 e0       	ldi	r22, 0x00	; 0
     a6a:	70 e0       	ldi	r23, 0x00	; 0
     a6c:	80 e8       	ldi	r24, 0x80	; 128
     a6e:	9f e3       	ldi	r25, 0x3F	; 63
     a70:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     a74:	41 e0       	ldi	r20, 0x01	; 1
     a76:	60 2f       	mov	r22, r16
     a78:	81 2f       	mov	r24, r17
     a7a:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     a7e:	be 01       	movw	r22, r28
     a80:	6f 5f       	subi	r22, 0xFF	; 255
     a82:	7f 4f       	sbci	r23, 0xFF	; 255
     a84:	8f 2d       	mov	r24, r15
     a86:	0e 94 ab 08 	call	0x1156	; 0x1156 <dio_read_port>
     a8a:	80 e1       	ldi	r24, 0x10	; 16
     a8c:	c8 9e       	mul	r12, r24
     a8e:	60 01       	movw	r12, r0
     a90:	11 24       	eor	r1, r1
     a92:	69 81       	ldd	r22, Y+1	; 0x01
     a94:	6f 70       	andi	r22, 0x0F	; 15
     a96:	6c 29       	or	r22, r12
     a98:	69 83       	std	Y+1, r22	; 0x01
     a9a:	8f 2d       	mov	r24, r15
     a9c:	0e 94 c9 08 	call	0x1192	; 0x1192 <dio_write_port>
     aa0:	60 e0       	ldi	r22, 0x00	; 0
     aa2:	70 e0       	ldi	r23, 0x00	; 0
     aa4:	80 e8       	ldi	r24, 0x80	; 128
     aa6:	9f e3       	ldi	r25, 0x3F	; 63
     aa8:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	60 2f       	mov	r22, r16
     ab0:	81 2f       	mov	r24, r17
     ab2:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	80 e8       	ldi	r24, 0x80	; 128
     abc:	9f e3       	ldi	r25, 0x3F	; 63
     abe:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     ac2:	2c 96       	adiw	r28, 0x0c	; 12
     ac4:	0f b6       	in	r0, 0x3f	; 63
     ac6:	f8 94       	cli
     ac8:	de bf       	out	0x3e, r29	; 62
     aca:	0f be       	out	0x3f, r0	; 63
     acc:	cd bf       	out	0x3d, r28	; 61
     ace:	df 91       	pop	r29
     ad0:	cf 91       	pop	r28
     ad2:	1f 91       	pop	r17
     ad4:	0f 91       	pop	r16
     ad6:	ff 90       	pop	r15
     ad8:	ef 90       	pop	r14
     ada:	df 90       	pop	r13
     adc:	cf 90       	pop	r12
     ade:	08 95       	ret

00000ae0 <LCD_init>:
     ae0:	cf 92       	push	r12
     ae2:	ef 92       	push	r14
     ae4:	ff 92       	push	r15
     ae6:	0f 93       	push	r16
     ae8:	1f 93       	push	r17
     aea:	cf 93       	push	r28
     aec:	df 93       	push	r29
     aee:	cd b7       	in	r28, 0x3d	; 61
     af0:	de b7       	in	r29, 0x3e	; 62
     af2:	2b 97       	sbiw	r28, 0x0b	; 11
     af4:	0f b6       	in	r0, 0x3f	; 63
     af6:	f8 94       	cli
     af8:	de bf       	out	0x3e, r29	; 62
     afa:	0f be       	out	0x3f, r0	; 63
     afc:	cd bf       	out	0x3d, r28	; 61
     afe:	e9 82       	std	Y+1, r14	; 0x01
     b00:	fa 82       	std	Y+2, r15	; 0x02
     b02:	0b 83       	std	Y+3, r16	; 0x03
     b04:	1c 83       	std	Y+4, r17	; 0x04
     b06:	2d 83       	std	Y+5, r18	; 0x05
     b08:	3e 83       	std	Y+6, r19	; 0x06
     b0a:	4f 83       	std	Y+7, r20	; 0x07
     b0c:	58 87       	std	Y+8, r21	; 0x08
     b0e:	69 87       	std	Y+9, r22	; 0x09
     b10:	7a 87       	std	Y+10, r23	; 0x0a
     b12:	8b 87       	std	Y+11, r24	; 0x0b
     b14:	41 e0       	ldi	r20, 0x01	; 1
     b16:	63 2f       	mov	r22, r19
     b18:	80 2f       	mov	r24, r16
     b1a:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b1e:	41 e0       	ldi	r20, 0x01	; 1
     b20:	6c 81       	ldd	r22, Y+4	; 0x04
     b22:	89 81       	ldd	r24, Y+1	; 0x01
     b24:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b28:	41 e0       	ldi	r20, 0x01	; 1
     b2a:	6d 81       	ldd	r22, Y+5	; 0x05
     b2c:	8a 81       	ldd	r24, Y+2	; 0x02
     b2e:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b32:	1f 81       	ldd	r17, Y+7	; 0x07
     b34:	41 e0       	ldi	r20, 0x01	; 1
     b36:	68 85       	ldd	r22, Y+8	; 0x08
     b38:	81 2f       	mov	r24, r17
     b3a:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b3e:	41 e0       	ldi	r20, 0x01	; 1
     b40:	69 85       	ldd	r22, Y+9	; 0x09
     b42:	81 2f       	mov	r24, r17
     b44:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b48:	41 e0       	ldi	r20, 0x01	; 1
     b4a:	6a 85       	ldd	r22, Y+10	; 0x0a
     b4c:	81 2f       	mov	r24, r17
     b4e:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b52:	41 e0       	ldi	r20, 0x01	; 1
     b54:	6b 85       	ldd	r22, Y+11	; 0x0b
     b56:	81 2f       	mov	r24, r17
     b58:	0e 94 83 07 	call	0xf06	; 0xf06 <dio_init>
     b5c:	68 94       	set
     b5e:	cc 24       	eor	r12, r12
     b60:	c1 f8       	bld	r12, 1
     b62:	e9 80       	ldd	r14, Y+1	; 0x01
     b64:	fa 80       	ldd	r15, Y+2	; 0x02
     b66:	0b 81       	ldd	r16, Y+3	; 0x03
     b68:	1c 81       	ldd	r17, Y+4	; 0x04
     b6a:	2d 81       	ldd	r18, Y+5	; 0x05
     b6c:	3e 81       	ldd	r19, Y+6	; 0x06
     b6e:	4f 81       	ldd	r20, Y+7	; 0x07
     b70:	58 85       	ldd	r21, Y+8	; 0x08
     b72:	69 85       	ldd	r22, Y+9	; 0x09
     b74:	7a 85       	ldd	r23, Y+10	; 0x0a
     b76:	8b 85       	ldd	r24, Y+11	; 0x0b
     b78:	0e 94 e6 04 	call	0x9cc	; 0x9cc <LCD_sendCommand>
     b7c:	0f 2e       	mov	r0, r31
     b7e:	f8 e2       	ldi	r31, 0x28	; 40
     b80:	cf 2e       	mov	r12, r31
     b82:	f0 2d       	mov	r31, r0
     b84:	e9 80       	ldd	r14, Y+1	; 0x01
     b86:	fa 80       	ldd	r15, Y+2	; 0x02
     b88:	0b 81       	ldd	r16, Y+3	; 0x03
     b8a:	1c 81       	ldd	r17, Y+4	; 0x04
     b8c:	2d 81       	ldd	r18, Y+5	; 0x05
     b8e:	3e 81       	ldd	r19, Y+6	; 0x06
     b90:	4f 81       	ldd	r20, Y+7	; 0x07
     b92:	58 85       	ldd	r21, Y+8	; 0x08
     b94:	69 85       	ldd	r22, Y+9	; 0x09
     b96:	7a 85       	ldd	r23, Y+10	; 0x0a
     b98:	8b 85       	ldd	r24, Y+11	; 0x0b
     b9a:	0e 94 e6 04 	call	0x9cc	; 0x9cc <LCD_sendCommand>
     b9e:	0f 2e       	mov	r0, r31
     ba0:	fc e0       	ldi	r31, 0x0C	; 12
     ba2:	cf 2e       	mov	r12, r31
     ba4:	f0 2d       	mov	r31, r0
     ba6:	e9 80       	ldd	r14, Y+1	; 0x01
     ba8:	fa 80       	ldd	r15, Y+2	; 0x02
     baa:	0b 81       	ldd	r16, Y+3	; 0x03
     bac:	1c 81       	ldd	r17, Y+4	; 0x04
     bae:	2d 81       	ldd	r18, Y+5	; 0x05
     bb0:	3e 81       	ldd	r19, Y+6	; 0x06
     bb2:	4f 81       	ldd	r20, Y+7	; 0x07
     bb4:	58 85       	ldd	r21, Y+8	; 0x08
     bb6:	69 85       	ldd	r22, Y+9	; 0x09
     bb8:	7a 85       	ldd	r23, Y+10	; 0x0a
     bba:	8b 85       	ldd	r24, Y+11	; 0x0b
     bbc:	0e 94 e6 04 	call	0x9cc	; 0x9cc <LCD_sendCommand>
     bc0:	cc 24       	eor	r12, r12
     bc2:	c3 94       	inc	r12
     bc4:	e9 80       	ldd	r14, Y+1	; 0x01
     bc6:	fa 80       	ldd	r15, Y+2	; 0x02
     bc8:	0b 81       	ldd	r16, Y+3	; 0x03
     bca:	1c 81       	ldd	r17, Y+4	; 0x04
     bcc:	2d 81       	ldd	r18, Y+5	; 0x05
     bce:	3e 81       	ldd	r19, Y+6	; 0x06
     bd0:	4f 81       	ldd	r20, Y+7	; 0x07
     bd2:	58 85       	ldd	r21, Y+8	; 0x08
     bd4:	69 85       	ldd	r22, Y+9	; 0x09
     bd6:	7a 85       	ldd	r23, Y+10	; 0x0a
     bd8:	8b 85       	ldd	r24, Y+11	; 0x0b
     bda:	0e 94 e6 04 	call	0x9cc	; 0x9cc <LCD_sendCommand>
     bde:	2b 96       	adiw	r28, 0x0b	; 11
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	f8 94       	cli
     be4:	de bf       	out	0x3e, r29	; 62
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	cd bf       	out	0x3d, r28	; 61
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	ff 90       	pop	r15
     bf4:	ef 90       	pop	r14
     bf6:	cf 90       	pop	r12
     bf8:	08 95       	ret

00000bfa <LCD_displayCharacter>:
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	cf 93       	push	r28
     c08:	df 93       	push	r29
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	2c 97       	sbiw	r28, 0x0c	; 12
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	8e 2d       	mov	r24, r14
     c1c:	fb 82       	std	Y+3, r15	; 0x03
     c1e:	0c 83       	std	Y+4, r16	; 0x04
     c20:	61 2f       	mov	r22, r17
     c22:	2e 83       	std	Y+6, r18	; 0x06
     c24:	3f 83       	std	Y+7, r19	; 0x07
     c26:	48 87       	std	Y+8, r20	; 0x08
     c28:	19 82       	std	Y+1, r1	; 0x01
     c2a:	41 e0       	ldi	r20, 0x01	; 1
     c2c:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     c30:	40 e0       	ldi	r20, 0x00	; 0
     c32:	6e 81       	ldd	r22, Y+6	; 0x06
     c34:	8b 81       	ldd	r24, Y+3	; 0x03
     c36:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	80 e8       	ldi	r24, 0x80	; 128
     c40:	9f e3       	ldi	r25, 0x3F	; 63
     c42:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     c46:	0f 81       	ldd	r16, Y+7	; 0x07
     c48:	1c 81       	ldd	r17, Y+4	; 0x04
     c4a:	41 e0       	ldi	r20, 0x01	; 1
     c4c:	60 2f       	mov	r22, r16
     c4e:	81 2f       	mov	r24, r17
     c50:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     c54:	60 e0       	ldi	r22, 0x00	; 0
     c56:	70 e0       	ldi	r23, 0x00	; 0
     c58:	80 e8       	ldi	r24, 0x80	; 128
     c5a:	9f e3       	ldi	r25, 0x3F	; 63
     c5c:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     c60:	f8 84       	ldd	r15, Y+8	; 0x08
     c62:	be 01       	movw	r22, r28
     c64:	6f 5f       	subi	r22, 0xFF	; 255
     c66:	7f 4f       	sbci	r23, 0xFF	; 255
     c68:	8f 2d       	mov	r24, r15
     c6a:	0e 94 ab 08 	call	0x1156	; 0x1156 <dio_read_port>
     c6e:	69 81       	ldd	r22, Y+1	; 0x01
     c70:	6f 70       	andi	r22, 0x0F	; 15
     c72:	8c 2d       	mov	r24, r12
     c74:	80 7f       	andi	r24, 0xF0	; 240
     c76:	68 2b       	or	r22, r24
     c78:	69 83       	std	Y+1, r22	; 0x01
     c7a:	8f 2d       	mov	r24, r15
     c7c:	0e 94 c9 08 	call	0x1192	; 0x1192 <dio_write_port>
     c80:	60 e0       	ldi	r22, 0x00	; 0
     c82:	70 e0       	ldi	r23, 0x00	; 0
     c84:	80 e8       	ldi	r24, 0x80	; 128
     c86:	9f e3       	ldi	r25, 0x3F	; 63
     c88:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     c8c:	40 e0       	ldi	r20, 0x00	; 0
     c8e:	60 2f       	mov	r22, r16
     c90:	81 2f       	mov	r24, r17
     c92:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	80 e8       	ldi	r24, 0x80	; 128
     c9c:	9f e3       	ldi	r25, 0x3F	; 63
     c9e:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     ca2:	41 e0       	ldi	r20, 0x01	; 1
     ca4:	60 2f       	mov	r22, r16
     ca6:	81 2f       	mov	r24, r17
     ca8:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     cac:	be 01       	movw	r22, r28
     cae:	6f 5f       	subi	r22, 0xFF	; 255
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	8f 2d       	mov	r24, r15
     cb4:	0e 94 ab 08 	call	0x1156	; 0x1156 <dio_read_port>
     cb8:	80 e1       	ldi	r24, 0x10	; 16
     cba:	c8 9e       	mul	r12, r24
     cbc:	60 01       	movw	r12, r0
     cbe:	11 24       	eor	r1, r1
     cc0:	69 81       	ldd	r22, Y+1	; 0x01
     cc2:	6f 70       	andi	r22, 0x0F	; 15
     cc4:	6c 29       	or	r22, r12
     cc6:	69 83       	std	Y+1, r22	; 0x01
     cc8:	8f 2d       	mov	r24, r15
     cca:	0e 94 c9 08 	call	0x1192	; 0x1192 <dio_write_port>
     cce:	60 e0       	ldi	r22, 0x00	; 0
     cd0:	70 e0       	ldi	r23, 0x00	; 0
     cd2:	80 e8       	ldi	r24, 0x80	; 128
     cd4:	9f e3       	ldi	r25, 0x3F	; 63
     cd6:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     cda:	40 e0       	ldi	r20, 0x00	; 0
     cdc:	60 2f       	mov	r22, r16
     cde:	81 2f       	mov	r24, r17
     ce0:	0e 94 fa 07 	call	0xff4	; 0xff4 <dio_write_pin>
     ce4:	60 e0       	ldi	r22, 0x00	; 0
     ce6:	70 e0       	ldi	r23, 0x00	; 0
     ce8:	80 e8       	ldi	r24, 0x80	; 128
     cea:	9f e3       	ldi	r25, 0x3F	; 63
     cec:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Timer0_Delay>
     cf0:	2c 96       	adiw	r28, 0x0c	; 12
     cf2:	0f b6       	in	r0, 0x3f	; 63
     cf4:	f8 94       	cli
     cf6:	de bf       	out	0x3e, r29	; 62
     cf8:	0f be       	out	0x3f, r0	; 63
     cfa:	cd bf       	out	0x3d, r28	; 61
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	1f 91       	pop	r17
     d02:	0f 91       	pop	r16
     d04:	ff 90       	pop	r15
     d06:	ef 90       	pop	r14
     d08:	df 90       	pop	r13
     d0a:	cf 90       	pop	r12
     d0c:	08 95       	ret

00000d0e <LCD_displayString>:
     d0e:	af 92       	push	r10
     d10:	bf 92       	push	r11
     d12:	cf 92       	push	r12
     d14:	df 92       	push	r13
     d16:	ef 92       	push	r14
     d18:	ff 92       	push	r15
     d1a:	0f 93       	push	r16
     d1c:	1f 93       	push	r17
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29
     d22:	cd b7       	in	r28, 0x3d	; 61
     d24:	de b7       	in	r29, 0x3e	; 62
     d26:	2b 97       	sbiw	r28, 0x0b	; 11
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	e9 82       	std	Y+1, r14	; 0x01
     d34:	fa 82       	std	Y+2, r15	; 0x02
     d36:	0b 83       	std	Y+3, r16	; 0x03
     d38:	1c 83       	std	Y+4, r17	; 0x04
     d3a:	2d 83       	std	Y+5, r18	; 0x05
     d3c:	3e 83       	std	Y+6, r19	; 0x06
     d3e:	4f 83       	std	Y+7, r20	; 0x07
     d40:	58 87       	std	Y+8, r21	; 0x08
     d42:	69 87       	std	Y+9, r22	; 0x09
     d44:	7a 87       	std	Y+10, r23	; 0x0a
     d46:	8b 87       	std	Y+11, r24	; 0x0b
     d48:	56 01       	movw	r10, r12
     d4a:	d1 2c       	mov	r13, r1
     d4c:	0e c0       	rjmp	.+28     	; 0xd6a <LCD_displayString+0x5c>
     d4e:	e9 80       	ldd	r14, Y+1	; 0x01
     d50:	fa 80       	ldd	r15, Y+2	; 0x02
     d52:	0b 81       	ldd	r16, Y+3	; 0x03
     d54:	1c 81       	ldd	r17, Y+4	; 0x04
     d56:	2d 81       	ldd	r18, Y+5	; 0x05
     d58:	3e 81       	ldd	r19, Y+6	; 0x06
     d5a:	4f 81       	ldd	r20, Y+7	; 0x07
     d5c:	58 85       	ldd	r21, Y+8	; 0x08
     d5e:	69 85       	ldd	r22, Y+9	; 0x09
     d60:	7a 85       	ldd	r23, Y+10	; 0x0a
     d62:	8b 85       	ldd	r24, Y+11	; 0x0b
     d64:	0e 94 fd 05 	call	0xbfa	; 0xbfa <LCD_displayCharacter>
     d68:	d3 94       	inc	r13
     d6a:	f5 01       	movw	r30, r10
     d6c:	ed 0d       	add	r30, r13
     d6e:	f1 1d       	adc	r31, r1
     d70:	c0 80       	ld	r12, Z
     d72:	c1 10       	cpse	r12, r1
     d74:	ec cf       	rjmp	.-40     	; 0xd4e <LCD_displayString+0x40>
     d76:	2b 96       	adiw	r28, 0x0b	; 11
     d78:	0f b6       	in	r0, 0x3f	; 63
     d7a:	f8 94       	cli
     d7c:	de bf       	out	0x3e, r29	; 62
     d7e:	0f be       	out	0x3f, r0	; 63
     d80:	cd bf       	out	0x3d, r28	; 61
     d82:	df 91       	pop	r29
     d84:	cf 91       	pop	r28
     d86:	1f 91       	pop	r17
     d88:	0f 91       	pop	r16
     d8a:	ff 90       	pop	r15
     d8c:	ef 90       	pop	r14
     d8e:	df 90       	pop	r13
     d90:	cf 90       	pop	r12
     d92:	bf 90       	pop	r11
     d94:	af 90       	pop	r10
     d96:	08 95       	ret

00000d98 <LCD_moveCursor>:
     d98:	af 92       	push	r10
     d9a:	cf 92       	push	r12
     d9c:	ef 92       	push	r14
     d9e:	ff 92       	push	r15
     da0:	0f 93       	push	r16
     da2:	1f 93       	push	r17
     da4:	cf 93       	push	r28
     da6:	df 93       	push	r29
     da8:	cd b7       	in	r28, 0x3d	; 61
     daa:	de b7       	in	r29, 0x3e	; 62
     dac:	2b 97       	sbiw	r28, 0x0b	; 11
     dae:	0f b6       	in	r0, 0x3f	; 63
     db0:	f8 94       	cli
     db2:	de bf       	out	0x3e, r29	; 62
     db4:	0f be       	out	0x3f, r0	; 63
     db6:	cd bf       	out	0x3d, r28	; 61
     db8:	e9 82       	std	Y+1, r14	; 0x01
     dba:	fa 82       	std	Y+2, r15	; 0x02
     dbc:	0b 83       	std	Y+3, r16	; 0x03
     dbe:	1c 83       	std	Y+4, r17	; 0x04
     dc0:	2d 83       	std	Y+5, r18	; 0x05
     dc2:	3e 83       	std	Y+6, r19	; 0x06
     dc4:	4f 83       	std	Y+7, r20	; 0x07
     dc6:	58 87       	std	Y+8, r21	; 0x08
     dc8:	69 87       	std	Y+9, r22	; 0x09
     dca:	7a 87       	std	Y+10, r23	; 0x0a
     dcc:	8b 87       	std	Y+11, r24	; 0x0b
     dce:	9c 2d       	mov	r25, r12
     dd0:	8a 2d       	mov	r24, r10
     dd2:	91 30       	cpi	r25, 0x01	; 1
     dd4:	39 f0       	breq	.+14     	; 0xde4 <LCD_moveCursor+0x4c>
     dd6:	58 f0       	brcs	.+22     	; 0xdee <LCD_moveCursor+0x56>
     dd8:	92 30       	cpi	r25, 0x02	; 2
     dda:	31 f0       	breq	.+12     	; 0xde8 <LCD_moveCursor+0x50>
     ddc:	93 30       	cpi	r25, 0x03	; 3
     dde:	31 f0       	breq	.+12     	; 0xdec <LCD_moveCursor+0x54>
     de0:	80 e0       	ldi	r24, 0x00	; 0
     de2:	05 c0       	rjmp	.+10     	; 0xdee <LCD_moveCursor+0x56>
     de4:	80 5c       	subi	r24, 0xC0	; 192
     de6:	03 c0       	rjmp	.+6      	; 0xdee <LCD_moveCursor+0x56>
     de8:	80 5f       	subi	r24, 0xF0	; 240
     dea:	01 c0       	rjmp	.+2      	; 0xdee <LCD_moveCursor+0x56>
     dec:	80 5b       	subi	r24, 0xB0	; 176
     dee:	80 68       	ori	r24, 0x80	; 128
     df0:	c8 2e       	mov	r12, r24
     df2:	e9 80       	ldd	r14, Y+1	; 0x01
     df4:	fa 80       	ldd	r15, Y+2	; 0x02
     df6:	0b 81       	ldd	r16, Y+3	; 0x03
     df8:	1c 81       	ldd	r17, Y+4	; 0x04
     dfa:	2d 81       	ldd	r18, Y+5	; 0x05
     dfc:	3e 81       	ldd	r19, Y+6	; 0x06
     dfe:	4f 81       	ldd	r20, Y+7	; 0x07
     e00:	58 85       	ldd	r21, Y+8	; 0x08
     e02:	69 85       	ldd	r22, Y+9	; 0x09
     e04:	7a 85       	ldd	r23, Y+10	; 0x0a
     e06:	8b 85       	ldd	r24, Y+11	; 0x0b
     e08:	0e 94 e6 04 	call	0x9cc	; 0x9cc <LCD_sendCommand>
     e0c:	2b 96       	adiw	r28, 0x0b	; 11
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	de bf       	out	0x3e, r29	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	cd bf       	out	0x3d, r28	; 61
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	ff 90       	pop	r15
     e22:	ef 90       	pop	r14
     e24:	cf 90       	pop	r12
     e26:	af 90       	pop	r10
     e28:	08 95       	ret

00000e2a <LCD_displayStringRowColumn>:
     e2a:	5f 92       	push	r5
     e2c:	6f 92       	push	r6
     e2e:	7f 92       	push	r7
     e30:	8f 92       	push	r8
     e32:	9f 92       	push	r9
     e34:	af 92       	push	r10
     e36:	bf 92       	push	r11
     e38:	cf 92       	push	r12
     e3a:	df 92       	push	r13
     e3c:	ef 92       	push	r14
     e3e:	ff 92       	push	r15
     e40:	0f 93       	push	r16
     e42:	1f 93       	push	r17
     e44:	cf 93       	push	r28
     e46:	df 93       	push	r29
     e48:	cd b7       	in	r28, 0x3d	; 61
     e4a:	de b7       	in	r29, 0x3e	; 62
     e4c:	2b 97       	sbiw	r28, 0x0b	; 11
     e4e:	0f b6       	in	r0, 0x3f	; 63
     e50:	f8 94       	cli
     e52:	de bf       	out	0x3e, r29	; 62
     e54:	0f be       	out	0x3f, r0	; 63
     e56:	cd bf       	out	0x3d, r28	; 61
     e58:	e9 82       	std	Y+1, r14	; 0x01
     e5a:	fa 82       	std	Y+2, r15	; 0x02
     e5c:	0b 83       	std	Y+3, r16	; 0x03
     e5e:	1c 83       	std	Y+4, r17	; 0x04
     e60:	2d 83       	std	Y+5, r18	; 0x05
     e62:	3e 83       	std	Y+6, r19	; 0x06
     e64:	4f 83       	std	Y+7, r20	; 0x07
     e66:	58 87       	std	Y+8, r21	; 0x08
     e68:	69 87       	std	Y+9, r22	; 0x09
     e6a:	7a 87       	std	Y+10, r23	; 0x0a
     e6c:	8b 87       	std	Y+11, r24	; 0x0b
     e6e:	0e 94 cc 06 	call	0xd98	; 0xd98 <LCD_moveCursor>
     e72:	64 01       	movw	r12, r8
     e74:	e9 80       	ldd	r14, Y+1	; 0x01
     e76:	fa 80       	ldd	r15, Y+2	; 0x02
     e78:	0b 81       	ldd	r16, Y+3	; 0x03
     e7a:	1c 81       	ldd	r17, Y+4	; 0x04
     e7c:	2d 81       	ldd	r18, Y+5	; 0x05
     e7e:	3e 81       	ldd	r19, Y+6	; 0x06
     e80:	4f 81       	ldd	r20, Y+7	; 0x07
     e82:	58 85       	ldd	r21, Y+8	; 0x08
     e84:	69 85       	ldd	r22, Y+9	; 0x09
     e86:	7a 85       	ldd	r23, Y+10	; 0x0a
     e88:	8b 85       	ldd	r24, Y+11	; 0x0b
     e8a:	0e 94 87 06 	call	0xd0e	; 0xd0e <LCD_displayString>
     e8e:	2b 96       	adiw	r28, 0x0b	; 11
     e90:	0f b6       	in	r0, 0x3f	; 63
     e92:	f8 94       	cli
     e94:	de bf       	out	0x3e, r29	; 62
     e96:	0f be       	out	0x3f, r0	; 63
     e98:	cd bf       	out	0x3d, r28	; 61
     e9a:	df 91       	pop	r29
     e9c:	cf 91       	pop	r28
     e9e:	1f 91       	pop	r17
     ea0:	0f 91       	pop	r16
     ea2:	ff 90       	pop	r15
     ea4:	ef 90       	pop	r14
     ea6:	df 90       	pop	r13
     ea8:	cf 90       	pop	r12
     eaa:	bf 90       	pop	r11
     eac:	af 90       	pop	r10
     eae:	9f 90       	pop	r9
     eb0:	8f 90       	pop	r8
     eb2:	7f 90       	pop	r7
     eb4:	6f 90       	pop	r6
     eb6:	5f 90       	pop	r5
     eb8:	08 95       	ret

00000eba <LCD_clearScreen>:

/*
 * Description :
 * Send the clear screen command
 */
void LCD_clearScreen(ST_LCD_t lcd){
     eba:	cf 92       	push	r12
     ebc:	ef 92       	push	r14
     ebe:	ff 92       	push	r15
     ec0:	0f 93       	push	r16
     ec2:	1f 93       	push	r17
     ec4:	cf 93       	push	r28
     ec6:	df 93       	push	r29
     ec8:	cd b7       	in	r28, 0x3d	; 61
     eca:	de b7       	in	r29, 0x3e	; 62
     ecc:	2b 97       	sbiw	r28, 0x0b	; 11
     ece:	0f b6       	in	r0, 0x3f	; 63
     ed0:	f8 94       	cli
     ed2:	de bf       	out	0x3e, r29	; 62
     ed4:	0f be       	out	0x3f, r0	; 63
     ed6:	cd bf       	out	0x3d, r28	; 61
	LCD_sendCommand(lcd,LCD_CLEAR_COMMAND); /* Send clear display command */
     ed8:	cc 24       	eor	r12, r12
     eda:	c3 94       	inc	r12
     edc:	0e 94 e6 04 	call	0x9cc	; 0x9cc <LCD_sendCommand>
}
     ee0:	2b 96       	adiw	r28, 0x0b	; 11
     ee2:	0f b6       	in	r0, 0x3f	; 63
     ee4:	f8 94       	cli
     ee6:	de bf       	out	0x3e, r29	; 62
     ee8:	0f be       	out	0x3f, r0	; 63
     eea:	cd bf       	out	0x3d, r28	; 61
     eec:	df 91       	pop	r29
     eee:	cf 91       	pop	r28
     ef0:	1f 91       	pop	r17
     ef2:	0f 91       	pop	r16
     ef4:	ff 90       	pop	r15
     ef6:	ef 90       	pop	r14
     ef8:	cf 90       	pop	r12
     efa:	08 95       	ret

00000efc <main>:

#include "Application/application.h"

int main(void)
{
	appInit();
     efc:	0e 94 49 00 	call	0x92	; 0x92 <appInit>
	while (1) 
    {
		appStart();
     f00:	0e 94 9f 01 	call	0x33e	; 0x33e <appStart>
     f04:	fd cf       	rjmp	.-6      	; 0xf00 <main+0x4>

00000f06 <dio_init>:
            return DIO_FAIL;
            break;
    }
    return DIO_SUCCESS;

}
     f06:	81 30       	cpi	r24, 0x01	; 1
     f08:	11 f1       	breq	.+68     	; 0xf4e <dio_init+0x48>
     f0a:	30 f0       	brcs	.+12     	; 0xf18 <dio_init+0x12>
     f0c:	82 30       	cpi	r24, 0x02	; 2
     f0e:	d1 f1       	breq	.+116    	; 0xf84 <dio_init+0x7e>
     f10:	83 30       	cpi	r24, 0x03	; 3
     f12:	09 f4       	brne	.+2      	; 0xf16 <dio_init+0x10>
     f14:	52 c0       	rjmp	.+164    	; 0xfba <dio_init+0xb4>
     f16:	6c c0       	rjmp	.+216    	; 0xff0 <dio_init+0xea>
     f18:	41 11       	cpse	r20, r1
     f1a:	0d c0       	rjmp	.+26     	; 0xf36 <dio_init+0x30>
     f1c:	2a b3       	in	r18, 0x1a	; 26
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <dio_init+0x22>
     f24:	88 0f       	add	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	6a 95       	dec	r22
     f2a:	e2 f7       	brpl	.-8      	; 0xf24 <dio_init+0x1e>
     f2c:	80 95       	com	r24
     f2e:	82 23       	and	r24, r18
     f30:	8a bb       	out	0x1a, r24	; 26
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	08 95       	ret
     f36:	2a b3       	in	r18, 0x1a	; 26
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <dio_init+0x3c>
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	6a 95       	dec	r22
     f44:	e2 f7       	brpl	.-8      	; 0xf3e <dio_init+0x38>
     f46:	82 2b       	or	r24, r18
     f48:	8a bb       	out	0x1a, r24	; 26
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	08 95       	ret
     f4e:	41 11       	cpse	r20, r1
     f50:	0d c0       	rjmp	.+26     	; 0xf6c <dio_init+0x66>
     f52:	27 b3       	in	r18, 0x17	; 23
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	02 c0       	rjmp	.+4      	; 0xf5e <dio_init+0x58>
     f5a:	88 0f       	add	r24, r24
     f5c:	99 1f       	adc	r25, r25
     f5e:	6a 95       	dec	r22
     f60:	e2 f7       	brpl	.-8      	; 0xf5a <dio_init+0x54>
     f62:	80 95       	com	r24
     f64:	82 23       	and	r24, r18
     f66:	87 bb       	out	0x17, r24	; 23
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	08 95       	ret
     f6c:	27 b3       	in	r18, 0x17	; 23
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <dio_init+0x72>
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	6a 95       	dec	r22
     f7a:	e2 f7       	brpl	.-8      	; 0xf74 <dio_init+0x6e>
     f7c:	82 2b       	or	r24, r18
     f7e:	87 bb       	out	0x17, r24	; 23
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	08 95       	ret
     f84:	41 11       	cpse	r20, r1
     f86:	0d c0       	rjmp	.+26     	; 0xfa2 <dio_init+0x9c>
     f88:	24 b3       	in	r18, 0x14	; 20
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <dio_init+0x8e>
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	6a 95       	dec	r22
     f96:	e2 f7       	brpl	.-8      	; 0xf90 <dio_init+0x8a>
     f98:	80 95       	com	r24
     f9a:	82 23       	and	r24, r18
     f9c:	84 bb       	out	0x14, r24	; 20
     f9e:	81 e0       	ldi	r24, 0x01	; 1
     fa0:	08 95       	ret
     fa2:	24 b3       	in	r18, 0x14	; 20
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <dio_init+0xa8>
     faa:	88 0f       	add	r24, r24
     fac:	99 1f       	adc	r25, r25
     fae:	6a 95       	dec	r22
     fb0:	e2 f7       	brpl	.-8      	; 0xfaa <dio_init+0xa4>
     fb2:	82 2b       	or	r24, r18
     fb4:	84 bb       	out	0x14, r24	; 20
     fb6:	81 e0       	ldi	r24, 0x01	; 1
     fb8:	08 95       	ret
     fba:	41 11       	cpse	r20, r1
     fbc:	0d c0       	rjmp	.+26     	; 0xfd8 <dio_init+0xd2>
     fbe:	21 b3       	in	r18, 0x11	; 17
     fc0:	81 e0       	ldi	r24, 0x01	; 1
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <dio_init+0xc4>
     fc6:	88 0f       	add	r24, r24
     fc8:	99 1f       	adc	r25, r25
     fca:	6a 95       	dec	r22
     fcc:	e2 f7       	brpl	.-8      	; 0xfc6 <dio_init+0xc0>
     fce:	80 95       	com	r24
     fd0:	82 23       	and	r24, r18
     fd2:	81 bb       	out	0x11, r24	; 17
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	08 95       	ret
     fd8:	21 b3       	in	r18, 0x11	; 17
     fda:	81 e0       	ldi	r24, 0x01	; 1
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	02 c0       	rjmp	.+4      	; 0xfe4 <dio_init+0xde>
     fe0:	88 0f       	add	r24, r24
     fe2:	99 1f       	adc	r25, r25
     fe4:	6a 95       	dec	r22
     fe6:	e2 f7       	brpl	.-8      	; 0xfe0 <dio_init+0xda>
     fe8:	82 2b       	or	r24, r18
     fea:	81 bb       	out	0x11, r24	; 17
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	08 95       	ret
     ff0:	80 e0       	ldi	r24, 0x00	; 0
     ff2:	08 95       	ret

00000ff4 <dio_write_pin>:
     ff4:	81 30       	cpi	r24, 0x01	; 1
     ff6:	11 f1       	breq	.+68     	; 0x103c <dio_write_pin+0x48>
     ff8:	30 f0       	brcs	.+12     	; 0x1006 <dio_write_pin+0x12>
     ffa:	82 30       	cpi	r24, 0x02	; 2
     ffc:	d1 f1       	breq	.+116    	; 0x1072 <dio_write_pin+0x7e>
     ffe:	83 30       	cpi	r24, 0x03	; 3
    1000:	09 f4       	brne	.+2      	; 0x1004 <dio_write_pin+0x10>
    1002:	52 c0       	rjmp	.+164    	; 0x10a8 <dio_write_pin+0xb4>
    1004:	6c c0       	rjmp	.+216    	; 0x10de <dio_write_pin+0xea>
    1006:	41 11       	cpse	r20, r1
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <dio_write_pin+0x30>
    100a:	2b b3       	in	r18, 0x1b	; 27
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	02 c0       	rjmp	.+4      	; 0x1016 <dio_write_pin+0x22>
    1012:	88 0f       	add	r24, r24
    1014:	99 1f       	adc	r25, r25
    1016:	6a 95       	dec	r22
    1018:	e2 f7       	brpl	.-8      	; 0x1012 <dio_write_pin+0x1e>
    101a:	80 95       	com	r24
    101c:	82 23       	and	r24, r18
    101e:	8b bb       	out	0x1b, r24	; 27
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	08 95       	ret
    1024:	2b b3       	in	r18, 0x1b	; 27
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <dio_write_pin+0x3c>
    102c:	88 0f       	add	r24, r24
    102e:	99 1f       	adc	r25, r25
    1030:	6a 95       	dec	r22
    1032:	e2 f7       	brpl	.-8      	; 0x102c <dio_write_pin+0x38>
    1034:	82 2b       	or	r24, r18
    1036:	8b bb       	out	0x1b, r24	; 27
    1038:	81 e0       	ldi	r24, 0x01	; 1
    103a:	08 95       	ret
    103c:	41 11       	cpse	r20, r1
    103e:	0d c0       	rjmp	.+26     	; 0x105a <dio_write_pin+0x66>
    1040:	28 b3       	in	r18, 0x18	; 24
    1042:	81 e0       	ldi	r24, 0x01	; 1
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	02 c0       	rjmp	.+4      	; 0x104c <dio_write_pin+0x58>
    1048:	88 0f       	add	r24, r24
    104a:	99 1f       	adc	r25, r25
    104c:	6a 95       	dec	r22
    104e:	e2 f7       	brpl	.-8      	; 0x1048 <dio_write_pin+0x54>
    1050:	80 95       	com	r24
    1052:	82 23       	and	r24, r18
    1054:	88 bb       	out	0x18, r24	; 24
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	08 95       	ret
    105a:	28 b3       	in	r18, 0x18	; 24
    105c:	81 e0       	ldi	r24, 0x01	; 1
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	02 c0       	rjmp	.+4      	; 0x1066 <dio_write_pin+0x72>
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	6a 95       	dec	r22
    1068:	e2 f7       	brpl	.-8      	; 0x1062 <dio_write_pin+0x6e>
    106a:	82 2b       	or	r24, r18
    106c:	88 bb       	out	0x18, r24	; 24
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	08 95       	ret
    1072:	41 11       	cpse	r20, r1
    1074:	0d c0       	rjmp	.+26     	; 0x1090 <dio_write_pin+0x9c>
    1076:	25 b3       	in	r18, 0x15	; 21
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <dio_write_pin+0x8e>
    107e:	88 0f       	add	r24, r24
    1080:	99 1f       	adc	r25, r25
    1082:	6a 95       	dec	r22
    1084:	e2 f7       	brpl	.-8      	; 0x107e <dio_write_pin+0x8a>
    1086:	80 95       	com	r24
    1088:	82 23       	and	r24, r18
    108a:	85 bb       	out	0x15, r24	; 21
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	08 95       	ret
    1090:	25 b3       	in	r18, 0x15	; 21
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	02 c0       	rjmp	.+4      	; 0x109c <dio_write_pin+0xa8>
    1098:	88 0f       	add	r24, r24
    109a:	99 1f       	adc	r25, r25
    109c:	6a 95       	dec	r22
    109e:	e2 f7       	brpl	.-8      	; 0x1098 <dio_write_pin+0xa4>
    10a0:	82 2b       	or	r24, r18
    10a2:	85 bb       	out	0x15, r24	; 21
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	08 95       	ret
    10a8:	41 11       	cpse	r20, r1
    10aa:	0d c0       	rjmp	.+26     	; 0x10c6 <dio_write_pin+0xd2>
    10ac:	22 b3       	in	r18, 0x12	; 18
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <dio_write_pin+0xc4>
    10b4:	88 0f       	add	r24, r24
    10b6:	99 1f       	adc	r25, r25
    10b8:	6a 95       	dec	r22
    10ba:	e2 f7       	brpl	.-8      	; 0x10b4 <dio_write_pin+0xc0>
    10bc:	80 95       	com	r24
    10be:	82 23       	and	r24, r18
    10c0:	82 bb       	out	0x12, r24	; 18
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	08 95       	ret
    10c6:	22 b3       	in	r18, 0x12	; 18
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <dio_write_pin+0xde>
    10ce:	88 0f       	add	r24, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	6a 95       	dec	r22
    10d4:	e2 f7       	brpl	.-8      	; 0x10ce <dio_write_pin+0xda>
    10d6:	82 2b       	or	r24, r18
    10d8:	82 bb       	out	0x12, r24	; 18
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	08 95       	ret
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	08 95       	ret

000010e2 <dio_read_pin>:

EN_DIO_ERROR_t dio_read_pin(uint8 port, uint8 pin,uint8 *data)
{
    switch(port){
    10e2:	81 30       	cpi	r24, 0x01	; 1
    10e4:	91 f0       	breq	.+36     	; 0x110a <dio_read_pin+0x28>
    10e6:	28 f0       	brcs	.+10     	; 0x10f2 <dio_read_pin+0x10>
    10e8:	82 30       	cpi	r24, 0x02	; 2
    10ea:	d9 f0       	breq	.+54     	; 0x1122 <dio_read_pin+0x40>
    10ec:	83 30       	cpi	r24, 0x03	; 3
    10ee:	29 f1       	breq	.+74     	; 0x113a <dio_read_pin+0x58>
    10f0:	30 c0       	rjmp	.+96     	; 0x1152 <dio_read_pin+0x70>
        case PORT_A:
            *data = READ_BIT(PINA,pin);
    10f2:	89 b3       	in	r24, 0x19	; 25
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <dio_read_pin+0x1a>
    10f8:	95 95       	asr	r25
    10fa:	87 95       	ror	r24
    10fc:	6a 95       	dec	r22
    10fe:	e2 f7       	brpl	.-8      	; 0x10f8 <dio_read_pin+0x16>
    1100:	81 70       	andi	r24, 0x01	; 1
    1102:	fa 01       	movw	r30, r20
    1104:	80 83       	st	Z, r24
            break;
        default:
            return DIO_FAIL;
            break;
    }
    return DIO_SUCCESS;
    1106:	81 e0       	ldi	r24, 0x01	; 1
EN_DIO_ERROR_t dio_read_pin(uint8 port, uint8 pin,uint8 *data)
{
    switch(port){
        case PORT_A:
            *data = READ_BIT(PINA,pin);
            break;
    1108:	08 95       	ret
        case PORT_B:
            *data =READ_BIT(PINB,pin);
    110a:	86 b3       	in	r24, 0x16	; 22
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <dio_read_pin+0x32>
    1110:	95 95       	asr	r25
    1112:	87 95       	ror	r24
    1114:	6a 95       	dec	r22
    1116:	e2 f7       	brpl	.-8      	; 0x1110 <dio_read_pin+0x2e>
    1118:	81 70       	andi	r24, 0x01	; 1
    111a:	fa 01       	movw	r30, r20
    111c:	80 83       	st	Z, r24
            break;
        default:
            return DIO_FAIL;
            break;
    }
    return DIO_SUCCESS;
    111e:	81 e0       	ldi	r24, 0x01	; 1
        case PORT_A:
            *data = READ_BIT(PINA,pin);
            break;
        case PORT_B:
            *data =READ_BIT(PINB,pin);
            break;
    1120:	08 95       	ret
        case PORT_C:
            *data =READ_BIT(PINC,pin);
    1122:	83 b3       	in	r24, 0x13	; 19
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	02 c0       	rjmp	.+4      	; 0x112c <dio_read_pin+0x4a>
    1128:	95 95       	asr	r25
    112a:	87 95       	ror	r24
    112c:	6a 95       	dec	r22
    112e:	e2 f7       	brpl	.-8      	; 0x1128 <dio_read_pin+0x46>
    1130:	81 70       	andi	r24, 0x01	; 1
    1132:	fa 01       	movw	r30, r20
    1134:	80 83       	st	Z, r24
            break;
        default:
            return DIO_FAIL;
            break;
    }
    return DIO_SUCCESS;
    1136:	81 e0       	ldi	r24, 0x01	; 1
        case PORT_B:
            *data =READ_BIT(PINB,pin);
            break;
        case PORT_C:
            *data =READ_BIT(PINC,pin);
            break;
    1138:	08 95       	ret
        case PORT_D:
            *data =READ_BIT(PIND,pin);
    113a:	80 b3       	in	r24, 0x10	; 16
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <dio_read_pin+0x62>
    1140:	95 95       	asr	r25
    1142:	87 95       	ror	r24
    1144:	6a 95       	dec	r22
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <dio_read_pin+0x5e>
    1148:	81 70       	andi	r24, 0x01	; 1
    114a:	fa 01       	movw	r30, r20
    114c:	80 83       	st	Z, r24
            break;
        default:
            return DIO_FAIL;
            break;
    }
    return DIO_SUCCESS;
    114e:	81 e0       	ldi	r24, 0x01	; 1
        case PORT_C:
            *data =READ_BIT(PINC,pin);
            break;
        case PORT_D:
            *data =READ_BIT(PIND,pin);
            break;
    1150:	08 95       	ret
        default:
            return DIO_FAIL;
    1152:	80 e0       	ldi	r24, 0x00	; 0
            break;
    }
    return DIO_SUCCESS;
}
    1154:	08 95       	ret

00001156 <dio_read_port>:

EN_DIO_ERROR_t dio_read_port(uint8 port,uint8 *data)
{
	switch(port){
    1156:	81 30       	cpi	r24, 0x01	; 1
    1158:	59 f0       	breq	.+22     	; 0x1170 <dio_read_port+0x1a>
    115a:	28 f0       	brcs	.+10     	; 0x1166 <dio_read_port+0x10>
    115c:	82 30       	cpi	r24, 0x02	; 2
    115e:	69 f0       	breq	.+26     	; 0x117a <dio_read_port+0x24>
    1160:	83 30       	cpi	r24, 0x03	; 3
    1162:	81 f0       	breq	.+32     	; 0x1184 <dio_read_port+0x2e>
    1164:	14 c0       	rjmp	.+40     	; 0x118e <dio_read_port+0x38>
		case PORT_A:
		*data = PINA;
    1166:	89 b3       	in	r24, 0x19	; 25
    1168:	fb 01       	movw	r30, r22
    116a:	80 83       	st	Z, r24
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    116c:	81 e0       	ldi	r24, 0x01	; 1
EN_DIO_ERROR_t dio_read_port(uint8 port,uint8 *data)
{
	switch(port){
		case PORT_A:
		*data = PINA;
		break;
    116e:	08 95       	ret
		case PORT_B:
		*data =PINB;
    1170:	86 b3       	in	r24, 0x16	; 22
    1172:	fb 01       	movw	r30, r22
    1174:	80 83       	st	Z, r24
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    1176:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_A:
		*data = PINA;
		break;
		case PORT_B:
		*data =PINB;
		break;
    1178:	08 95       	ret
		case PORT_C:
		*data =PINC;
    117a:	83 b3       	in	r24, 0x13	; 19
    117c:	fb 01       	movw	r30, r22
    117e:	80 83       	st	Z, r24
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    1180:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_B:
		*data =PINB;
		break;
		case PORT_C:
		*data =PINC;
		break;
    1182:	08 95       	ret
		case PORT_D:
		*data =PIND;
    1184:	80 b3       	in	r24, 0x10	; 16
    1186:	fb 01       	movw	r30, r22
    1188:	80 83       	st	Z, r24
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    118a:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_C:
		*data =PINC;
		break;
		case PORT_D:
		*data =PIND;
		break;
    118c:	08 95       	ret
		default:
		return DIO_FAIL;
    118e:	80 e0       	ldi	r24, 0x00	; 0
		break;
	}
	return DIO_SUCCESS;
}
    1190:	08 95       	ret

00001192 <dio_write_port>:


EN_DIO_ERROR_t dio_write_port(uint8 port,uint8 value)
{
	switch(port){
    1192:	81 30       	cpi	r24, 0x01	; 1
    1194:	49 f0       	breq	.+18     	; 0x11a8 <dio_write_port+0x16>
    1196:	28 f0       	brcs	.+10     	; 0x11a2 <dio_write_port+0x10>
    1198:	82 30       	cpi	r24, 0x02	; 2
    119a:	49 f0       	breq	.+18     	; 0x11ae <dio_write_port+0x1c>
    119c:	83 30       	cpi	r24, 0x03	; 3
    119e:	51 f0       	breq	.+20     	; 0x11b4 <dio_write_port+0x22>
    11a0:	0c c0       	rjmp	.+24     	; 0x11ba <dio_write_port+0x28>
		case PORT_A:
		PORTA = value;
    11a2:	6b bb       	out	0x1b, r22	; 27
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    11a4:	81 e0       	ldi	r24, 0x01	; 1
EN_DIO_ERROR_t dio_write_port(uint8 port,uint8 value)
{
	switch(port){
		case PORT_A:
		PORTA = value;
		break;
    11a6:	08 95       	ret
		case PORT_B:
		PORTB = value;
    11a8:	68 bb       	out	0x18, r22	; 24
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    11aa:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_A:
		PORTA = value;
		break;
		case PORT_B:
		PORTB = value;
		break;
    11ac:	08 95       	ret
		case PORT_C:
		PORTC = value;
    11ae:	65 bb       	out	0x15, r22	; 21
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    11b0:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_B:
		PORTB = value;
		break;
		case PORT_C:
		PORTC = value;
		break;
    11b2:	08 95       	ret
		case PORT_D:
		PORTD = value;
    11b4:	62 bb       	out	0x12, r22	; 18
		break;
		default:
		return DIO_FAIL;
		break;
	}
	return DIO_SUCCESS;
    11b6:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_C:
		PORTC = value;
		break;
		case PORT_D:
		PORTD = value;
		break;
    11b8:	08 95       	ret
		default:
		return DIO_FAIL;
    11ba:	80 e0       	ldi	r24, 0x00	; 0
		break;
	}
	return DIO_SUCCESS;
    11bc:	08 95       	ret

000011be <calc_prescaler>:
		init_value=0;
	}
	TCNT0=init_value;
	g_callBackPtr_0=g_ptr;
	TCCR0 = (1<<FOC0) | (1<<CS02) | (1<<CS00);
}
    11be:	cf 92       	push	r12
    11c0:	df 92       	push	r13
    11c2:	ef 92       	push	r14
    11c4:	ff 92       	push	r15
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	6b 01       	movw	r12, r22
    11cc:	7c 01       	movw	r14, r24
    11ce:	ea 01       	movw	r28, r20
    11d0:	2c ee       	ldi	r18, 0xEC	; 236
    11d2:	31 e1       	ldi	r19, 0x11	; 17
    11d4:	43 e8       	ldi	r20, 0x83	; 131
    11d6:	53 e4       	ldi	r21, 0x43	; 67
    11d8:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    11dc:	18 16       	cp	r1, r24
    11de:	0c f4       	brge	.+2      	; 0x11e2 <calc_prescaler+0x24>
    11e0:	53 c0       	rjmp	.+166    	; 0x1288 <calc_prescaler+0xca>
    11e2:	28 eb       	ldi	r18, 0xB8	; 184
    11e4:	3e e1       	ldi	r19, 0x1E	; 30
    11e6:	45 e8       	ldi	r20, 0x85	; 133
    11e8:	5e e3       	ldi	r21, 0x3E	; 62
    11ea:	c7 01       	movw	r24, r14
    11ec:	b6 01       	movw	r22, r12
    11ee:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    11f2:	18 16       	cp	r1, r24
    11f4:	2c f0       	brlt	.+10     	; 0x1200 <calc_prescaler+0x42>
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	99 83       	std	Y+1, r25	; 0x01
    11fc:	88 83       	st	Y, r24
    11fe:	45 c0       	rjmp	.+138    	; 0x128a <calc_prescaler+0xcc>
    1200:	23 e3       	ldi	r18, 0x33	; 51
    1202:	33 e3       	ldi	r19, 0x33	; 51
    1204:	43 e0       	ldi	r20, 0x03	; 3
    1206:	50 e4       	ldi	r21, 0x40	; 64
    1208:	c7 01       	movw	r24, r14
    120a:	b6 01       	movw	r22, r12
    120c:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    1210:	18 16       	cp	r1, r24
    1212:	34 f0       	brlt	.+12     	; 0x1220 <calc_prescaler+0x62>
    1214:	88 e0       	ldi	r24, 0x08	; 8
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	99 83       	std	Y+1, r25	; 0x01
    121a:	88 83       	st	Y, r24
    121c:	81 e0       	ldi	r24, 0x01	; 1
    121e:	35 c0       	rjmp	.+106    	; 0x128a <calc_prescaler+0xcc>
    1220:	2d e3       	ldi	r18, 0x3D	; 61
    1222:	3a e0       	ldi	r19, 0x0A	; 10
    1224:	43 e8       	ldi	r20, 0x83	; 131
    1226:	51 e4       	ldi	r21, 0x41	; 65
    1228:	c7 01       	movw	r24, r14
    122a:	b6 01       	movw	r22, r12
    122c:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    1230:	18 16       	cp	r1, r24
    1232:	34 f0       	brlt	.+12     	; 0x1240 <calc_prescaler+0x82>
    1234:	80 e4       	ldi	r24, 0x40	; 64
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	99 83       	std	Y+1, r25	; 0x01
    123a:	88 83       	st	Y, r24
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	25 c0       	rjmp	.+74     	; 0x128a <calc_prescaler+0xcc>
    1240:	2b e7       	ldi	r18, 0x7B	; 123
    1242:	34 e1       	ldi	r19, 0x14	; 20
    1244:	43 e8       	ldi	r20, 0x83	; 131
    1246:	52 e4       	ldi	r21, 0x42	; 66
    1248:	c7 01       	movw	r24, r14
    124a:	b6 01       	movw	r22, r12
    124c:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    1250:	18 16       	cp	r1, r24
    1252:	34 f0       	brlt	.+12     	; 0x1260 <calc_prescaler+0xa2>
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	91 e0       	ldi	r25, 0x01	; 1
    1258:	99 83       	std	Y+1, r25	; 0x01
    125a:	88 83       	st	Y, r24
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	15 c0       	rjmp	.+42     	; 0x128a <calc_prescaler+0xcc>
    1260:	2c ee       	ldi	r18, 0xEC	; 236
    1262:	31 e1       	ldi	r19, 0x11	; 17
    1264:	43 e8       	ldi	r20, 0x83	; 131
    1266:	53 e4       	ldi	r21, 0x43	; 67
    1268:	c7 01       	movw	r24, r14
    126a:	b6 01       	movw	r22, r12
    126c:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    1270:	18 16       	cp	r1, r24
    1272:	34 f0       	brlt	.+12     	; 0x1280 <calc_prescaler+0xc2>
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	94 e0       	ldi	r25, 0x04	; 4
    1278:	99 83       	std	Y+1, r25	; 0x01
    127a:	88 83       	st	Y, r24
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	05 c0       	rjmp	.+10     	; 0x128a <calc_prescaler+0xcc>
    1280:	19 82       	std	Y+1, r1	; 0x01
    1282:	18 82       	st	Y, r1
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	01 c0       	rjmp	.+2      	; 0x128a <calc_prescaler+0xcc>
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	df 91       	pop	r29
    128c:	cf 91       	pop	r28
    128e:	ff 90       	pop	r15
    1290:	ef 90       	pop	r14
    1292:	df 90       	pop	r13
    1294:	cf 90       	pop	r12
    1296:	08 95       	ret

00001298 <calc_initialValue>:
    1298:	cf 93       	push	r28
    129a:	df 93       	push	r29
    129c:	eb 01       	movw	r28, r22
    129e:	80 34       	cpi	r24, 0x40	; 64
    12a0:	91 05       	cpc	r25, r1
    12a2:	81 f1       	breq	.+96     	; 0x1304 <calc_initialValue+0x6c>
    12a4:	30 f4       	brcc	.+12     	; 0x12b2 <calc_initialValue+0x1a>
    12a6:	81 30       	cpi	r24, 0x01	; 1
    12a8:	91 05       	cpc	r25, r1
    12aa:	61 f0       	breq	.+24     	; 0x12c4 <calc_initialValue+0x2c>
    12ac:	08 97       	sbiw	r24, 0x08	; 8
    12ae:	d1 f0       	breq	.+52     	; 0x12e4 <calc_initialValue+0x4c>
    12b0:	59 c0       	rjmp	.+178    	; 0x1364 <calc_initialValue+0xcc>
    12b2:	81 15       	cp	r24, r1
    12b4:	61 e0       	ldi	r22, 0x01	; 1
    12b6:	96 07       	cpc	r25, r22
    12b8:	a9 f1       	breq	.+106    	; 0x1324 <calc_initialValue+0x8c>
    12ba:	81 15       	cp	r24, r1
    12bc:	94 40       	sbci	r25, 0x04	; 4
    12be:	09 f4       	brne	.+2      	; 0x12c2 <calc_initialValue+0x2a>
    12c0:	41 c0       	rjmp	.+130    	; 0x1344 <calc_initialValue+0xac>
    12c2:	50 c0       	rjmp	.+160    	; 0x1364 <calc_initialValue+0xcc>
    12c4:	68 eb       	ldi	r22, 0xB8	; 184
    12c6:	7e e1       	ldi	r23, 0x1E	; 30
    12c8:	85 e8       	ldi	r24, 0x85	; 133
    12ca:	9e e3       	ldi	r25, 0x3E	; 62
    12cc:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    12d0:	2f e6       	ldi	r18, 0x6F	; 111
    12d2:	32 e1       	ldi	r19, 0x12	; 18
    12d4:	43 e8       	ldi	r20, 0x83	; 131
    12d6:	5a e3       	ldi	r21, 0x3A	; 58
    12d8:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    12dc:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    12e0:	68 83       	st	Y, r22
    12e2:	41 c0       	rjmp	.+130    	; 0x1366 <calc_initialValue+0xce>
    12e4:	63 e3       	ldi	r22, 0x33	; 51
    12e6:	73 e3       	ldi	r23, 0x33	; 51
    12e8:	83 e0       	ldi	r24, 0x03	; 3
    12ea:	90 e4       	ldi	r25, 0x40	; 64
    12ec:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    12f0:	2f e6       	ldi	r18, 0x6F	; 111
    12f2:	32 e1       	ldi	r19, 0x12	; 18
    12f4:	43 e0       	ldi	r20, 0x03	; 3
    12f6:	5c e3       	ldi	r21, 0x3C	; 60
    12f8:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    12fc:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1300:	68 83       	st	Y, r22
    1302:	31 c0       	rjmp	.+98     	; 0x1366 <calc_initialValue+0xce>
    1304:	6d e3       	ldi	r22, 0x3D	; 61
    1306:	7a e0       	ldi	r23, 0x0A	; 10
    1308:	83 e8       	ldi	r24, 0x83	; 131
    130a:	91 e4       	ldi	r25, 0x41	; 65
    130c:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1310:	2f e6       	ldi	r18, 0x6F	; 111
    1312:	32 e1       	ldi	r19, 0x12	; 18
    1314:	43 e8       	ldi	r20, 0x83	; 131
    1316:	5d e3       	ldi	r21, 0x3D	; 61
    1318:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    131c:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1320:	68 83       	st	Y, r22
    1322:	21 c0       	rjmp	.+66     	; 0x1366 <calc_initialValue+0xce>
    1324:	6b e7       	ldi	r22, 0x7B	; 123
    1326:	74 e1       	ldi	r23, 0x14	; 20
    1328:	83 e8       	ldi	r24, 0x83	; 131
    132a:	92 e4       	ldi	r25, 0x42	; 66
    132c:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1330:	2f e6       	ldi	r18, 0x6F	; 111
    1332:	32 e1       	ldi	r19, 0x12	; 18
    1334:	43 e8       	ldi	r20, 0x83	; 131
    1336:	5e e3       	ldi	r21, 0x3E	; 62
    1338:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    133c:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1340:	68 83       	st	Y, r22
    1342:	11 c0       	rjmp	.+34     	; 0x1366 <calc_initialValue+0xce>
    1344:	6c ee       	ldi	r22, 0xEC	; 236
    1346:	71 e1       	ldi	r23, 0x11	; 17
    1348:	83 e8       	ldi	r24, 0x83	; 131
    134a:	93 e4       	ldi	r25, 0x43	; 67
    134c:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1350:	2f e6       	ldi	r18, 0x6F	; 111
    1352:	32 e1       	ldi	r19, 0x12	; 18
    1354:	43 e8       	ldi	r20, 0x83	; 131
    1356:	5f e3       	ldi	r21, 0x3F	; 63
    1358:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    135c:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1360:	68 83       	st	Y, r22
    1362:	01 c0       	rjmp	.+2      	; 0x1366 <calc_initialValue+0xce>
    1364:	18 82       	st	Y, r1
    1366:	df 91       	pop	r29
    1368:	cf 91       	pop	r28
    136a:	08 95       	ret

0000136c <set_prescale>:
    136c:	80 34       	cpi	r24, 0x40	; 64
    136e:	91 05       	cpc	r25, r1
    1370:	a9 f0       	breq	.+42     	; 0x139c <set_prescale+0x30>
    1372:	30 f4       	brcc	.+12     	; 0x1380 <set_prescale+0x14>
    1374:	81 30       	cpi	r24, 0x01	; 1
    1376:	91 05       	cpc	r25, r1
    1378:	59 f0       	breq	.+22     	; 0x1390 <set_prescale+0x24>
    137a:	08 97       	sbiw	r24, 0x08	; 8
    137c:	61 f0       	breq	.+24     	; 0x1396 <set_prescale+0x2a>
    137e:	17 c0       	rjmp	.+46     	; 0x13ae <set_prescale+0x42>
    1380:	81 15       	cp	r24, r1
    1382:	21 e0       	ldi	r18, 0x01	; 1
    1384:	92 07       	cpc	r25, r18
    1386:	69 f0       	breq	.+26     	; 0x13a2 <set_prescale+0x36>
    1388:	81 15       	cp	r24, r1
    138a:	94 40       	sbci	r25, 0x04	; 4
    138c:	69 f0       	breq	.+26     	; 0x13a8 <set_prescale+0x3c>
    138e:	0f c0       	rjmp	.+30     	; 0x13ae <set_prescale+0x42>
    1390:	81 e8       	ldi	r24, 0x81	; 129
    1392:	83 bf       	out	0x33, r24	; 51
    1394:	08 95       	ret
    1396:	82 e8       	ldi	r24, 0x82	; 130
    1398:	83 bf       	out	0x33, r24	; 51
    139a:	08 95       	ret
    139c:	83 e8       	ldi	r24, 0x83	; 131
    139e:	83 bf       	out	0x33, r24	; 51
    13a0:	08 95       	ret
    13a2:	84 e8       	ldi	r24, 0x84	; 132
    13a4:	83 bf       	out	0x33, r24	; 51
    13a6:	08 95       	ret
    13a8:	85 e8       	ldi	r24, 0x85	; 133
    13aa:	83 bf       	out	0x33, r24	; 51
    13ac:	08 95       	ret
    13ae:	13 be       	out	0x33, r1	; 51
    13b0:	08 95       	ret

000013b2 <Timer0_Delay>:
    13b2:	8f 92       	push	r8
    13b4:	9f 92       	push	r9
    13b6:	af 92       	push	r10
    13b8:	bf 92       	push	r11
    13ba:	cf 92       	push	r12
    13bc:	df 92       	push	r13
    13be:	ef 92       	push	r14
    13c0:	ff 92       	push	r15
    13c2:	1f 93       	push	r17
    13c4:	cf 93       	push	r28
    13c6:	df 93       	push	r29
    13c8:	cd b7       	in	r28, 0x3d	; 61
    13ca:	de b7       	in	r29, 0x3e	; 62
    13cc:	27 97       	sbiw	r28, 0x07	; 7
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	f8 94       	cli
    13d2:	de bf       	out	0x3e, r29	; 62
    13d4:	0f be       	out	0x3f, r0	; 63
    13d6:	cd bf       	out	0x3d, r28	; 61
    13d8:	6b 01       	movw	r12, r22
    13da:	7c 01       	movw	r14, r24
    13dc:	ae 01       	movw	r20, r28
    13de:	4f 5f       	subi	r20, 0xFF	; 255
    13e0:	5f 4f       	sbci	r21, 0xFF	; 255
    13e2:	0e 94 df 08 	call	0x11be	; 0x11be <calc_prescaler>
    13e6:	88 23       	and	r24, r24
    13e8:	71 f0       	breq	.+28     	; 0x1406 <Timer0_Delay+0x54>
    13ea:	a7 01       	movw	r20, r14
    13ec:	96 01       	movw	r18, r12
    13ee:	be 01       	movw	r22, r28
    13f0:	6d 5f       	subi	r22, 0xFD	; 253
    13f2:	7f 4f       	sbci	r23, 0xFF	; 255
    13f4:	89 81       	ldd	r24, Y+1	; 0x01
    13f6:	9a 81       	ldd	r25, Y+2	; 0x02
    13f8:	0e 94 4c 09 	call	0x1298	; 0x1298 <calc_initialValue>
    13fc:	1c 82       	std	Y+4, r1	; 0x04
    13fe:	1d 82       	std	Y+5, r1	; 0x05
    1400:	1e 82       	std	Y+6, r1	; 0x06
    1402:	1f 82       	std	Y+7, r1	; 0x07
    1404:	11 c0       	rjmp	.+34     	; 0x1428 <Timer0_Delay+0x76>
    1406:	80 e0       	ldi	r24, 0x00	; 0
    1408:	94 e0       	ldi	r25, 0x04	; 4
    140a:	9a 83       	std	Y+2, r25	; 0x02
    140c:	89 83       	std	Y+1, r24	; 0x01
    140e:	2c ee       	ldi	r18, 0xEC	; 236
    1410:	31 e1       	ldi	r19, 0x11	; 17
    1412:	43 e8       	ldi	r20, 0x83	; 131
    1414:	53 e4       	ldi	r21, 0x43	; 67
    1416:	c7 01       	movw	r24, r14
    1418:	b6 01       	movw	r22, r12
    141a:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    141e:	6c 83       	std	Y+4, r22	; 0x04
    1420:	7d 83       	std	Y+5, r23	; 0x05
    1422:	8e 83       	std	Y+6, r24	; 0x06
    1424:	9f 83       	std	Y+7, r25	; 0x07
    1426:	1b 82       	std	Y+3, r1	; 0x03
    1428:	cc 80       	ldd	r12, Y+4	; 0x04
    142a:	dd 80       	ldd	r13, Y+5	; 0x05
    142c:	ee 80       	ldd	r14, Y+6	; 0x06
    142e:	ff 80       	ldd	r15, Y+7	; 0x07
    1430:	c7 01       	movw	r24, r14
    1432:	b6 01       	movw	r22, r12
    1434:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1438:	16 2f       	mov	r17, r22
    143a:	70 e0       	ldi	r23, 0x00	; 0
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    1444:	9b 01       	movw	r18, r22
    1446:	ac 01       	movw	r20, r24
    1448:	c7 01       	movw	r24, r14
    144a:	b6 01       	movw	r22, r12
    144c:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1450:	2c ee       	ldi	r18, 0xEC	; 236
    1452:	31 e1       	ldi	r19, 0x11	; 17
    1454:	43 e8       	ldi	r20, 0x83	; 131
    1456:	53 e4       	ldi	r21, 0x43	; 67
    1458:	0e 94 57 0d 	call	0x1aae	; 0x1aae <__mulsf3>
    145c:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1460:	f6 2e       	mov	r15, r22
    1462:	8b 81       	ldd	r24, Y+3	; 0x03
    1464:	82 bf       	out	0x32, r24	; 50
    1466:	11 11       	cpse	r17, r1
    1468:	08 c0       	rjmp	.+16     	; 0x147a <Timer0_Delay+0xc8>
    146a:	89 81       	ldd	r24, Y+1	; 0x01
    146c:	9a 81       	ldd	r25, Y+2	; 0x02
    146e:	0e 94 b6 09 	call	0x136c	; 0x136c <set_prescale>
    1472:	08 b6       	in	r0, 0x38	; 56
    1474:	00 fe       	sbrs	r0, 0
    1476:	fd cf       	rjmp	.-6      	; 0x1472 <Timer0_Delay+0xc0>
    1478:	00 c1       	rjmp	.+512    	; 0x167a <Timer0_Delay+0x2c8>
    147a:	85 e8       	ldi	r24, 0x85	; 133
    147c:	83 bf       	out	0x33, r24	; 51
    147e:	07 c0       	rjmp	.+14     	; 0x148e <Timer0_Delay+0xdc>
    1480:	08 b6       	in	r0, 0x38	; 56
    1482:	00 fe       	sbrs	r0, 0
    1484:	fd cf       	rjmp	.-6      	; 0x1480 <Timer0_Delay+0xce>
    1486:	11 50       	subi	r17, 0x01	; 1
    1488:	88 b7       	in	r24, 0x38	; 56
    148a:	81 60       	ori	r24, 0x01	; 1
    148c:	88 bf       	out	0x38, r24	; 56
    148e:	11 11       	cpse	r17, r1
    1490:	f7 cf       	rjmp	.-18     	; 0x1480 <Timer0_Delay+0xce>
    1492:	ff 20       	and	r15, r15
    1494:	09 f4       	brne	.+2      	; 0x1498 <Timer0_Delay+0xe6>
    1496:	53 c0       	rjmp	.+166    	; 0x153e <Timer0_Delay+0x18c>
    1498:	6f 2d       	mov	r22, r15
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	80 e0       	ldi	r24, 0x00	; 0
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    14a4:	4b 01       	movw	r8, r22
    14a6:	5c 01       	movw	r10, r24
    14a8:	28 eb       	ldi	r18, 0xB8	; 184
    14aa:	3e e1       	ldi	r19, 0x1E	; 30
    14ac:	45 e8       	ldi	r20, 0x85	; 133
    14ae:	5e e3       	ldi	r21, 0x3E	; 62
    14b0:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    14b4:	18 16       	cp	r1, r24
    14b6:	2c f0       	brlt	.+10     	; 0x14c2 <Timer0_Delay+0x110>
    14b8:	81 e0       	ldi	r24, 0x01	; 1
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	9a 83       	std	Y+2, r25	; 0x02
    14be:	89 83       	std	Y+1, r24	; 0x01
    14c0:	3e c0       	rjmp	.+124    	; 0x153e <Timer0_Delay+0x18c>
    14c2:	23 e3       	ldi	r18, 0x33	; 51
    14c4:	33 e3       	ldi	r19, 0x33	; 51
    14c6:	43 e0       	ldi	r20, 0x03	; 3
    14c8:	50 e4       	ldi	r21, 0x40	; 64
    14ca:	c5 01       	movw	r24, r10
    14cc:	b4 01       	movw	r22, r8
    14ce:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    14d2:	18 16       	cp	r1, r24
    14d4:	2c f0       	brlt	.+10     	; 0x14e0 <Timer0_Delay+0x12e>
    14d6:	88 e0       	ldi	r24, 0x08	; 8
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	9a 83       	std	Y+2, r25	; 0x02
    14dc:	89 83       	std	Y+1, r24	; 0x01
    14de:	2f c0       	rjmp	.+94     	; 0x153e <Timer0_Delay+0x18c>
    14e0:	2d e3       	ldi	r18, 0x3D	; 61
    14e2:	3a e0       	ldi	r19, 0x0A	; 10
    14e4:	43 e8       	ldi	r20, 0x83	; 131
    14e6:	51 e4       	ldi	r21, 0x41	; 65
    14e8:	c5 01       	movw	r24, r10
    14ea:	b4 01       	movw	r22, r8
    14ec:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    14f0:	18 16       	cp	r1, r24
    14f2:	2c f0       	brlt	.+10     	; 0x14fe <Timer0_Delay+0x14c>
    14f4:	80 e4       	ldi	r24, 0x40	; 64
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	9a 83       	std	Y+2, r25	; 0x02
    14fa:	89 83       	std	Y+1, r24	; 0x01
    14fc:	20 c0       	rjmp	.+64     	; 0x153e <Timer0_Delay+0x18c>
    14fe:	2b e7       	ldi	r18, 0x7B	; 123
    1500:	34 e1       	ldi	r19, 0x14	; 20
    1502:	43 e8       	ldi	r20, 0x83	; 131
    1504:	52 e4       	ldi	r21, 0x42	; 66
    1506:	c5 01       	movw	r24, r10
    1508:	b4 01       	movw	r22, r8
    150a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    150e:	18 16       	cp	r1, r24
    1510:	2c f0       	brlt	.+10     	; 0x151c <Timer0_Delay+0x16a>
    1512:	80 e0       	ldi	r24, 0x00	; 0
    1514:	91 e0       	ldi	r25, 0x01	; 1
    1516:	9a 83       	std	Y+2, r25	; 0x02
    1518:	89 83       	std	Y+1, r24	; 0x01
    151a:	11 c0       	rjmp	.+34     	; 0x153e <Timer0_Delay+0x18c>
    151c:	2c ee       	ldi	r18, 0xEC	; 236
    151e:	31 e1       	ldi	r19, 0x11	; 17
    1520:	43 e8       	ldi	r20, 0x83	; 131
    1522:	53 e4       	ldi	r21, 0x43	; 67
    1524:	c5 01       	movw	r24, r10
    1526:	b4 01       	movw	r22, r8
    1528:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__cmpsf2>
    152c:	18 16       	cp	r1, r24
    152e:	2c f0       	brlt	.+10     	; 0x153a <Timer0_Delay+0x188>
    1530:	80 e0       	ldi	r24, 0x00	; 0
    1532:	94 e0       	ldi	r25, 0x04	; 4
    1534:	9a 83       	std	Y+2, r25	; 0x02
    1536:	89 83       	std	Y+1, r24	; 0x01
    1538:	02 c0       	rjmp	.+4      	; 0x153e <Timer0_Delay+0x18c>
    153a:	1a 82       	std	Y+2, r1	; 0x02
    153c:	19 82       	std	Y+1, r1	; 0x01
    153e:	89 81       	ldd	r24, Y+1	; 0x01
    1540:	9a 81       	ldd	r25, Y+2	; 0x02
    1542:	80 34       	cpi	r24, 0x40	; 64
    1544:	91 05       	cpc	r25, r1
    1546:	09 f4       	brne	.+2      	; 0x154a <Timer0_Delay+0x198>
    1548:	45 c0       	rjmp	.+138    	; 0x15d4 <Timer0_Delay+0x222>
    154a:	30 f4       	brcc	.+12     	; 0x1558 <Timer0_Delay+0x1a6>
    154c:	81 30       	cpi	r24, 0x01	; 1
    154e:	91 05       	cpc	r25, r1
    1550:	69 f0       	breq	.+26     	; 0x156c <Timer0_Delay+0x1ba>
    1552:	08 97       	sbiw	r24, 0x08	; 8
    1554:	29 f1       	breq	.+74     	; 0x15a0 <Timer0_Delay+0x1ee>
    1556:	8c c0       	rjmp	.+280    	; 0x1670 <Timer0_Delay+0x2be>
    1558:	81 15       	cp	r24, r1
    155a:	21 e0       	ldi	r18, 0x01	; 1
    155c:	92 07       	cpc	r25, r18
    155e:	09 f4       	brne	.+2      	; 0x1562 <Timer0_Delay+0x1b0>
    1560:	53 c0       	rjmp	.+166    	; 0x1608 <Timer0_Delay+0x256>
    1562:	81 15       	cp	r24, r1
    1564:	94 40       	sbci	r25, 0x04	; 4
    1566:	09 f4       	brne	.+2      	; 0x156a <Timer0_Delay+0x1b8>
    1568:	69 c0       	rjmp	.+210    	; 0x163c <Timer0_Delay+0x28a>
    156a:	82 c0       	rjmp	.+260    	; 0x1670 <Timer0_Delay+0x2be>
    156c:	6f 2d       	mov	r22, r15
    156e:	70 e0       	ldi	r23, 0x00	; 0
    1570:	80 e0       	ldi	r24, 0x00	; 0
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    1578:	9b 01       	movw	r18, r22
    157a:	ac 01       	movw	r20, r24
    157c:	68 eb       	ldi	r22, 0xB8	; 184
    157e:	7e e1       	ldi	r23, 0x1E	; 30
    1580:	85 e8       	ldi	r24, 0x85	; 133
    1582:	9e e3       	ldi	r25, 0x3E	; 62
    1584:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1588:	2f e6       	ldi	r18, 0x6F	; 111
    158a:	32 e1       	ldi	r19, 0x12	; 18
    158c:	43 e8       	ldi	r20, 0x83	; 131
    158e:	5a e3       	ldi	r21, 0x3A	; 58
    1590:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    1594:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1598:	62 bf       	out	0x32, r22	; 50
    159a:	81 e8       	ldi	r24, 0x81	; 129
    159c:	83 bf       	out	0x33, r24	; 51
    159e:	6a c0       	rjmp	.+212    	; 0x1674 <Timer0_Delay+0x2c2>
    15a0:	6f 2d       	mov	r22, r15
    15a2:	70 e0       	ldi	r23, 0x00	; 0
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    15ac:	9b 01       	movw	r18, r22
    15ae:	ac 01       	movw	r20, r24
    15b0:	63 e3       	ldi	r22, 0x33	; 51
    15b2:	73 e3       	ldi	r23, 0x33	; 51
    15b4:	83 e0       	ldi	r24, 0x03	; 3
    15b6:	90 e4       	ldi	r25, 0x40	; 64
    15b8:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    15bc:	2f e6       	ldi	r18, 0x6F	; 111
    15be:	32 e1       	ldi	r19, 0x12	; 18
    15c0:	43 e0       	ldi	r20, 0x03	; 3
    15c2:	5c e3       	ldi	r21, 0x3C	; 60
    15c4:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    15c8:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    15cc:	62 bf       	out	0x32, r22	; 50
    15ce:	82 e8       	ldi	r24, 0x82	; 130
    15d0:	83 bf       	out	0x33, r24	; 51
    15d2:	50 c0       	rjmp	.+160    	; 0x1674 <Timer0_Delay+0x2c2>
    15d4:	6f 2d       	mov	r22, r15
    15d6:	70 e0       	ldi	r23, 0x00	; 0
    15d8:	80 e0       	ldi	r24, 0x00	; 0
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    15e0:	9b 01       	movw	r18, r22
    15e2:	ac 01       	movw	r20, r24
    15e4:	6d e3       	ldi	r22, 0x3D	; 61
    15e6:	7a e0       	ldi	r23, 0x0A	; 10
    15e8:	83 e8       	ldi	r24, 0x83	; 131
    15ea:	91 e4       	ldi	r25, 0x41	; 65
    15ec:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    15f0:	2f e6       	ldi	r18, 0x6F	; 111
    15f2:	32 e1       	ldi	r19, 0x12	; 18
    15f4:	43 e8       	ldi	r20, 0x83	; 131
    15f6:	5d e3       	ldi	r21, 0x3D	; 61
    15f8:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    15fc:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1600:	62 bf       	out	0x32, r22	; 50
    1602:	83 e8       	ldi	r24, 0x83	; 131
    1604:	83 bf       	out	0x33, r24	; 51
    1606:	36 c0       	rjmp	.+108    	; 0x1674 <Timer0_Delay+0x2c2>
    1608:	6f 2d       	mov	r22, r15
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	80 e0       	ldi	r24, 0x00	; 0
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    1614:	9b 01       	movw	r18, r22
    1616:	ac 01       	movw	r20, r24
    1618:	6b e7       	ldi	r22, 0x7B	; 123
    161a:	74 e1       	ldi	r23, 0x14	; 20
    161c:	83 e8       	ldi	r24, 0x83	; 131
    161e:	92 e4       	ldi	r25, 0x42	; 66
    1620:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1624:	2f e6       	ldi	r18, 0x6F	; 111
    1626:	32 e1       	ldi	r19, 0x12	; 18
    1628:	43 e8       	ldi	r20, 0x83	; 131
    162a:	5e e3       	ldi	r21, 0x3E	; 62
    162c:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    1630:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1634:	62 bf       	out	0x32, r22	; 50
    1636:	84 e8       	ldi	r24, 0x84	; 132
    1638:	83 bf       	out	0x33, r24	; 51
    163a:	1c c0       	rjmp	.+56     	; 0x1674 <Timer0_Delay+0x2c2>
    163c:	6f 2d       	mov	r22, r15
    163e:	70 e0       	ldi	r23, 0x00	; 0
    1640:	80 e0       	ldi	r24, 0x00	; 0
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
    1648:	9b 01       	movw	r18, r22
    164a:	ac 01       	movw	r20, r24
    164c:	6c ee       	ldi	r22, 0xEC	; 236
    164e:	71 e1       	ldi	r23, 0x11	; 17
    1650:	83 e8       	ldi	r24, 0x83	; 131
    1652:	93 e4       	ldi	r25, 0x43	; 67
    1654:	0e 94 92 0b 	call	0x1724	; 0x1724 <__subsf3>
    1658:	2f e6       	ldi	r18, 0x6F	; 111
    165a:	32 e1       	ldi	r19, 0x12	; 18
    165c:	43 e8       	ldi	r20, 0x83	; 131
    165e:	5f e3       	ldi	r21, 0x3F	; 63
    1660:	0e 94 04 0c 	call	0x1808	; 0x1808 <__divsf3>
    1664:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fixunssfsi>
    1668:	62 bf       	out	0x32, r22	; 50
    166a:	85 e8       	ldi	r24, 0x85	; 133
    166c:	83 bf       	out	0x33, r24	; 51
    166e:	02 c0       	rjmp	.+4      	; 0x1674 <Timer0_Delay+0x2c2>
    1670:	12 be       	out	0x32, r1	; 50
    1672:	13 be       	out	0x33, r1	; 51
    1674:	08 b6       	in	r0, 0x38	; 56
    1676:	00 fe       	sbrs	r0, 0
    1678:	fd cf       	rjmp	.-6      	; 0x1674 <Timer0_Delay+0x2c2>
    167a:	88 b7       	in	r24, 0x38	; 56
    167c:	81 60       	ori	r24, 0x01	; 1
    167e:	88 bf       	out	0x38, r24	; 56
    1680:	13 be       	out	0x33, r1	; 51
    1682:	27 96       	adiw	r28, 0x07	; 7
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	f8 94       	cli
    1688:	de bf       	out	0x3e, r29	; 62
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	cd bf       	out	0x3d, r28	; 61
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	1f 91       	pop	r17
    1694:	ff 90       	pop	r15
    1696:	ef 90       	pop	r14
    1698:	df 90       	pop	r13
    169a:	cf 90       	pop	r12
    169c:	bf 90       	pop	r11
    169e:	af 90       	pop	r10
    16a0:	9f 90       	pop	r9
    16a2:	8f 90       	pop	r8
    16a4:	08 95       	ret

000016a6 <__vector_11>:

ISR(TIMER0_OVF_vect)
{
    16a6:	1f 92       	push	r1
    16a8:	0f 92       	push	r0
    16aa:	0f b6       	in	r0, 0x3f	; 63
    16ac:	0f 92       	push	r0
    16ae:	11 24       	eor	r1, r1
    16b0:	2f 93       	push	r18
    16b2:	3f 93       	push	r19
    16b4:	4f 93       	push	r20
    16b6:	5f 93       	push	r21
    16b8:	6f 93       	push	r22
    16ba:	7f 93       	push	r23
    16bc:	8f 93       	push	r24
    16be:	9f 93       	push	r25
    16c0:	af 93       	push	r26
    16c2:	bf 93       	push	r27
    16c4:	ef 93       	push	r30
    16c6:	ff 93       	push	r31
	if(g_callBackPtr_0 !=  ((void*)0))
    16c8:	e0 91 d3 00 	lds	r30, 0x00D3	; 0x8000d3 <g_callBackPtr_0>
    16cc:	f0 91 d4 00 	lds	r31, 0x00D4	; 0x8000d4 <g_callBackPtr_0+0x1>
    16d0:	30 97       	sbiw	r30, 0x00	; 0
    16d2:	b9 f0       	breq	.+46     	; 0x1702 <__vector_11+0x5c>
	{
		if(NO_OF_OVERFLOWS > 0)
    16d4:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <NO_OF_OVERFLOWS>
    16d8:	88 23       	and	r24, r24
    16da:	79 f0       	breq	.+30     	; 0x16fa <__vector_11+0x54>
		{
			g_tick++;
    16dc:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <g_tick>
    16e0:	8f 5f       	subi	r24, 0xFF	; 255
    16e2:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <g_tick>
			if(g_tick == NO_OF_OVERFLOWS)
    16e6:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <g_tick>
    16ea:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <NO_OF_OVERFLOWS>
    16ee:	98 13       	cpse	r25, r24
    16f0:	08 c0       	rjmp	.+16     	; 0x1702 <__vector_11+0x5c>
			{
				g_callBackPtr_0();
    16f2:	09 95       	icall
				g_tick = 0; //clear the tick counter again to start new count
    16f4:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <g_tick>
    16f8:	04 c0       	rjmp	.+8      	; 0x1702 <__vector_11+0x5c>
			}
		}
		else
		{
			g_callBackPtr_0();
    16fa:	09 95       	icall
			TCNT0=init_value;
    16fc:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__data_end>
    1700:	82 bf       	out	0x32, r24	; 50
		}
	}
}
    1702:	ff 91       	pop	r31
    1704:	ef 91       	pop	r30
    1706:	bf 91       	pop	r27
    1708:	af 91       	pop	r26
    170a:	9f 91       	pop	r25
    170c:	8f 91       	pop	r24
    170e:	7f 91       	pop	r23
    1710:	6f 91       	pop	r22
    1712:	5f 91       	pop	r21
    1714:	4f 91       	pop	r20
    1716:	3f 91       	pop	r19
    1718:	2f 91       	pop	r18
    171a:	0f 90       	pop	r0
    171c:	0f be       	out	0x3f, r0	; 63
    171e:	0f 90       	pop	r0
    1720:	1f 90       	pop	r1
    1722:	18 95       	reti

00001724 <__subsf3>:
    1724:	50 58       	subi	r21, 0x80	; 128

00001726 <__addsf3>:
    1726:	bb 27       	eor	r27, r27
    1728:	aa 27       	eor	r26, r26
    172a:	0e 94 aa 0b 	call	0x1754	; 0x1754 <__addsf3x>
    172e:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_round>
    1732:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__fp_pscA>
    1736:	38 f0       	brcs	.+14     	; 0x1746 <__addsf3+0x20>
    1738:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__fp_pscB>
    173c:	20 f0       	brcs	.+8      	; 0x1746 <__addsf3+0x20>
    173e:	39 f4       	brne	.+14     	; 0x174e <__addsf3+0x28>
    1740:	9f 3f       	cpi	r25, 0xFF	; 255
    1742:	19 f4       	brne	.+6      	; 0x174a <__addsf3+0x24>
    1744:	26 f4       	brtc	.+8      	; 0x174e <__addsf3+0x28>
    1746:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__fp_nan>
    174a:	0e f4       	brtc	.+2      	; 0x174e <__addsf3+0x28>
    174c:	e0 95       	com	r30
    174e:	e7 fb       	bst	r30, 7
    1750:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_inf>

00001754 <__addsf3x>:
    1754:	e9 2f       	mov	r30, r25
    1756:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <__fp_split3>
    175a:	58 f3       	brcs	.-42     	; 0x1732 <__addsf3+0xc>
    175c:	ba 17       	cp	r27, r26
    175e:	62 07       	cpc	r22, r18
    1760:	73 07       	cpc	r23, r19
    1762:	84 07       	cpc	r24, r20
    1764:	95 07       	cpc	r25, r21
    1766:	20 f0       	brcs	.+8      	; 0x1770 <__addsf3x+0x1c>
    1768:	79 f4       	brne	.+30     	; 0x1788 <__addsf3x+0x34>
    176a:	a6 f5       	brtc	.+104    	; 0x17d4 <__addsf3x+0x80>
    176c:	0c 94 50 0d 	jmp	0x1aa0	; 0x1aa0 <__fp_zero>
    1770:	0e f4       	brtc	.+2      	; 0x1774 <__addsf3x+0x20>
    1772:	e0 95       	com	r30
    1774:	0b 2e       	mov	r0, r27
    1776:	ba 2f       	mov	r27, r26
    1778:	a0 2d       	mov	r26, r0
    177a:	0b 01       	movw	r0, r22
    177c:	b9 01       	movw	r22, r18
    177e:	90 01       	movw	r18, r0
    1780:	0c 01       	movw	r0, r24
    1782:	ca 01       	movw	r24, r20
    1784:	a0 01       	movw	r20, r0
    1786:	11 24       	eor	r1, r1
    1788:	ff 27       	eor	r31, r31
    178a:	59 1b       	sub	r21, r25
    178c:	99 f0       	breq	.+38     	; 0x17b4 <__addsf3x+0x60>
    178e:	59 3f       	cpi	r21, 0xF9	; 249
    1790:	50 f4       	brcc	.+20     	; 0x17a6 <__addsf3x+0x52>
    1792:	50 3e       	cpi	r21, 0xE0	; 224
    1794:	68 f1       	brcs	.+90     	; 0x17f0 <__addsf3x+0x9c>
    1796:	1a 16       	cp	r1, r26
    1798:	f0 40       	sbci	r31, 0x00	; 0
    179a:	a2 2f       	mov	r26, r18
    179c:	23 2f       	mov	r18, r19
    179e:	34 2f       	mov	r19, r20
    17a0:	44 27       	eor	r20, r20
    17a2:	58 5f       	subi	r21, 0xF8	; 248
    17a4:	f3 cf       	rjmp	.-26     	; 0x178c <__addsf3x+0x38>
    17a6:	46 95       	lsr	r20
    17a8:	37 95       	ror	r19
    17aa:	27 95       	ror	r18
    17ac:	a7 95       	ror	r26
    17ae:	f0 40       	sbci	r31, 0x00	; 0
    17b0:	53 95       	inc	r21
    17b2:	c9 f7       	brne	.-14     	; 0x17a6 <__addsf3x+0x52>
    17b4:	7e f4       	brtc	.+30     	; 0x17d4 <__addsf3x+0x80>
    17b6:	1f 16       	cp	r1, r31
    17b8:	ba 0b       	sbc	r27, r26
    17ba:	62 0b       	sbc	r22, r18
    17bc:	73 0b       	sbc	r23, r19
    17be:	84 0b       	sbc	r24, r20
    17c0:	ba f0       	brmi	.+46     	; 0x17f0 <__addsf3x+0x9c>
    17c2:	91 50       	subi	r25, 0x01	; 1
    17c4:	a1 f0       	breq	.+40     	; 0x17ee <__addsf3x+0x9a>
    17c6:	ff 0f       	add	r31, r31
    17c8:	bb 1f       	adc	r27, r27
    17ca:	66 1f       	adc	r22, r22
    17cc:	77 1f       	adc	r23, r23
    17ce:	88 1f       	adc	r24, r24
    17d0:	c2 f7       	brpl	.-16     	; 0x17c2 <__addsf3x+0x6e>
    17d2:	0e c0       	rjmp	.+28     	; 0x17f0 <__addsf3x+0x9c>
    17d4:	ba 0f       	add	r27, r26
    17d6:	62 1f       	adc	r22, r18
    17d8:	73 1f       	adc	r23, r19
    17da:	84 1f       	adc	r24, r20
    17dc:	48 f4       	brcc	.+18     	; 0x17f0 <__addsf3x+0x9c>
    17de:	87 95       	ror	r24
    17e0:	77 95       	ror	r23
    17e2:	67 95       	ror	r22
    17e4:	b7 95       	ror	r27
    17e6:	f7 95       	ror	r31
    17e8:	9e 3f       	cpi	r25, 0xFE	; 254
    17ea:	08 f0       	brcs	.+2      	; 0x17ee <__addsf3x+0x9a>
    17ec:	b0 cf       	rjmp	.-160    	; 0x174e <__addsf3+0x28>
    17ee:	93 95       	inc	r25
    17f0:	88 0f       	add	r24, r24
    17f2:	08 f0       	brcs	.+2      	; 0x17f6 <__addsf3x+0xa2>
    17f4:	99 27       	eor	r25, r25
    17f6:	ee 0f       	add	r30, r30
    17f8:	97 95       	ror	r25
    17fa:	87 95       	ror	r24
    17fc:	08 95       	ret

000017fe <__cmpsf2>:
    17fe:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <__fp_cmp>
    1802:	08 f4       	brcc	.+2      	; 0x1806 <__cmpsf2+0x8>
    1804:	81 e0       	ldi	r24, 0x01	; 1
    1806:	08 95       	ret

00001808 <__divsf3>:
    1808:	0e 94 18 0c 	call	0x1830	; 0x1830 <__divsf3x>
    180c:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_round>
    1810:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__fp_pscB>
    1814:	58 f0       	brcs	.+22     	; 0x182c <__divsf3+0x24>
    1816:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__fp_pscA>
    181a:	40 f0       	brcs	.+16     	; 0x182c <__divsf3+0x24>
    181c:	29 f4       	brne	.+10     	; 0x1828 <__divsf3+0x20>
    181e:	5f 3f       	cpi	r21, 0xFF	; 255
    1820:	29 f0       	breq	.+10     	; 0x182c <__divsf3+0x24>
    1822:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_inf>
    1826:	51 11       	cpse	r21, r1
    1828:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__fp_szero>
    182c:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__fp_nan>

00001830 <__divsf3x>:
    1830:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <__fp_split3>
    1834:	68 f3       	brcs	.-38     	; 0x1810 <__divsf3+0x8>

00001836 <__divsf3_pse>:
    1836:	99 23       	and	r25, r25
    1838:	b1 f3       	breq	.-20     	; 0x1826 <__divsf3+0x1e>
    183a:	55 23       	and	r21, r21
    183c:	91 f3       	breq	.-28     	; 0x1822 <__divsf3+0x1a>
    183e:	95 1b       	sub	r25, r21
    1840:	55 0b       	sbc	r21, r21
    1842:	bb 27       	eor	r27, r27
    1844:	aa 27       	eor	r26, r26
    1846:	62 17       	cp	r22, r18
    1848:	73 07       	cpc	r23, r19
    184a:	84 07       	cpc	r24, r20
    184c:	38 f0       	brcs	.+14     	; 0x185c <__divsf3_pse+0x26>
    184e:	9f 5f       	subi	r25, 0xFF	; 255
    1850:	5f 4f       	sbci	r21, 0xFF	; 255
    1852:	22 0f       	add	r18, r18
    1854:	33 1f       	adc	r19, r19
    1856:	44 1f       	adc	r20, r20
    1858:	aa 1f       	adc	r26, r26
    185a:	a9 f3       	breq	.-22     	; 0x1846 <__divsf3_pse+0x10>
    185c:	35 d0       	rcall	.+106    	; 0x18c8 <__divsf3_pse+0x92>
    185e:	0e 2e       	mov	r0, r30
    1860:	3a f0       	brmi	.+14     	; 0x1870 <__divsf3_pse+0x3a>
    1862:	e0 e8       	ldi	r30, 0x80	; 128
    1864:	32 d0       	rcall	.+100    	; 0x18ca <__divsf3_pse+0x94>
    1866:	91 50       	subi	r25, 0x01	; 1
    1868:	50 40       	sbci	r21, 0x00	; 0
    186a:	e6 95       	lsr	r30
    186c:	00 1c       	adc	r0, r0
    186e:	ca f7       	brpl	.-14     	; 0x1862 <__divsf3_pse+0x2c>
    1870:	2b d0       	rcall	.+86     	; 0x18c8 <__divsf3_pse+0x92>
    1872:	fe 2f       	mov	r31, r30
    1874:	29 d0       	rcall	.+82     	; 0x18c8 <__divsf3_pse+0x92>
    1876:	66 0f       	add	r22, r22
    1878:	77 1f       	adc	r23, r23
    187a:	88 1f       	adc	r24, r24
    187c:	bb 1f       	adc	r27, r27
    187e:	26 17       	cp	r18, r22
    1880:	37 07       	cpc	r19, r23
    1882:	48 07       	cpc	r20, r24
    1884:	ab 07       	cpc	r26, r27
    1886:	b0 e8       	ldi	r27, 0x80	; 128
    1888:	09 f0       	breq	.+2      	; 0x188c <__divsf3_pse+0x56>
    188a:	bb 0b       	sbc	r27, r27
    188c:	80 2d       	mov	r24, r0
    188e:	bf 01       	movw	r22, r30
    1890:	ff 27       	eor	r31, r31
    1892:	93 58       	subi	r25, 0x83	; 131
    1894:	5f 4f       	sbci	r21, 0xFF	; 255
    1896:	3a f0       	brmi	.+14     	; 0x18a6 <__divsf3_pse+0x70>
    1898:	9e 3f       	cpi	r25, 0xFE	; 254
    189a:	51 05       	cpc	r21, r1
    189c:	78 f0       	brcs	.+30     	; 0x18bc <__divsf3_pse+0x86>
    189e:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_inf>
    18a2:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__fp_szero>
    18a6:	5f 3f       	cpi	r21, 0xFF	; 255
    18a8:	e4 f3       	brlt	.-8      	; 0x18a2 <__divsf3_pse+0x6c>
    18aa:	98 3e       	cpi	r25, 0xE8	; 232
    18ac:	d4 f3       	brlt	.-12     	; 0x18a2 <__divsf3_pse+0x6c>
    18ae:	86 95       	lsr	r24
    18b0:	77 95       	ror	r23
    18b2:	67 95       	ror	r22
    18b4:	b7 95       	ror	r27
    18b6:	f7 95       	ror	r31
    18b8:	9f 5f       	subi	r25, 0xFF	; 255
    18ba:	c9 f7       	brne	.-14     	; 0x18ae <__divsf3_pse+0x78>
    18bc:	88 0f       	add	r24, r24
    18be:	91 1d       	adc	r25, r1
    18c0:	96 95       	lsr	r25
    18c2:	87 95       	ror	r24
    18c4:	97 f9       	bld	r25, 7
    18c6:	08 95       	ret
    18c8:	e1 e0       	ldi	r30, 0x01	; 1
    18ca:	66 0f       	add	r22, r22
    18cc:	77 1f       	adc	r23, r23
    18ce:	88 1f       	adc	r24, r24
    18d0:	bb 1f       	adc	r27, r27
    18d2:	62 17       	cp	r22, r18
    18d4:	73 07       	cpc	r23, r19
    18d6:	84 07       	cpc	r24, r20
    18d8:	ba 07       	cpc	r27, r26
    18da:	20 f0       	brcs	.+8      	; 0x18e4 <__divsf3_pse+0xae>
    18dc:	62 1b       	sub	r22, r18
    18de:	73 0b       	sbc	r23, r19
    18e0:	84 0b       	sbc	r24, r20
    18e2:	ba 0b       	sbc	r27, r26
    18e4:	ee 1f       	adc	r30, r30
    18e6:	88 f7       	brcc	.-30     	; 0x18ca <__divsf3_pse+0x94>
    18e8:	e0 95       	com	r30
    18ea:	08 95       	ret

000018ec <__fixunssfsi>:
    18ec:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__fp_splitA>
    18f0:	88 f0       	brcs	.+34     	; 0x1914 <__fixunssfsi+0x28>
    18f2:	9f 57       	subi	r25, 0x7F	; 127
    18f4:	98 f0       	brcs	.+38     	; 0x191c <__fixunssfsi+0x30>
    18f6:	b9 2f       	mov	r27, r25
    18f8:	99 27       	eor	r25, r25
    18fa:	b7 51       	subi	r27, 0x17	; 23
    18fc:	b0 f0       	brcs	.+44     	; 0x192a <__fixunssfsi+0x3e>
    18fe:	e1 f0       	breq	.+56     	; 0x1938 <__fixunssfsi+0x4c>
    1900:	66 0f       	add	r22, r22
    1902:	77 1f       	adc	r23, r23
    1904:	88 1f       	adc	r24, r24
    1906:	99 1f       	adc	r25, r25
    1908:	1a f0       	brmi	.+6      	; 0x1910 <__fixunssfsi+0x24>
    190a:	ba 95       	dec	r27
    190c:	c9 f7       	brne	.-14     	; 0x1900 <__fixunssfsi+0x14>
    190e:	14 c0       	rjmp	.+40     	; 0x1938 <__fixunssfsi+0x4c>
    1910:	b1 30       	cpi	r27, 0x01	; 1
    1912:	91 f0       	breq	.+36     	; 0x1938 <__fixunssfsi+0x4c>
    1914:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <__fp_zero>
    1918:	b1 e0       	ldi	r27, 0x01	; 1
    191a:	08 95       	ret
    191c:	0c 94 50 0d 	jmp	0x1aa0	; 0x1aa0 <__fp_zero>
    1920:	67 2f       	mov	r22, r23
    1922:	78 2f       	mov	r23, r24
    1924:	88 27       	eor	r24, r24
    1926:	b8 5f       	subi	r27, 0xF8	; 248
    1928:	39 f0       	breq	.+14     	; 0x1938 <__fixunssfsi+0x4c>
    192a:	b9 3f       	cpi	r27, 0xF9	; 249
    192c:	cc f3       	brlt	.-14     	; 0x1920 <__fixunssfsi+0x34>
    192e:	86 95       	lsr	r24
    1930:	77 95       	ror	r23
    1932:	67 95       	ror	r22
    1934:	b3 95       	inc	r27
    1936:	d9 f7       	brne	.-10     	; 0x192e <__fixunssfsi+0x42>
    1938:	3e f4       	brtc	.+14     	; 0x1948 <__fixunssfsi+0x5c>
    193a:	90 95       	com	r25
    193c:	80 95       	com	r24
    193e:	70 95       	com	r23
    1940:	61 95       	neg	r22
    1942:	7f 4f       	sbci	r23, 0xFF	; 255
    1944:	8f 4f       	sbci	r24, 0xFF	; 255
    1946:	9f 4f       	sbci	r25, 0xFF	; 255
    1948:	08 95       	ret

0000194a <__floatunsisf>:
    194a:	e8 94       	clt
    194c:	09 c0       	rjmp	.+18     	; 0x1960 <__floatsisf+0x12>

0000194e <__floatsisf>:
    194e:	97 fb       	bst	r25, 7
    1950:	3e f4       	brtc	.+14     	; 0x1960 <__floatsisf+0x12>
    1952:	90 95       	com	r25
    1954:	80 95       	com	r24
    1956:	70 95       	com	r23
    1958:	61 95       	neg	r22
    195a:	7f 4f       	sbci	r23, 0xFF	; 255
    195c:	8f 4f       	sbci	r24, 0xFF	; 255
    195e:	9f 4f       	sbci	r25, 0xFF	; 255
    1960:	99 23       	and	r25, r25
    1962:	a9 f0       	breq	.+42     	; 0x198e <__floatsisf+0x40>
    1964:	f9 2f       	mov	r31, r25
    1966:	96 e9       	ldi	r25, 0x96	; 150
    1968:	bb 27       	eor	r27, r27
    196a:	93 95       	inc	r25
    196c:	f6 95       	lsr	r31
    196e:	87 95       	ror	r24
    1970:	77 95       	ror	r23
    1972:	67 95       	ror	r22
    1974:	b7 95       	ror	r27
    1976:	f1 11       	cpse	r31, r1
    1978:	f8 cf       	rjmp	.-16     	; 0x196a <__floatsisf+0x1c>
    197a:	fa f4       	brpl	.+62     	; 0x19ba <__floatsisf+0x6c>
    197c:	bb 0f       	add	r27, r27
    197e:	11 f4       	brne	.+4      	; 0x1984 <__floatsisf+0x36>
    1980:	60 ff       	sbrs	r22, 0
    1982:	1b c0       	rjmp	.+54     	; 0x19ba <__floatsisf+0x6c>
    1984:	6f 5f       	subi	r22, 0xFF	; 255
    1986:	7f 4f       	sbci	r23, 0xFF	; 255
    1988:	8f 4f       	sbci	r24, 0xFF	; 255
    198a:	9f 4f       	sbci	r25, 0xFF	; 255
    198c:	16 c0       	rjmp	.+44     	; 0x19ba <__floatsisf+0x6c>
    198e:	88 23       	and	r24, r24
    1990:	11 f0       	breq	.+4      	; 0x1996 <__floatsisf+0x48>
    1992:	96 e9       	ldi	r25, 0x96	; 150
    1994:	11 c0       	rjmp	.+34     	; 0x19b8 <__floatsisf+0x6a>
    1996:	77 23       	and	r23, r23
    1998:	21 f0       	breq	.+8      	; 0x19a2 <__floatsisf+0x54>
    199a:	9e e8       	ldi	r25, 0x8E	; 142
    199c:	87 2f       	mov	r24, r23
    199e:	76 2f       	mov	r23, r22
    19a0:	05 c0       	rjmp	.+10     	; 0x19ac <__floatsisf+0x5e>
    19a2:	66 23       	and	r22, r22
    19a4:	71 f0       	breq	.+28     	; 0x19c2 <__floatsisf+0x74>
    19a6:	96 e8       	ldi	r25, 0x86	; 134
    19a8:	86 2f       	mov	r24, r22
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	60 e0       	ldi	r22, 0x00	; 0
    19ae:	2a f0       	brmi	.+10     	; 0x19ba <__floatsisf+0x6c>
    19b0:	9a 95       	dec	r25
    19b2:	66 0f       	add	r22, r22
    19b4:	77 1f       	adc	r23, r23
    19b6:	88 1f       	adc	r24, r24
    19b8:	da f7       	brpl	.-10     	; 0x19b0 <__floatsisf+0x62>
    19ba:	88 0f       	add	r24, r24
    19bc:	96 95       	lsr	r25
    19be:	87 95       	ror	r24
    19c0:	97 f9       	bld	r25, 7
    19c2:	08 95       	ret

000019c4 <__fp_cmp>:
    19c4:	99 0f       	add	r25, r25
    19c6:	00 08       	sbc	r0, r0
    19c8:	55 0f       	add	r21, r21
    19ca:	aa 0b       	sbc	r26, r26
    19cc:	e0 e8       	ldi	r30, 0x80	; 128
    19ce:	fe ef       	ldi	r31, 0xFE	; 254
    19d0:	16 16       	cp	r1, r22
    19d2:	17 06       	cpc	r1, r23
    19d4:	e8 07       	cpc	r30, r24
    19d6:	f9 07       	cpc	r31, r25
    19d8:	c0 f0       	brcs	.+48     	; 0x1a0a <__fp_cmp+0x46>
    19da:	12 16       	cp	r1, r18
    19dc:	13 06       	cpc	r1, r19
    19de:	e4 07       	cpc	r30, r20
    19e0:	f5 07       	cpc	r31, r21
    19e2:	98 f0       	brcs	.+38     	; 0x1a0a <__fp_cmp+0x46>
    19e4:	62 1b       	sub	r22, r18
    19e6:	73 0b       	sbc	r23, r19
    19e8:	84 0b       	sbc	r24, r20
    19ea:	95 0b       	sbc	r25, r21
    19ec:	39 f4       	brne	.+14     	; 0x19fc <__fp_cmp+0x38>
    19ee:	0a 26       	eor	r0, r26
    19f0:	61 f0       	breq	.+24     	; 0x1a0a <__fp_cmp+0x46>
    19f2:	23 2b       	or	r18, r19
    19f4:	24 2b       	or	r18, r20
    19f6:	25 2b       	or	r18, r21
    19f8:	21 f4       	brne	.+8      	; 0x1a02 <__fp_cmp+0x3e>
    19fa:	08 95       	ret
    19fc:	0a 26       	eor	r0, r26
    19fe:	09 f4       	brne	.+2      	; 0x1a02 <__fp_cmp+0x3e>
    1a00:	a1 40       	sbci	r26, 0x01	; 1
    1a02:	a6 95       	lsr	r26
    1a04:	8f ef       	ldi	r24, 0xFF	; 255
    1a06:	81 1d       	adc	r24, r1
    1a08:	81 1d       	adc	r24, r1
    1a0a:	08 95       	ret

00001a0c <__fp_inf>:
    1a0c:	97 f9       	bld	r25, 7
    1a0e:	9f 67       	ori	r25, 0x7F	; 127
    1a10:	80 e8       	ldi	r24, 0x80	; 128
    1a12:	70 e0       	ldi	r23, 0x00	; 0
    1a14:	60 e0       	ldi	r22, 0x00	; 0
    1a16:	08 95       	ret

00001a18 <__fp_nan>:
    1a18:	9f ef       	ldi	r25, 0xFF	; 255
    1a1a:	80 ec       	ldi	r24, 0xC0	; 192
    1a1c:	08 95       	ret

00001a1e <__fp_pscA>:
    1a1e:	00 24       	eor	r0, r0
    1a20:	0a 94       	dec	r0
    1a22:	16 16       	cp	r1, r22
    1a24:	17 06       	cpc	r1, r23
    1a26:	18 06       	cpc	r1, r24
    1a28:	09 06       	cpc	r0, r25
    1a2a:	08 95       	ret

00001a2c <__fp_pscB>:
    1a2c:	00 24       	eor	r0, r0
    1a2e:	0a 94       	dec	r0
    1a30:	12 16       	cp	r1, r18
    1a32:	13 06       	cpc	r1, r19
    1a34:	14 06       	cpc	r1, r20
    1a36:	05 06       	cpc	r0, r21
    1a38:	08 95       	ret

00001a3a <__fp_round>:
    1a3a:	09 2e       	mov	r0, r25
    1a3c:	03 94       	inc	r0
    1a3e:	00 0c       	add	r0, r0
    1a40:	11 f4       	brne	.+4      	; 0x1a46 <__fp_round+0xc>
    1a42:	88 23       	and	r24, r24
    1a44:	52 f0       	brmi	.+20     	; 0x1a5a <__fp_round+0x20>
    1a46:	bb 0f       	add	r27, r27
    1a48:	40 f4       	brcc	.+16     	; 0x1a5a <__fp_round+0x20>
    1a4a:	bf 2b       	or	r27, r31
    1a4c:	11 f4       	brne	.+4      	; 0x1a52 <__fp_round+0x18>
    1a4e:	60 ff       	sbrs	r22, 0
    1a50:	04 c0       	rjmp	.+8      	; 0x1a5a <__fp_round+0x20>
    1a52:	6f 5f       	subi	r22, 0xFF	; 255
    1a54:	7f 4f       	sbci	r23, 0xFF	; 255
    1a56:	8f 4f       	sbci	r24, 0xFF	; 255
    1a58:	9f 4f       	sbci	r25, 0xFF	; 255
    1a5a:	08 95       	ret

00001a5c <__fp_split3>:
    1a5c:	57 fd       	sbrc	r21, 7
    1a5e:	90 58       	subi	r25, 0x80	; 128
    1a60:	44 0f       	add	r20, r20
    1a62:	55 1f       	adc	r21, r21
    1a64:	59 f0       	breq	.+22     	; 0x1a7c <__fp_splitA+0x10>
    1a66:	5f 3f       	cpi	r21, 0xFF	; 255
    1a68:	71 f0       	breq	.+28     	; 0x1a86 <__fp_splitA+0x1a>
    1a6a:	47 95       	ror	r20

00001a6c <__fp_splitA>:
    1a6c:	88 0f       	add	r24, r24
    1a6e:	97 fb       	bst	r25, 7
    1a70:	99 1f       	adc	r25, r25
    1a72:	61 f0       	breq	.+24     	; 0x1a8c <__fp_splitA+0x20>
    1a74:	9f 3f       	cpi	r25, 0xFF	; 255
    1a76:	79 f0       	breq	.+30     	; 0x1a96 <__fp_splitA+0x2a>
    1a78:	87 95       	ror	r24
    1a7a:	08 95       	ret
    1a7c:	12 16       	cp	r1, r18
    1a7e:	13 06       	cpc	r1, r19
    1a80:	14 06       	cpc	r1, r20
    1a82:	55 1f       	adc	r21, r21
    1a84:	f2 cf       	rjmp	.-28     	; 0x1a6a <__fp_split3+0xe>
    1a86:	46 95       	lsr	r20
    1a88:	f1 df       	rcall	.-30     	; 0x1a6c <__fp_splitA>
    1a8a:	08 c0       	rjmp	.+16     	; 0x1a9c <__fp_splitA+0x30>
    1a8c:	16 16       	cp	r1, r22
    1a8e:	17 06       	cpc	r1, r23
    1a90:	18 06       	cpc	r1, r24
    1a92:	99 1f       	adc	r25, r25
    1a94:	f1 cf       	rjmp	.-30     	; 0x1a78 <__fp_splitA+0xc>
    1a96:	86 95       	lsr	r24
    1a98:	71 05       	cpc	r23, r1
    1a9a:	61 05       	cpc	r22, r1
    1a9c:	08 94       	sec
    1a9e:	08 95       	ret

00001aa0 <__fp_zero>:
    1aa0:	e8 94       	clt

00001aa2 <__fp_szero>:
    1aa2:	bb 27       	eor	r27, r27
    1aa4:	66 27       	eor	r22, r22
    1aa6:	77 27       	eor	r23, r23
    1aa8:	cb 01       	movw	r24, r22
    1aaa:	97 f9       	bld	r25, 7
    1aac:	08 95       	ret

00001aae <__mulsf3>:
    1aae:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__mulsf3x>
    1ab2:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_round>
    1ab6:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__fp_pscA>
    1aba:	38 f0       	brcs	.+14     	; 0x1aca <__mulsf3+0x1c>
    1abc:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__fp_pscB>
    1ac0:	20 f0       	brcs	.+8      	; 0x1aca <__mulsf3+0x1c>
    1ac2:	95 23       	and	r25, r21
    1ac4:	11 f0       	breq	.+4      	; 0x1aca <__mulsf3+0x1c>
    1ac6:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_inf>
    1aca:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__fp_nan>
    1ace:	11 24       	eor	r1, r1
    1ad0:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__fp_szero>

00001ad4 <__mulsf3x>:
    1ad4:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <__fp_split3>
    1ad8:	70 f3       	brcs	.-36     	; 0x1ab6 <__mulsf3+0x8>

00001ada <__mulsf3_pse>:
    1ada:	95 9f       	mul	r25, r21
    1adc:	c1 f3       	breq	.-16     	; 0x1ace <__mulsf3+0x20>
    1ade:	95 0f       	add	r25, r21
    1ae0:	50 e0       	ldi	r21, 0x00	; 0
    1ae2:	55 1f       	adc	r21, r21
    1ae4:	62 9f       	mul	r22, r18
    1ae6:	f0 01       	movw	r30, r0
    1ae8:	72 9f       	mul	r23, r18
    1aea:	bb 27       	eor	r27, r27
    1aec:	f0 0d       	add	r31, r0
    1aee:	b1 1d       	adc	r27, r1
    1af0:	63 9f       	mul	r22, r19
    1af2:	aa 27       	eor	r26, r26
    1af4:	f0 0d       	add	r31, r0
    1af6:	b1 1d       	adc	r27, r1
    1af8:	aa 1f       	adc	r26, r26
    1afa:	64 9f       	mul	r22, r20
    1afc:	66 27       	eor	r22, r22
    1afe:	b0 0d       	add	r27, r0
    1b00:	a1 1d       	adc	r26, r1
    1b02:	66 1f       	adc	r22, r22
    1b04:	82 9f       	mul	r24, r18
    1b06:	22 27       	eor	r18, r18
    1b08:	b0 0d       	add	r27, r0
    1b0a:	a1 1d       	adc	r26, r1
    1b0c:	62 1f       	adc	r22, r18
    1b0e:	73 9f       	mul	r23, r19
    1b10:	b0 0d       	add	r27, r0
    1b12:	a1 1d       	adc	r26, r1
    1b14:	62 1f       	adc	r22, r18
    1b16:	83 9f       	mul	r24, r19
    1b18:	a0 0d       	add	r26, r0
    1b1a:	61 1d       	adc	r22, r1
    1b1c:	22 1f       	adc	r18, r18
    1b1e:	74 9f       	mul	r23, r20
    1b20:	33 27       	eor	r19, r19
    1b22:	a0 0d       	add	r26, r0
    1b24:	61 1d       	adc	r22, r1
    1b26:	23 1f       	adc	r18, r19
    1b28:	84 9f       	mul	r24, r20
    1b2a:	60 0d       	add	r22, r0
    1b2c:	21 1d       	adc	r18, r1
    1b2e:	82 2f       	mov	r24, r18
    1b30:	76 2f       	mov	r23, r22
    1b32:	6a 2f       	mov	r22, r26
    1b34:	11 24       	eor	r1, r1
    1b36:	9f 57       	subi	r25, 0x7F	; 127
    1b38:	50 40       	sbci	r21, 0x00	; 0
    1b3a:	9a f0       	brmi	.+38     	; 0x1b62 <__mulsf3_pse+0x88>
    1b3c:	f1 f0       	breq	.+60     	; 0x1b7a <__mulsf3_pse+0xa0>
    1b3e:	88 23       	and	r24, r24
    1b40:	4a f0       	brmi	.+18     	; 0x1b54 <__mulsf3_pse+0x7a>
    1b42:	ee 0f       	add	r30, r30
    1b44:	ff 1f       	adc	r31, r31
    1b46:	bb 1f       	adc	r27, r27
    1b48:	66 1f       	adc	r22, r22
    1b4a:	77 1f       	adc	r23, r23
    1b4c:	88 1f       	adc	r24, r24
    1b4e:	91 50       	subi	r25, 0x01	; 1
    1b50:	50 40       	sbci	r21, 0x00	; 0
    1b52:	a9 f7       	brne	.-22     	; 0x1b3e <__mulsf3_pse+0x64>
    1b54:	9e 3f       	cpi	r25, 0xFE	; 254
    1b56:	51 05       	cpc	r21, r1
    1b58:	80 f0       	brcs	.+32     	; 0x1b7a <__mulsf3_pse+0xa0>
    1b5a:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_inf>
    1b5e:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__fp_szero>
    1b62:	5f 3f       	cpi	r21, 0xFF	; 255
    1b64:	e4 f3       	brlt	.-8      	; 0x1b5e <__mulsf3_pse+0x84>
    1b66:	98 3e       	cpi	r25, 0xE8	; 232
    1b68:	d4 f3       	brlt	.-12     	; 0x1b5e <__mulsf3_pse+0x84>
    1b6a:	86 95       	lsr	r24
    1b6c:	77 95       	ror	r23
    1b6e:	67 95       	ror	r22
    1b70:	b7 95       	ror	r27
    1b72:	f7 95       	ror	r31
    1b74:	e7 95       	ror	r30
    1b76:	9f 5f       	subi	r25, 0xFF	; 255
    1b78:	c1 f7       	brne	.-16     	; 0x1b6a <__mulsf3_pse+0x90>
    1b7a:	fe 2b       	or	r31, r30
    1b7c:	88 0f       	add	r24, r24
    1b7e:	91 1d       	adc	r25, r1
    1b80:	96 95       	lsr	r25
    1b82:	87 95       	ror	r24
    1b84:	97 f9       	bld	r25, 7
    1b86:	08 95       	ret

00001b88 <_exit>:
    1b88:	f8 94       	cli

00001b8a <__stop_program>:
    1b8a:	ff cf       	rjmp	.-2      	; 0x1b8a <__stop_program>
