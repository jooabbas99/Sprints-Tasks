
ATM_3.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  000010b2  00001146  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800076  00800076  0000115c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000118c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  000011c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000196c  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a79  00000000  00000000  00002ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001147  00000000  00000000  00003745  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000047c  00000000  00000000  0000488c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c0  00000000  00000000  00004d08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001698  00000000  00000000  000054c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00006b60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__vector_1>
       8:	0c 94 20 03 	jmp	0x640	; 0x640 <__vector_2>
       c:	0c 94 49 03 	jmp	0x692	; 0x692 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 eb       	ldi	r30, 0xB2	; 178
      68:	f0 e1       	ldi	r31, 0x10	; 16
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 38       	cpi	r26, 0x81	; 129
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 b4 01 	call	0x368	; 0x368 <main>
      8a:	0c 94 57 08 	jmp	0x10ae	; 0x10ae <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <AppInit>:



void AppInit(){

	LCD_init();
      92:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCD_init>
	
	LCD_clearScreen();
      96:	0e 94 b0 01 	call	0x360	; 0x360 <LCD_clearScreen>
	LCD_displayStringRowColumn(0,4,"welcome");
      9a:	40 e6       	ldi	r20, 0x60	; 96
      9c:	50 e0       	ldi	r21, 0x00	; 0
      9e:	64 e0       	ldi	r22, 0x04	; 4
      a0:	80 e0       	ldi	r24, 0x00	; 0
      a2:	0e 94 a5 01 	call	0x34a	; 0x34a <LCD_displayStringRowColumn>
	Timer0_Delay(1000);
      a6:	60 e0       	ldi	r22, 0x00	; 0
      a8:	70 e0       	ldi	r23, 0x00	; 0
      aa:	8a e7       	ldi	r24, 0x7A	; 122
      ac:	94 e4       	ldi	r25, 0x44	; 68
      ae:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <Timer0_Delay>
	LCD_displayStringRowColumn(1,0,"default temp=");
      b2:	48 e6       	ldi	r20, 0x68	; 104
      b4:	50 e0       	ldi	r21, 0x00	; 0
      b6:	60 e0       	ldi	r22, 0x00	; 0
      b8:	81 e0       	ldi	r24, 0x01	; 1
      ba:	0e 94 a5 01 	call	0x34a	; 0x34a <LCD_displayStringRowColumn>
      be:	08 95       	ret

000000c0 <AppStart>:
	
}
void AppStart(){
      c0:	08 95       	ret

000000c2 <LCD_sendCommand>:
void LCD_intgerToString(int data)
{
   char buff[16]; /* String to hold the ascii result */
   itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
   LCD_displayString(buff); /* Display the string */
}
      c2:	1f 93       	push	r17
      c4:	cf 93       	push	r28
      c6:	df 93       	push	r29
      c8:	1f 92       	push	r1
      ca:	cd b7       	in	r28, 0x3d	; 61
      cc:	de b7       	in	r29, 0x3e	; 62
      ce:	18 2f       	mov	r17, r24
      d0:	19 82       	std	Y+1, r1	; 0x01
      d2:	40 e0       	ldi	r20, 0x00	; 0
      d4:	61 e0       	ldi	r22, 0x01	; 1
      d6:	82 e0       	ldi	r24, 0x02	; 2
      d8:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
      dc:	40 e0       	ldi	r20, 0x00	; 0
      de:	62 e0       	ldi	r22, 0x02	; 2
      e0:	82 e0       	ldi	r24, 0x02	; 2
      e2:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
      e6:	89 ef       	ldi	r24, 0xF9	; 249
      e8:	90 e0       	ldi	r25, 0x00	; 0
      ea:	01 97       	sbiw	r24, 0x01	; 1
      ec:	f1 f7       	brne	.-4      	; 0xea <LCD_sendCommand+0x28>
      ee:	00 c0       	rjmp	.+0      	; 0xf0 <LCD_sendCommand+0x2e>
      f0:	00 00       	nop
      f2:	41 e0       	ldi	r20, 0x01	; 1
      f4:	63 e0       	ldi	r22, 0x03	; 3
      f6:	82 e0       	ldi	r24, 0x02	; 2
      f8:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
      fc:	89 ef       	ldi	r24, 0xF9	; 249
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <LCD_sendCommand+0x3e>
     104:	00 c0       	rjmp	.+0      	; 0x106 <LCD_sendCommand+0x44>
     106:	00 00       	nop
     108:	be 01       	movw	r22, r28
     10a:	6f 5f       	subi	r22, 0xFF	; 255
     10c:	7f 4f       	sbci	r23, 0xFF	; 255
     10e:	82 e0       	ldi	r24, 0x02	; 2
     110:	0e 94 d5 02 	call	0x5aa	; 0x5aa <GPIO_readPort>
     114:	69 81       	ldd	r22, Y+1	; 0x01
     116:	6f 70       	andi	r22, 0x0F	; 15
     118:	81 2f       	mov	r24, r17
     11a:	80 7f       	andi	r24, 0xF0	; 240
     11c:	68 2b       	or	r22, r24
     11e:	69 83       	std	Y+1, r22	; 0x01
     120:	82 e0       	ldi	r24, 0x02	; 2
     122:	0e 94 bb 02 	call	0x576	; 0x576 <GPIO_writePort>
     126:	89 ef       	ldi	r24, 0xF9	; 249
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	01 97       	sbiw	r24, 0x01	; 1
     12c:	f1 f7       	brne	.-4      	; 0x12a <LCD_sendCommand+0x68>
     12e:	00 c0       	rjmp	.+0      	; 0x130 <LCD_sendCommand+0x6e>
     130:	00 00       	nop
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	63 e0       	ldi	r22, 0x03	; 3
     136:	82 e0       	ldi	r24, 0x02	; 2
     138:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     13c:	89 ef       	ldi	r24, 0xF9	; 249
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	01 97       	sbiw	r24, 0x01	; 1
     142:	f1 f7       	brne	.-4      	; 0x140 <LCD_sendCommand+0x7e>
     144:	00 c0       	rjmp	.+0      	; 0x146 <LCD_sendCommand+0x84>
     146:	00 00       	nop
     148:	41 e0       	ldi	r20, 0x01	; 1
     14a:	63 e0       	ldi	r22, 0x03	; 3
     14c:	82 e0       	ldi	r24, 0x02	; 2
     14e:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <LCD_sendCommand+0x94>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <LCD_sendCommand+0x9a>
     15c:	00 00       	nop
     15e:	be 01       	movw	r22, r28
     160:	6f 5f       	subi	r22, 0xFF	; 255
     162:	7f 4f       	sbci	r23, 0xFF	; 255
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	0e 94 d5 02 	call	0x5aa	; 0x5aa <GPIO_readPort>
     16a:	20 e1       	ldi	r18, 0x10	; 16
     16c:	12 9f       	mul	r17, r18
     16e:	c0 01       	movw	r24, r0
     170:	11 24       	eor	r1, r1
     172:	69 81       	ldd	r22, Y+1	; 0x01
     174:	6f 70       	andi	r22, 0x0F	; 15
     176:	68 2b       	or	r22, r24
     178:	69 83       	std	Y+1, r22	; 0x01
     17a:	82 e0       	ldi	r24, 0x02	; 2
     17c:	0e 94 bb 02 	call	0x576	; 0x576 <GPIO_writePort>
     180:	89 ef       	ldi	r24, 0xF9	; 249
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	f1 f7       	brne	.-4      	; 0x184 <LCD_sendCommand+0xc2>
     188:	00 c0       	rjmp	.+0      	; 0x18a <LCD_sendCommand+0xc8>
     18a:	00 00       	nop
     18c:	40 e0       	ldi	r20, 0x00	; 0
     18e:	63 e0       	ldi	r22, 0x03	; 3
     190:	82 e0       	ldi	r24, 0x02	; 2
     192:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     196:	89 ef       	ldi	r24, 0xF9	; 249
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_sendCommand+0xd8>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCD_sendCommand+0xde>
     1a0:	00 00       	nop
     1a2:	0f 90       	pop	r0
     1a4:	df 91       	pop	r29
     1a6:	cf 91       	pop	r28
     1a8:	1f 91       	pop	r17
     1aa:	08 95       	ret

000001ac <LCD_init>:
     1ac:	41 e0       	ldi	r20, 0x01	; 1
     1ae:	61 e0       	ldi	r22, 0x01	; 1
     1b0:	82 e0       	ldi	r24, 0x02	; 2
     1b2:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1b6:	41 e0       	ldi	r20, 0x01	; 1
     1b8:	62 e0       	ldi	r22, 0x02	; 2
     1ba:	82 e0       	ldi	r24, 0x02	; 2
     1bc:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1c0:	41 e0       	ldi	r20, 0x01	; 1
     1c2:	63 e0       	ldi	r22, 0x03	; 3
     1c4:	82 e0       	ldi	r24, 0x02	; 2
     1c6:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1ca:	41 e0       	ldi	r20, 0x01	; 1
     1cc:	64 e0       	ldi	r22, 0x04	; 4
     1ce:	82 e0       	ldi	r24, 0x02	; 2
     1d0:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1d4:	41 e0       	ldi	r20, 0x01	; 1
     1d6:	65 e0       	ldi	r22, 0x05	; 5
     1d8:	82 e0       	ldi	r24, 0x02	; 2
     1da:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1de:	41 e0       	ldi	r20, 0x01	; 1
     1e0:	66 e0       	ldi	r22, 0x06	; 6
     1e2:	82 e0       	ldi	r24, 0x02	; 2
     1e4:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1e8:	41 e0       	ldi	r20, 0x01	; 1
     1ea:	67 e0       	ldi	r22, 0x07	; 7
     1ec:	82 e0       	ldi	r24, 0x02	; 2
     1ee:	0e 94 b9 01 	call	0x372	; 0x372 <GPIO_setPinDirection>
     1f2:	82 e0       	ldi	r24, 0x02	; 2
     1f4:	0e 94 61 00 	call	0xc2	; 0xc2 <LCD_sendCommand>
     1f8:	88 e2       	ldi	r24, 0x28	; 40
     1fa:	0e 94 61 00 	call	0xc2	; 0xc2 <LCD_sendCommand>
     1fe:	8c e0       	ldi	r24, 0x0C	; 12
     200:	0e 94 61 00 	call	0xc2	; 0xc2 <LCD_sendCommand>
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	0e 94 61 00 	call	0xc2	; 0xc2 <LCD_sendCommand>
     20a:	08 95       	ret

0000020c <LCD_displayCharacter>:
     20c:	1f 93       	push	r17
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	1f 92       	push	r1
     214:	cd b7       	in	r28, 0x3d	; 61
     216:	de b7       	in	r29, 0x3e	; 62
     218:	18 2f       	mov	r17, r24
     21a:	19 82       	std	Y+1, r1	; 0x01
     21c:	41 e0       	ldi	r20, 0x01	; 1
     21e:	61 e0       	ldi	r22, 0x01	; 1
     220:	82 e0       	ldi	r24, 0x02	; 2
     222:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     226:	40 e0       	ldi	r20, 0x00	; 0
     228:	62 e0       	ldi	r22, 0x02	; 2
     22a:	82 e0       	ldi	r24, 0x02	; 2
     22c:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     230:	89 ef       	ldi	r24, 0xF9	; 249
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	01 97       	sbiw	r24, 0x01	; 1
     236:	f1 f7       	brne	.-4      	; 0x234 <LCD_displayCharacter+0x28>
     238:	00 c0       	rjmp	.+0      	; 0x23a <LCD_displayCharacter+0x2e>
     23a:	00 00       	nop
     23c:	41 e0       	ldi	r20, 0x01	; 1
     23e:	63 e0       	ldi	r22, 0x03	; 3
     240:	82 e0       	ldi	r24, 0x02	; 2
     242:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     246:	89 ef       	ldi	r24, 0xF9	; 249
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	01 97       	sbiw	r24, 0x01	; 1
     24c:	f1 f7       	brne	.-4      	; 0x24a <LCD_displayCharacter+0x3e>
     24e:	00 c0       	rjmp	.+0      	; 0x250 <LCD_displayCharacter+0x44>
     250:	00 00       	nop
     252:	be 01       	movw	r22, r28
     254:	6f 5f       	subi	r22, 0xFF	; 255
     256:	7f 4f       	sbci	r23, 0xFF	; 255
     258:	82 e0       	ldi	r24, 0x02	; 2
     25a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <GPIO_readPort>
     25e:	69 81       	ldd	r22, Y+1	; 0x01
     260:	6f 70       	andi	r22, 0x0F	; 15
     262:	81 2f       	mov	r24, r17
     264:	80 7f       	andi	r24, 0xF0	; 240
     266:	68 2b       	or	r22, r24
     268:	69 83       	std	Y+1, r22	; 0x01
     26a:	82 e0       	ldi	r24, 0x02	; 2
     26c:	0e 94 bb 02 	call	0x576	; 0x576 <GPIO_writePort>
     270:	89 ef       	ldi	r24, 0xF9	; 249
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <LCD_displayCharacter+0x68>
     278:	00 c0       	rjmp	.+0      	; 0x27a <LCD_displayCharacter+0x6e>
     27a:	00 00       	nop
     27c:	40 e0       	ldi	r20, 0x00	; 0
     27e:	63 e0       	ldi	r22, 0x03	; 3
     280:	82 e0       	ldi	r24, 0x02	; 2
     282:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     286:	89 ef       	ldi	r24, 0xF9	; 249
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	f1 f7       	brne	.-4      	; 0x28a <LCD_displayCharacter+0x7e>
     28e:	00 c0       	rjmp	.+0      	; 0x290 <LCD_displayCharacter+0x84>
     290:	00 00       	nop
     292:	41 e0       	ldi	r20, 0x01	; 1
     294:	63 e0       	ldi	r22, 0x03	; 3
     296:	82 e0       	ldi	r24, 0x02	; 2
     298:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     29c:	89 ef       	ldi	r24, 0xF9	; 249
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	f1 f7       	brne	.-4      	; 0x2a0 <LCD_displayCharacter+0x94>
     2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <LCD_displayCharacter+0x9a>
     2a6:	00 00       	nop
     2a8:	be 01       	movw	r22, r28
     2aa:	6f 5f       	subi	r22, 0xFF	; 255
     2ac:	7f 4f       	sbci	r23, 0xFF	; 255
     2ae:	82 e0       	ldi	r24, 0x02	; 2
     2b0:	0e 94 d5 02 	call	0x5aa	; 0x5aa <GPIO_readPort>
     2b4:	20 e1       	ldi	r18, 0x10	; 16
     2b6:	12 9f       	mul	r17, r18
     2b8:	c0 01       	movw	r24, r0
     2ba:	11 24       	eor	r1, r1
     2bc:	69 81       	ldd	r22, Y+1	; 0x01
     2be:	6f 70       	andi	r22, 0x0F	; 15
     2c0:	68 2b       	or	r22, r24
     2c2:	69 83       	std	Y+1, r22	; 0x01
     2c4:	82 e0       	ldi	r24, 0x02	; 2
     2c6:	0e 94 bb 02 	call	0x576	; 0x576 <GPIO_writePort>
     2ca:	89 ef       	ldi	r24, 0xF9	; 249
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <LCD_displayCharacter+0xc2>
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <LCD_displayCharacter+0xc8>
     2d4:	00 00       	nop
     2d6:	40 e0       	ldi	r20, 0x00	; 0
     2d8:	63 e0       	ldi	r22, 0x03	; 3
     2da:	82 e0       	ldi	r24, 0x02	; 2
     2dc:	0e 94 3a 02 	call	0x474	; 0x474 <GPIO_writePin>
     2e0:	89 ef       	ldi	r24, 0xF9	; 249
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	01 97       	sbiw	r24, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <LCD_displayCharacter+0xd8>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <LCD_displayCharacter+0xde>
     2ea:	00 00       	nop
     2ec:	0f 90       	pop	r0
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	1f 91       	pop	r17
     2f4:	08 95       	ret

000002f6 <LCD_displayString>:
     2f6:	0f 93       	push	r16
     2f8:	1f 93       	push	r17
     2fa:	cf 93       	push	r28
     2fc:	8c 01       	movw	r16, r24
     2fe:	c0 e0       	ldi	r28, 0x00	; 0
     300:	03 c0       	rjmp	.+6      	; 0x308 <LCD_displayString+0x12>
     302:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_displayCharacter>
     306:	cf 5f       	subi	r28, 0xFF	; 255
     308:	f8 01       	movw	r30, r16
     30a:	ec 0f       	add	r30, r28
     30c:	f1 1d       	adc	r31, r1
     30e:	80 81       	ld	r24, Z
     310:	81 11       	cpse	r24, r1
     312:	f7 cf       	rjmp	.-18     	; 0x302 <LCD_displayString+0xc>
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	08 95       	ret

0000031c <LCD_moveCursor>:
     31c:	81 30       	cpi	r24, 0x01	; 1
     31e:	31 f0       	breq	.+12     	; 0x32c <LCD_moveCursor+0x10>
     320:	70 f0       	brcs	.+28     	; 0x33e <LCD_moveCursor+0x22>
     322:	82 30       	cpi	r24, 0x02	; 2
     324:	31 f0       	breq	.+12     	; 0x332 <LCD_moveCursor+0x16>
     326:	83 30       	cpi	r24, 0x03	; 3
     328:	39 f0       	breq	.+14     	; 0x338 <LCD_moveCursor+0x1c>
     32a:	0a c0       	rjmp	.+20     	; 0x340 <LCD_moveCursor+0x24>
     32c:	90 e4       	ldi	r25, 0x40	; 64
     32e:	96 0f       	add	r25, r22
     330:	07 c0       	rjmp	.+14     	; 0x340 <LCD_moveCursor+0x24>
     332:	90 e1       	ldi	r25, 0x10	; 16
     334:	96 0f       	add	r25, r22
     336:	04 c0       	rjmp	.+8      	; 0x340 <LCD_moveCursor+0x24>
     338:	90 e5       	ldi	r25, 0x50	; 80
     33a:	96 0f       	add	r25, r22
     33c:	01 c0       	rjmp	.+2      	; 0x340 <LCD_moveCursor+0x24>
     33e:	96 2f       	mov	r25, r22
     340:	89 2f       	mov	r24, r25
     342:	80 68       	ori	r24, 0x80	; 128
     344:	0e 94 61 00 	call	0xc2	; 0xc2 <LCD_sendCommand>
     348:	08 95       	ret

0000034a <LCD_displayStringRowColumn>:
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	ea 01       	movw	r28, r20
     350:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_moveCursor>
     354:	ce 01       	movw	r24, r28
     356:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_displayString>
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	08 95       	ret

00000360 <LCD_clearScreen>:
 * Description :
 * Send the clear screen command
 */
void LCD_clearScreen(void)
{
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* Send clear display command */
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	0e 94 61 00 	call	0xc2	; 0xc2 <LCD_sendCommand>
     366:	08 95       	ret

00000368 <main>:


int main(void)
{
    /* Replace with your application code */
	AppInit();
     368:	0e 94 49 00 	call	0x92	; 0x92 <AppInit>
    while (1) 
    {
		AppStart();
     36c:	0e 94 60 00 	call	0xc0	; 0xc0 <AppStart>
     370:	fd cf       	rjmp	.-6      	; 0x36c <main+0x4>

00000372 <GPIO_setPinDirection>:
			DDRD = direction;
			break;
		}
	}
	return SUCCESS;
}
     372:	68 30       	cpi	r22, 0x08	; 8
     374:	08 f0       	brcs	.+2      	; 0x378 <GPIO_setPinDirection+0x6>
     376:	78 c0       	rjmp	.+240    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     378:	84 30       	cpi	r24, 0x04	; 4
     37a:	08 f0       	brcs	.+2      	; 0x37e <GPIO_setPinDirection+0xc>
     37c:	77 c0       	rjmp	.+238    	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     37e:	81 30       	cpi	r24, 0x01	; 1
     380:	11 f1       	breq	.+68     	; 0x3c6 <GPIO_setPinDirection+0x54>
     382:	30 f0       	brcs	.+12     	; 0x390 <GPIO_setPinDirection+0x1e>
     384:	82 30       	cpi	r24, 0x02	; 2
     386:	d1 f1       	breq	.+116    	; 0x3fc <GPIO_setPinDirection+0x8a>
     388:	83 30       	cpi	r24, 0x03	; 3
     38a:	09 f4       	brne	.+2      	; 0x38e <GPIO_setPinDirection+0x1c>
     38c:	52 c0       	rjmp	.+164    	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     38e:	70 c0       	rjmp	.+224    	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
     390:	41 30       	cpi	r20, 0x01	; 1
     392:	61 f4       	brne	.+24     	; 0x3ac <GPIO_setPinDirection+0x3a>
     394:	2a b3       	in	r18, 0x1a	; 26
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	02 c0       	rjmp	.+4      	; 0x3a0 <GPIO_setPinDirection+0x2e>
     39c:	88 0f       	add	r24, r24
     39e:	99 1f       	adc	r25, r25
     3a0:	6a 95       	dec	r22
     3a2:	e2 f7       	brpl	.-8      	; 0x39c <GPIO_setPinDirection+0x2a>
     3a4:	82 2b       	or	r24, r18
     3a6:	8a bb       	out	0x1a, r24	; 26
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	08 95       	ret
     3ac:	2a b3       	in	r18, 0x1a	; 26
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <GPIO_setPinDirection+0x46>
     3b4:	88 0f       	add	r24, r24
     3b6:	99 1f       	adc	r25, r25
     3b8:	6a 95       	dec	r22
     3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <GPIO_setPinDirection+0x42>
     3bc:	80 95       	com	r24
     3be:	82 23       	and	r24, r18
     3c0:	8a bb       	out	0x1a, r24	; 26
     3c2:	81 e0       	ldi	r24, 0x01	; 1
     3c4:	08 95       	ret
     3c6:	41 30       	cpi	r20, 0x01	; 1
     3c8:	61 f4       	brne	.+24     	; 0x3e2 <GPIO_setPinDirection+0x70>
     3ca:	27 b3       	in	r18, 0x17	; 23
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <GPIO_setPinDirection+0x64>
     3d2:	88 0f       	add	r24, r24
     3d4:	99 1f       	adc	r25, r25
     3d6:	6a 95       	dec	r22
     3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <GPIO_setPinDirection+0x60>
     3da:	82 2b       	or	r24, r18
     3dc:	87 bb       	out	0x17, r24	; 23
     3de:	81 e0       	ldi	r24, 0x01	; 1
     3e0:	08 95       	ret
     3e2:	27 b3       	in	r18, 0x17	; 23
     3e4:	81 e0       	ldi	r24, 0x01	; 1
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	02 c0       	rjmp	.+4      	; 0x3ee <GPIO_setPinDirection+0x7c>
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	6a 95       	dec	r22
     3f0:	e2 f7       	brpl	.-8      	; 0x3ea <GPIO_setPinDirection+0x78>
     3f2:	80 95       	com	r24
     3f4:	82 23       	and	r24, r18
     3f6:	87 bb       	out	0x17, r24	; 23
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	08 95       	ret
     3fc:	41 30       	cpi	r20, 0x01	; 1
     3fe:	61 f4       	brne	.+24     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     400:	24 b3       	in	r18, 0x14	; 20
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	02 c0       	rjmp	.+4      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     408:	88 0f       	add	r24, r24
     40a:	99 1f       	adc	r25, r25
     40c:	6a 95       	dec	r22
     40e:	e2 f7       	brpl	.-8      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
     410:	82 2b       	or	r24, r18
     412:	84 bb       	out	0x14, r24	; 20
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	08 95       	ret
     418:	24 b3       	in	r18, 0x14	; 20
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	02 c0       	rjmp	.+4      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     420:	88 0f       	add	r24, r24
     422:	99 1f       	adc	r25, r25
     424:	6a 95       	dec	r22
     426:	e2 f7       	brpl	.-8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     428:	80 95       	com	r24
     42a:	82 23       	and	r24, r18
     42c:	84 bb       	out	0x14, r24	; 20
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	08 95       	ret
     432:	41 30       	cpi	r20, 0x01	; 1
     434:	61 f4       	brne	.+24     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     436:	21 b3       	in	r18, 0x11	; 17
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	02 c0       	rjmp	.+4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	6a 95       	dec	r22
     444:	e2 f7       	brpl	.-8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     446:	82 2b       	or	r24, r18
     448:	81 bb       	out	0x11, r24	; 17
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	08 95       	ret
     44e:	21 b3       	in	r18, 0x11	; 17
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	02 c0       	rjmp	.+4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	6a 95       	dec	r22
     45c:	e2 f7       	brpl	.-8      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     45e:	80 95       	com	r24
     460:	82 23       	and	r24, r18
     462:	81 bb       	out	0x11, r24	; 17
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	08 95       	ret
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	08 95       	ret
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	08 95       	ret
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	08 95       	ret

00000474 <GPIO_writePin>:
     474:	68 30       	cpi	r22, 0x08	; 8
     476:	08 f0       	brcs	.+2      	; 0x47a <GPIO_writePin+0x6>
     478:	78 c0       	rjmp	.+240    	; 0x56a <GPIO_writePin+0xf6>
     47a:	84 30       	cpi	r24, 0x04	; 4
     47c:	08 f0       	brcs	.+2      	; 0x480 <GPIO_writePin+0xc>
     47e:	77 c0       	rjmp	.+238    	; 0x56e <GPIO_writePin+0xfa>
     480:	81 30       	cpi	r24, 0x01	; 1
     482:	11 f1       	breq	.+68     	; 0x4c8 <GPIO_writePin+0x54>
     484:	30 f0       	brcs	.+12     	; 0x492 <GPIO_writePin+0x1e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	d1 f1       	breq	.+116    	; 0x4fe <GPIO_writePin+0x8a>
     48a:	83 30       	cpi	r24, 0x03	; 3
     48c:	09 f4       	brne	.+2      	; 0x490 <GPIO_writePin+0x1c>
     48e:	52 c0       	rjmp	.+164    	; 0x534 <GPIO_writePin+0xc0>
     490:	70 c0       	rjmp	.+224    	; 0x572 <GPIO_writePin+0xfe>
     492:	41 30       	cpi	r20, 0x01	; 1
     494:	61 f4       	brne	.+24     	; 0x4ae <GPIO_writePin+0x3a>
     496:	2b b3       	in	r18, 0x1b	; 27
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	02 c0       	rjmp	.+4      	; 0x4a2 <GPIO_writePin+0x2e>
     49e:	88 0f       	add	r24, r24
     4a0:	99 1f       	adc	r25, r25
     4a2:	6a 95       	dec	r22
     4a4:	e2 f7       	brpl	.-8      	; 0x49e <GPIO_writePin+0x2a>
     4a6:	82 2b       	or	r24, r18
     4a8:	8b bb       	out	0x1b, r24	; 27
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	08 95       	ret
     4ae:	2b b3       	in	r18, 0x1b	; 27
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	02 c0       	rjmp	.+4      	; 0x4ba <GPIO_writePin+0x46>
     4b6:	88 0f       	add	r24, r24
     4b8:	99 1f       	adc	r25, r25
     4ba:	6a 95       	dec	r22
     4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <GPIO_writePin+0x42>
     4be:	80 95       	com	r24
     4c0:	82 23       	and	r24, r18
     4c2:	8b bb       	out	0x1b, r24	; 27
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	08 95       	ret
     4c8:	41 30       	cpi	r20, 0x01	; 1
     4ca:	61 f4       	brne	.+24     	; 0x4e4 <GPIO_writePin+0x70>
     4cc:	28 b3       	in	r18, 0x18	; 24
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <GPIO_writePin+0x64>
     4d4:	88 0f       	add	r24, r24
     4d6:	99 1f       	adc	r25, r25
     4d8:	6a 95       	dec	r22
     4da:	e2 f7       	brpl	.-8      	; 0x4d4 <GPIO_writePin+0x60>
     4dc:	82 2b       	or	r24, r18
     4de:	88 bb       	out	0x18, r24	; 24
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	08 95       	ret
     4e4:	28 b3       	in	r18, 0x18	; 24
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <GPIO_writePin+0x7c>
     4ec:	88 0f       	add	r24, r24
     4ee:	99 1f       	adc	r25, r25
     4f0:	6a 95       	dec	r22
     4f2:	e2 f7       	brpl	.-8      	; 0x4ec <GPIO_writePin+0x78>
     4f4:	80 95       	com	r24
     4f6:	82 23       	and	r24, r18
     4f8:	88 bb       	out	0x18, r24	; 24
     4fa:	81 e0       	ldi	r24, 0x01	; 1
     4fc:	08 95       	ret
     4fe:	41 30       	cpi	r20, 0x01	; 1
     500:	61 f4       	brne	.+24     	; 0x51a <GPIO_writePin+0xa6>
     502:	25 b3       	in	r18, 0x15	; 21
     504:	81 e0       	ldi	r24, 0x01	; 1
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	02 c0       	rjmp	.+4      	; 0x50e <GPIO_writePin+0x9a>
     50a:	88 0f       	add	r24, r24
     50c:	99 1f       	adc	r25, r25
     50e:	6a 95       	dec	r22
     510:	e2 f7       	brpl	.-8      	; 0x50a <GPIO_writePin+0x96>
     512:	82 2b       	or	r24, r18
     514:	85 bb       	out	0x15, r24	; 21
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	08 95       	ret
     51a:	25 b3       	in	r18, 0x15	; 21
     51c:	81 e0       	ldi	r24, 0x01	; 1
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	02 c0       	rjmp	.+4      	; 0x526 <GPIO_writePin+0xb2>
     522:	88 0f       	add	r24, r24
     524:	99 1f       	adc	r25, r25
     526:	6a 95       	dec	r22
     528:	e2 f7       	brpl	.-8      	; 0x522 <GPIO_writePin+0xae>
     52a:	80 95       	com	r24
     52c:	82 23       	and	r24, r18
     52e:	85 bb       	out	0x15, r24	; 21
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	08 95       	ret
     534:	41 30       	cpi	r20, 0x01	; 1
     536:	61 f4       	brne	.+24     	; 0x550 <GPIO_writePin+0xdc>
     538:	22 b3       	in	r18, 0x12	; 18
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	02 c0       	rjmp	.+4      	; 0x544 <GPIO_writePin+0xd0>
     540:	88 0f       	add	r24, r24
     542:	99 1f       	adc	r25, r25
     544:	6a 95       	dec	r22
     546:	e2 f7       	brpl	.-8      	; 0x540 <GPIO_writePin+0xcc>
     548:	82 2b       	or	r24, r18
     54a:	82 bb       	out	0x12, r24	; 18
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	08 95       	ret
     550:	22 b3       	in	r18, 0x12	; 18
     552:	81 e0       	ldi	r24, 0x01	; 1
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	02 c0       	rjmp	.+4      	; 0x55c <GPIO_writePin+0xe8>
     558:	88 0f       	add	r24, r24
     55a:	99 1f       	adc	r25, r25
     55c:	6a 95       	dec	r22
     55e:	e2 f7       	brpl	.-8      	; 0x558 <GPIO_writePin+0xe4>
     560:	80 95       	com	r24
     562:	82 23       	and	r24, r18
     564:	82 bb       	out	0x12, r24	; 18
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	08 95       	ret
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	08 95       	ret
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	08 95       	ret
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	08 95       	ret

00000576 <GPIO_writePort>:
 * If any pin in the port is input pin this will activate/deactivate the internal pull-up resistor.
 * If the input port number is not correct, The function will not handle the request.
 */
EN_STATE GPIO_writePort(uint8 port_num, uint8 value)
{
	if(port_num < 0 || port_num >= MAX_PORT_ID )
     576:	84 30       	cpi	r24, 0x04	; 4
     578:	a0 f4       	brcc	.+40     	; 0x5a2 <GPIO_writePort+0x2c>
	{
		return FAILED;
	}
	else
	{
		switch(port_num)
     57a:	81 30       	cpi	r24, 0x01	; 1
     57c:	49 f0       	breq	.+18     	; 0x590 <GPIO_writePort+0x1a>
     57e:	28 f0       	brcs	.+10     	; 0x58a <GPIO_writePort+0x14>
     580:	82 30       	cpi	r24, 0x02	; 2
     582:	49 f0       	breq	.+18     	; 0x596 <GPIO_writePort+0x20>
     584:	83 30       	cpi	r24, 0x03	; 3
     586:	51 f0       	breq	.+20     	; 0x59c <GPIO_writePort+0x26>
     588:	0e c0       	rjmp	.+28     	; 0x5a6 <GPIO_writePort+0x30>
		{
		case PORTA_ID:
			PORTA = value;
     58a:	6b bb       	out	0x1b, r22	; 27
		case PORTD_ID:
			PORTD = value;
			break;
		}
	}
	return SUCCESS;
     58c:	81 e0       	ldi	r24, 0x01	; 1
	{
		switch(port_num)
		{
		case PORTA_ID:
			PORTA = value;
			break;
     58e:	08 95       	ret
		case PORTB_ID:
			PORTB = value;
     590:	68 bb       	out	0x18, r22	; 24
		case PORTD_ID:
			PORTD = value;
			break;
		}
	}
	return SUCCESS;
     592:	81 e0       	ldi	r24, 0x01	; 1
		case PORTA_ID:
			PORTA = value;
			break;
		case PORTB_ID:
			PORTB = value;
			break;
     594:	08 95       	ret
		case PORTC_ID:
			PORTC = value;
     596:	65 bb       	out	0x15, r22	; 21
		case PORTD_ID:
			PORTD = value;
			break;
		}
	}
	return SUCCESS;
     598:	81 e0       	ldi	r24, 0x01	; 1
		case PORTB_ID:
			PORTB = value;
			break;
		case PORTC_ID:
			PORTC = value;
			break;
     59a:	08 95       	ret
		case PORTD_ID:
			PORTD = value;
     59c:	62 bb       	out	0x12, r22	; 18
			break;
		}
	}
	return SUCCESS;
     59e:	81 e0       	ldi	r24, 0x01	; 1
		case PORTC_ID:
			PORTC = value;
			break;
		case PORTD_ID:
			PORTD = value;
			break;
     5a0:	08 95       	ret
 */
EN_STATE GPIO_writePort(uint8 port_num, uint8 value)
{
	if(port_num < 0 || port_num >= MAX_PORT_ID )
	{
		return FAILED;
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	08 95       	ret
		case PORTD_ID:
			PORTD = value;
			break;
		}
	}
	return SUCCESS;
     5a6:	81 e0       	ldi	r24, 0x01	; 1
}
     5a8:	08 95       	ret

000005aa <GPIO_readPort>:
 * If the input port number is not correct, The function will return failed.
 */
EN_STATE GPIO_readPort(uint8 port_num,uint8* value)
{

	if(port_num < 0 || port_num >= MAX_PORT_ID )
     5aa:	84 30       	cpi	r24, 0x04	; 4
     5ac:	e0 f4       	brcc	.+56     	; 0x5e6 <GPIO_readPort+0x3c>
	{
		return FAILED;
	}
	else
	{
		switch(port_num)
     5ae:	81 30       	cpi	r24, 0x01	; 1
     5b0:	59 f0       	breq	.+22     	; 0x5c8 <GPIO_readPort+0x1e>
     5b2:	28 f0       	brcs	.+10     	; 0x5be <GPIO_readPort+0x14>
     5b4:	82 30       	cpi	r24, 0x02	; 2
     5b6:	69 f0       	breq	.+26     	; 0x5d2 <GPIO_readPort+0x28>
     5b8:	83 30       	cpi	r24, 0x03	; 3
     5ba:	81 f0       	breq	.+32     	; 0x5dc <GPIO_readPort+0x32>
     5bc:	16 c0       	rjmp	.+44     	; 0x5ea <GPIO_readPort+0x40>
		{
		case PORTA_ID:
			*value = PINA;
     5be:	89 b3       	in	r24, 0x19	; 25
     5c0:	fb 01       	movw	r30, r22
     5c2:	80 83       	st	Z, r24
		case PORTD_ID:
			*value = PIND;
			break;
		}
	}
	return SUCCESS;
     5c4:	81 e0       	ldi	r24, 0x01	; 1
	{
		switch(port_num)
		{
		case PORTA_ID:
			*value = PINA;
			break;
     5c6:	08 95       	ret
		case PORTB_ID:
			*value = PINB;
     5c8:	86 b3       	in	r24, 0x16	; 22
     5ca:	fb 01       	movw	r30, r22
     5cc:	80 83       	st	Z, r24
		case PORTD_ID:
			*value = PIND;
			break;
		}
	}
	return SUCCESS;
     5ce:	81 e0       	ldi	r24, 0x01	; 1
		case PORTA_ID:
			*value = PINA;
			break;
		case PORTB_ID:
			*value = PINB;
			break;
     5d0:	08 95       	ret
		case PORTC_ID:
			*value = PINC;
     5d2:	83 b3       	in	r24, 0x13	; 19
     5d4:	fb 01       	movw	r30, r22
     5d6:	80 83       	st	Z, r24
		case PORTD_ID:
			*value = PIND;
			break;
		}
	}
	return SUCCESS;
     5d8:	81 e0       	ldi	r24, 0x01	; 1
		case PORTB_ID:
			*value = PINB;
			break;
		case PORTC_ID:
			*value = PINC;
			break;
     5da:	08 95       	ret
		case PORTD_ID:
			*value = PIND;
     5dc:	80 b3       	in	r24, 0x10	; 16
     5de:	fb 01       	movw	r30, r22
     5e0:	80 83       	st	Z, r24
			break;
		}
	}
	return SUCCESS;
     5e2:	81 e0       	ldi	r24, 0x01	; 1
		case PORTC_ID:
			*value = PINC;
			break;
		case PORTD_ID:
			*value = PIND;
			break;
     5e4:	08 95       	ret
EN_STATE GPIO_readPort(uint8 port_num,uint8* value)
{

	if(port_num < 0 || port_num >= MAX_PORT_ID )
	{
		return FAILED;
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	08 95       	ret
		case PORTD_ID:
			*value = PIND;
			break;
		}
	}
	return SUCCESS;
     5ea:	81 e0       	ldi	r24, 0x01	; 1
}
     5ec:	08 95       	ret

000005ee <__vector_1>:
	}
	SET_BIT(SREG,PIN7);       			// Enable interrupts by setting I-bit
}

ISR(INT0_vect)
{
     5ee:	1f 92       	push	r1
     5f0:	0f 92       	push	r0
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	0f 92       	push	r0
     5f6:	11 24       	eor	r1, r1
     5f8:	2f 93       	push	r18
     5fa:	3f 93       	push	r19
     5fc:	4f 93       	push	r20
     5fe:	5f 93       	push	r21
     600:	6f 93       	push	r22
     602:	7f 93       	push	r23
     604:	8f 93       	push	r24
     606:	9f 93       	push	r25
     608:	af 93       	push	r26
     60a:	bf 93       	push	r27
     60c:	ef 93       	push	r30
     60e:	ff 93       	push	r31
	if(g_callBackPtr_0 != NULL_PTR)
     610:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_callBackPtr_0>
     614:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_callBackPtr_0+0x1>
     618:	30 97       	sbiw	r30, 0x00	; 0
     61a:	09 f0       	breq	.+2      	; 0x61e <__vector_1+0x30>
		{
			g_callBackPtr_0();
     61c:	09 95       	icall
		}
}
     61e:	ff 91       	pop	r31
     620:	ef 91       	pop	r30
     622:	bf 91       	pop	r27
     624:	af 91       	pop	r26
     626:	9f 91       	pop	r25
     628:	8f 91       	pop	r24
     62a:	7f 91       	pop	r23
     62c:	6f 91       	pop	r22
     62e:	5f 91       	pop	r21
     630:	4f 91       	pop	r20
     632:	3f 91       	pop	r19
     634:	2f 91       	pop	r18
     636:	0f 90       	pop	r0
     638:	0f be       	out	0x3f, r0	; 63
     63a:	0f 90       	pop	r0
     63c:	1f 90       	pop	r1
     63e:	18 95       	reti

00000640 <__vector_2>:


ISR(INT1_vect)
{
     640:	1f 92       	push	r1
     642:	0f 92       	push	r0
     644:	0f b6       	in	r0, 0x3f	; 63
     646:	0f 92       	push	r0
     648:	11 24       	eor	r1, r1
     64a:	2f 93       	push	r18
     64c:	3f 93       	push	r19
     64e:	4f 93       	push	r20
     650:	5f 93       	push	r21
     652:	6f 93       	push	r22
     654:	7f 93       	push	r23
     656:	8f 93       	push	r24
     658:	9f 93       	push	r25
     65a:	af 93       	push	r26
     65c:	bf 93       	push	r27
     65e:	ef 93       	push	r30
     660:	ff 93       	push	r31
	if(g_callBackPtr_1 != NULL_PTR)
     662:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <g_callBackPtr_1>
     666:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <g_callBackPtr_1+0x1>
     66a:	30 97       	sbiw	r30, 0x00	; 0
     66c:	09 f0       	breq	.+2      	; 0x670 <__vector_2+0x30>
		{
			g_callBackPtr_1();
     66e:	09 95       	icall
		}
}
     670:	ff 91       	pop	r31
     672:	ef 91       	pop	r30
     674:	bf 91       	pop	r27
     676:	af 91       	pop	r26
     678:	9f 91       	pop	r25
     67a:	8f 91       	pop	r24
     67c:	7f 91       	pop	r23
     67e:	6f 91       	pop	r22
     680:	5f 91       	pop	r21
     682:	4f 91       	pop	r20
     684:	3f 91       	pop	r19
     686:	2f 91       	pop	r18
     688:	0f 90       	pop	r0
     68a:	0f be       	out	0x3f, r0	; 63
     68c:	0f 90       	pop	r0
     68e:	1f 90       	pop	r1
     690:	18 95       	reti

00000692 <__vector_3>:

ISR(INT2_vect)
{
     692:	1f 92       	push	r1
     694:	0f 92       	push	r0
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	0f 92       	push	r0
     69a:	11 24       	eor	r1, r1
     69c:	2f 93       	push	r18
     69e:	3f 93       	push	r19
     6a0:	4f 93       	push	r20
     6a2:	5f 93       	push	r21
     6a4:	6f 93       	push	r22
     6a6:	7f 93       	push	r23
     6a8:	8f 93       	push	r24
     6aa:	9f 93       	push	r25
     6ac:	af 93       	push	r26
     6ae:	bf 93       	push	r27
     6b0:	ef 93       	push	r30
     6b2:	ff 93       	push	r31
	if(g_callBackPtr_2 != NULL_PTR)
     6b4:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__data_end>
     6b8:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__data_end+0x1>
     6bc:	30 97       	sbiw	r30, 0x00	; 0
     6be:	09 f0       	breq	.+2      	; 0x6c2 <__vector_3+0x30>
		{
			g_callBackPtr_2();
     6c0:	09 95       	icall
		}
}
     6c2:	ff 91       	pop	r31
     6c4:	ef 91       	pop	r30
     6c6:	bf 91       	pop	r27
     6c8:	af 91       	pop	r26
     6ca:	9f 91       	pop	r25
     6cc:	8f 91       	pop	r24
     6ce:	7f 91       	pop	r23
     6d0:	6f 91       	pop	r22
     6d2:	5f 91       	pop	r21
     6d4:	4f 91       	pop	r20
     6d6:	3f 91       	pop	r19
     6d8:	2f 91       	pop	r18
     6da:	0f 90       	pop	r0
     6dc:	0f be       	out	0x3f, r0	; 63
     6de:	0f 90       	pop	r0
     6e0:	1f 90       	pop	r1
     6e2:	18 95       	reti

000006e4 <calc_prescaler>:
		init_value=0;
	}
	TCNT0=init_value;
	g_callBackPtr_0=g_ptr;
	TCCR0 = (1<<FOC0) | (1<<CS02) | (1<<CS00);
}
     6e4:	cf 92       	push	r12
     6e6:	df 92       	push	r13
     6e8:	ef 92       	push	r14
     6ea:	ff 92       	push	r15
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
     6f0:	6b 01       	movw	r12, r22
     6f2:	7c 01       	movw	r14, r24
     6f4:	ea 01       	movw	r28, r20
     6f6:	2c ee       	ldi	r18, 0xEC	; 236
     6f8:	31 e1       	ldi	r19, 0x11	; 17
     6fa:	43 e8       	ldi	r20, 0x83	; 131
     6fc:	53 e4       	ldi	r21, 0x43	; 67
     6fe:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     702:	18 16       	cp	r1, r24
     704:	0c f4       	brge	.+2      	; 0x708 <calc_prescaler+0x24>
     706:	53 c0       	rjmp	.+166    	; 0x7ae <calc_prescaler+0xca>
     708:	28 eb       	ldi	r18, 0xB8	; 184
     70a:	3e e1       	ldi	r19, 0x1E	; 30
     70c:	45 e8       	ldi	r20, 0x85	; 133
     70e:	5e e3       	ldi	r21, 0x3E	; 62
     710:	c7 01       	movw	r24, r14
     712:	b6 01       	movw	r22, r12
     714:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     718:	18 16       	cp	r1, r24
     71a:	2c f0       	brlt	.+10     	; 0x726 <calc_prescaler+0x42>
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	99 83       	std	Y+1, r25	; 0x01
     722:	88 83       	st	Y, r24
     724:	45 c0       	rjmp	.+138    	; 0x7b0 <calc_prescaler+0xcc>
     726:	23 e3       	ldi	r18, 0x33	; 51
     728:	33 e3       	ldi	r19, 0x33	; 51
     72a:	43 e0       	ldi	r20, 0x03	; 3
     72c:	50 e4       	ldi	r21, 0x40	; 64
     72e:	c7 01       	movw	r24, r14
     730:	b6 01       	movw	r22, r12
     732:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     736:	18 16       	cp	r1, r24
     738:	34 f0       	brlt	.+12     	; 0x746 <calc_prescaler+0x62>
     73a:	88 e0       	ldi	r24, 0x08	; 8
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	99 83       	std	Y+1, r25	; 0x01
     740:	88 83       	st	Y, r24
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	35 c0       	rjmp	.+106    	; 0x7b0 <calc_prescaler+0xcc>
     746:	2d e3       	ldi	r18, 0x3D	; 61
     748:	3a e0       	ldi	r19, 0x0A	; 10
     74a:	43 e8       	ldi	r20, 0x83	; 131
     74c:	51 e4       	ldi	r21, 0x41	; 65
     74e:	c7 01       	movw	r24, r14
     750:	b6 01       	movw	r22, r12
     752:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     756:	18 16       	cp	r1, r24
     758:	34 f0       	brlt	.+12     	; 0x766 <calc_prescaler+0x82>
     75a:	80 e4       	ldi	r24, 0x40	; 64
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	99 83       	std	Y+1, r25	; 0x01
     760:	88 83       	st	Y, r24
     762:	81 e0       	ldi	r24, 0x01	; 1
     764:	25 c0       	rjmp	.+74     	; 0x7b0 <calc_prescaler+0xcc>
     766:	2b e7       	ldi	r18, 0x7B	; 123
     768:	34 e1       	ldi	r19, 0x14	; 20
     76a:	43 e8       	ldi	r20, 0x83	; 131
     76c:	52 e4       	ldi	r21, 0x42	; 66
     76e:	c7 01       	movw	r24, r14
     770:	b6 01       	movw	r22, r12
     772:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     776:	18 16       	cp	r1, r24
     778:	34 f0       	brlt	.+12     	; 0x786 <calc_prescaler+0xa2>
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	91 e0       	ldi	r25, 0x01	; 1
     77e:	99 83       	std	Y+1, r25	; 0x01
     780:	88 83       	st	Y, r24
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	15 c0       	rjmp	.+42     	; 0x7b0 <calc_prescaler+0xcc>
     786:	2c ee       	ldi	r18, 0xEC	; 236
     788:	31 e1       	ldi	r19, 0x11	; 17
     78a:	43 e8       	ldi	r20, 0x83	; 131
     78c:	53 e4       	ldi	r21, 0x43	; 67
     78e:	c7 01       	movw	r24, r14
     790:	b6 01       	movw	r22, r12
     792:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     796:	18 16       	cp	r1, r24
     798:	34 f0       	brlt	.+12     	; 0x7a6 <calc_prescaler+0xc2>
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	94 e0       	ldi	r25, 0x04	; 4
     79e:	99 83       	std	Y+1, r25	; 0x01
     7a0:	88 83       	st	Y, r24
     7a2:	81 e0       	ldi	r24, 0x01	; 1
     7a4:	05 c0       	rjmp	.+10     	; 0x7b0 <calc_prescaler+0xcc>
     7a6:	19 82       	std	Y+1, r1	; 0x01
     7a8:	18 82       	st	Y, r1
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	01 c0       	rjmp	.+2      	; 0x7b0 <calc_prescaler+0xcc>
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	df 90       	pop	r13
     7ba:	cf 90       	pop	r12
     7bc:	08 95       	ret

000007be <calc_initialValue>:
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	eb 01       	movw	r28, r22
     7c4:	80 34       	cpi	r24, 0x40	; 64
     7c6:	91 05       	cpc	r25, r1
     7c8:	81 f1       	breq	.+96     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     7ca:	30 f4       	brcc	.+12     	; 0x7d8 <calc_initialValue+0x1a>
     7cc:	81 30       	cpi	r24, 0x01	; 1
     7ce:	91 05       	cpc	r25, r1
     7d0:	61 f0       	breq	.+24     	; 0x7ea <calc_initialValue+0x2c>
     7d2:	08 97       	sbiw	r24, 0x08	; 8
     7d4:	d1 f0       	breq	.+52     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7d6:	59 c0       	rjmp	.+178    	; 0x88a <__stack+0x2b>
     7d8:	81 15       	cp	r24, r1
     7da:	61 e0       	ldi	r22, 0x01	; 1
     7dc:	96 07       	cpc	r25, r22
     7de:	a9 f1       	breq	.+106    	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     7e0:	81 15       	cp	r24, r1
     7e2:	94 40       	sbci	r25, 0x04	; 4
     7e4:	09 f4       	brne	.+2      	; 0x7e8 <calc_initialValue+0x2a>
     7e6:	41 c0       	rjmp	.+130    	; 0x86a <__stack+0xb>
     7e8:	50 c0       	rjmp	.+160    	; 0x88a <__stack+0x2b>
     7ea:	68 eb       	ldi	r22, 0xB8	; 184
     7ec:	7e e1       	ldi	r23, 0x1E	; 30
     7ee:	85 e8       	ldi	r24, 0x85	; 133
     7f0:	9e e3       	ldi	r25, 0x3E	; 62
     7f2:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     7f6:	2f e6       	ldi	r18, 0x6F	; 111
     7f8:	32 e1       	ldi	r19, 0x12	; 18
     7fa:	43 e8       	ldi	r20, 0x83	; 131
     7fc:	5a e3       	ldi	r21, 0x3A	; 58
     7fe:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     802:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     806:	68 83       	st	Y, r22
     808:	41 c0       	rjmp	.+130    	; 0x88c <__stack+0x2d>
     80a:	63 e3       	ldi	r22, 0x33	; 51
     80c:	73 e3       	ldi	r23, 0x33	; 51
     80e:	83 e0       	ldi	r24, 0x03	; 3
     810:	90 e4       	ldi	r25, 0x40	; 64
     812:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     816:	2f e6       	ldi	r18, 0x6F	; 111
     818:	32 e1       	ldi	r19, 0x12	; 18
     81a:	43 e0       	ldi	r20, 0x03	; 3
     81c:	5c e3       	ldi	r21, 0x3C	; 60
     81e:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     822:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     826:	68 83       	st	Y, r22
     828:	31 c0       	rjmp	.+98     	; 0x88c <__stack+0x2d>
     82a:	6d e3       	ldi	r22, 0x3D	; 61
     82c:	7a e0       	ldi	r23, 0x0A	; 10
     82e:	83 e8       	ldi	r24, 0x83	; 131
     830:	91 e4       	ldi	r25, 0x41	; 65
     832:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     836:	2f e6       	ldi	r18, 0x6F	; 111
     838:	32 e1       	ldi	r19, 0x12	; 18
     83a:	43 e8       	ldi	r20, 0x83	; 131
     83c:	5d e3       	ldi	r21, 0x3D	; 61
     83e:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     842:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     846:	68 83       	st	Y, r22
     848:	21 c0       	rjmp	.+66     	; 0x88c <__stack+0x2d>
     84a:	6b e7       	ldi	r22, 0x7B	; 123
     84c:	74 e1       	ldi	r23, 0x14	; 20
     84e:	83 e8       	ldi	r24, 0x83	; 131
     850:	92 e4       	ldi	r25, 0x42	; 66
     852:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     856:	2f e6       	ldi	r18, 0x6F	; 111
     858:	32 e1       	ldi	r19, 0x12	; 18
     85a:	43 e8       	ldi	r20, 0x83	; 131
     85c:	5e e3       	ldi	r21, 0x3E	; 62
     85e:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     862:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     866:	68 83       	st	Y, r22
     868:	11 c0       	rjmp	.+34     	; 0x88c <__stack+0x2d>
     86a:	6c ee       	ldi	r22, 0xEC	; 236
     86c:	71 e1       	ldi	r23, 0x11	; 17
     86e:	83 e8       	ldi	r24, 0x83	; 131
     870:	93 e4       	ldi	r25, 0x43	; 67
     872:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     876:	2f e6       	ldi	r18, 0x6F	; 111
     878:	32 e1       	ldi	r19, 0x12	; 18
     87a:	43 e8       	ldi	r20, 0x83	; 131
     87c:	5f e3       	ldi	r21, 0x3F	; 63
     87e:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     882:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     886:	68 83       	st	Y, r22
     888:	01 c0       	rjmp	.+2      	; 0x88c <__stack+0x2d>
     88a:	18 82       	st	Y, r1
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	08 95       	ret

00000892 <set_prescale>:
     892:	80 34       	cpi	r24, 0x40	; 64
     894:	91 05       	cpc	r25, r1
     896:	a9 f0       	breq	.+42     	; 0x8c2 <set_prescale+0x30>
     898:	30 f4       	brcc	.+12     	; 0x8a6 <set_prescale+0x14>
     89a:	81 30       	cpi	r24, 0x01	; 1
     89c:	91 05       	cpc	r25, r1
     89e:	59 f0       	breq	.+22     	; 0x8b6 <set_prescale+0x24>
     8a0:	08 97       	sbiw	r24, 0x08	; 8
     8a2:	61 f0       	breq	.+24     	; 0x8bc <set_prescale+0x2a>
     8a4:	17 c0       	rjmp	.+46     	; 0x8d4 <set_prescale+0x42>
     8a6:	81 15       	cp	r24, r1
     8a8:	21 e0       	ldi	r18, 0x01	; 1
     8aa:	92 07       	cpc	r25, r18
     8ac:	69 f0       	breq	.+26     	; 0x8c8 <set_prescale+0x36>
     8ae:	81 15       	cp	r24, r1
     8b0:	94 40       	sbci	r25, 0x04	; 4
     8b2:	69 f0       	breq	.+26     	; 0x8ce <set_prescale+0x3c>
     8b4:	0f c0       	rjmp	.+30     	; 0x8d4 <set_prescale+0x42>
     8b6:	81 e8       	ldi	r24, 0x81	; 129
     8b8:	83 bf       	out	0x33, r24	; 51
     8ba:	08 95       	ret
     8bc:	82 e8       	ldi	r24, 0x82	; 130
     8be:	83 bf       	out	0x33, r24	; 51
     8c0:	08 95       	ret
     8c2:	83 e8       	ldi	r24, 0x83	; 131
     8c4:	83 bf       	out	0x33, r24	; 51
     8c6:	08 95       	ret
     8c8:	84 e8       	ldi	r24, 0x84	; 132
     8ca:	83 bf       	out	0x33, r24	; 51
     8cc:	08 95       	ret
     8ce:	85 e8       	ldi	r24, 0x85	; 133
     8d0:	83 bf       	out	0x33, r24	; 51
     8d2:	08 95       	ret
     8d4:	13 be       	out	0x33, r1	; 51
     8d6:	08 95       	ret

000008d8 <Timer0_Delay>:
     8d8:	8f 92       	push	r8
     8da:	9f 92       	push	r9
     8dc:	af 92       	push	r10
     8de:	bf 92       	push	r11
     8e0:	cf 92       	push	r12
     8e2:	df 92       	push	r13
     8e4:	ef 92       	push	r14
     8e6:	ff 92       	push	r15
     8e8:	1f 93       	push	r17
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	cd b7       	in	r28, 0x3d	; 61
     8f0:	de b7       	in	r29, 0x3e	; 62
     8f2:	27 97       	sbiw	r28, 0x07	; 7
     8f4:	0f b6       	in	r0, 0x3f	; 63
     8f6:	f8 94       	cli
     8f8:	de bf       	out	0x3e, r29	; 62
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	cd bf       	out	0x3d, r28	; 61
     8fe:	6b 01       	movw	r12, r22
     900:	7c 01       	movw	r14, r24
     902:	ae 01       	movw	r20, r28
     904:	4f 5f       	subi	r20, 0xFF	; 255
     906:	5f 4f       	sbci	r21, 0xFF	; 255
     908:	0e 94 72 03 	call	0x6e4	; 0x6e4 <calc_prescaler>
     90c:	88 23       	and	r24, r24
     90e:	71 f0       	breq	.+28     	; 0x92c <Timer0_Delay+0x54>
     910:	a7 01       	movw	r20, r14
     912:	96 01       	movw	r18, r12
     914:	be 01       	movw	r22, r28
     916:	6d 5f       	subi	r22, 0xFD	; 253
     918:	7f 4f       	sbci	r23, 0xFF	; 255
     91a:	89 81       	ldd	r24, Y+1	; 0x01
     91c:	9a 81       	ldd	r25, Y+2	; 0x02
     91e:	0e 94 df 03 	call	0x7be	; 0x7be <calc_initialValue>
     922:	1c 82       	std	Y+4, r1	; 0x04
     924:	1d 82       	std	Y+5, r1	; 0x05
     926:	1e 82       	std	Y+6, r1	; 0x06
     928:	1f 82       	std	Y+7, r1	; 0x07
     92a:	11 c0       	rjmp	.+34     	; 0x94e <Timer0_Delay+0x76>
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	94 e0       	ldi	r25, 0x04	; 4
     930:	9a 83       	std	Y+2, r25	; 0x02
     932:	89 83       	std	Y+1, r24	; 0x01
     934:	2c ee       	ldi	r18, 0xEC	; 236
     936:	31 e1       	ldi	r19, 0x11	; 17
     938:	43 e8       	ldi	r20, 0x83	; 131
     93a:	53 e4       	ldi	r21, 0x43	; 67
     93c:	c7 01       	movw	r24, r14
     93e:	b6 01       	movw	r22, r12
     940:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     944:	6c 83       	std	Y+4, r22	; 0x04
     946:	7d 83       	std	Y+5, r23	; 0x05
     948:	8e 83       	std	Y+6, r24	; 0x06
     94a:	9f 83       	std	Y+7, r25	; 0x07
     94c:	1b 82       	std	Y+3, r1	; 0x03
     94e:	cc 80       	ldd	r12, Y+4	; 0x04
     950:	dd 80       	ldd	r13, Y+5	; 0x05
     952:	ee 80       	ldd	r14, Y+6	; 0x06
     954:	ff 80       	ldd	r15, Y+7	; 0x07
     956:	c7 01       	movw	r24, r14
     958:	b6 01       	movw	r22, r12
     95a:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     95e:	16 2f       	mov	r17, r22
     960:	70 e0       	ldi	r23, 0x00	; 0
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     96a:	9b 01       	movw	r18, r22
     96c:	ac 01       	movw	r20, r24
     96e:	c7 01       	movw	r24, r14
     970:	b6 01       	movw	r22, r12
     972:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     976:	2c ee       	ldi	r18, 0xEC	; 236
     978:	31 e1       	ldi	r19, 0x11	; 17
     97a:	43 e8       	ldi	r20, 0x83	; 131
     97c:	53 e4       	ldi	r21, 0x43	; 67
     97e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     982:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     986:	f6 2e       	mov	r15, r22
     988:	8b 81       	ldd	r24, Y+3	; 0x03
     98a:	82 bf       	out	0x32, r24	; 50
     98c:	11 11       	cpse	r17, r1
     98e:	08 c0       	rjmp	.+16     	; 0x9a0 <Timer0_Delay+0xc8>
     990:	89 81       	ldd	r24, Y+1	; 0x01
     992:	9a 81       	ldd	r25, Y+2	; 0x02
     994:	0e 94 49 04 	call	0x892	; 0x892 <set_prescale>
     998:	08 b6       	in	r0, 0x38	; 56
     99a:	00 fe       	sbrs	r0, 0
     99c:	fd cf       	rjmp	.-6      	; 0x998 <Timer0_Delay+0xc0>
     99e:	00 c1       	rjmp	.+512    	; 0xba0 <Timer0_Delay+0x2c8>
     9a0:	85 e8       	ldi	r24, 0x85	; 133
     9a2:	83 bf       	out	0x33, r24	; 51
     9a4:	07 c0       	rjmp	.+14     	; 0x9b4 <Timer0_Delay+0xdc>
     9a6:	08 b6       	in	r0, 0x38	; 56
     9a8:	00 fe       	sbrs	r0, 0
     9aa:	fd cf       	rjmp	.-6      	; 0x9a6 <Timer0_Delay+0xce>
     9ac:	11 50       	subi	r17, 0x01	; 1
     9ae:	88 b7       	in	r24, 0x38	; 56
     9b0:	81 60       	ori	r24, 0x01	; 1
     9b2:	88 bf       	out	0x38, r24	; 56
     9b4:	11 11       	cpse	r17, r1
     9b6:	f7 cf       	rjmp	.-18     	; 0x9a6 <Timer0_Delay+0xce>
     9b8:	ff 20       	and	r15, r15
     9ba:	09 f4       	brne	.+2      	; 0x9be <Timer0_Delay+0xe6>
     9bc:	53 c0       	rjmp	.+166    	; 0xa64 <Timer0_Delay+0x18c>
     9be:	6f 2d       	mov	r22, r15
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     9ca:	4b 01       	movw	r8, r22
     9cc:	5c 01       	movw	r10, r24
     9ce:	28 eb       	ldi	r18, 0xB8	; 184
     9d0:	3e e1       	ldi	r19, 0x1E	; 30
     9d2:	45 e8       	ldi	r20, 0x85	; 133
     9d4:	5e e3       	ldi	r21, 0x3E	; 62
     9d6:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     9da:	18 16       	cp	r1, r24
     9dc:	2c f0       	brlt	.+10     	; 0x9e8 <Timer0_Delay+0x110>
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	9a 83       	std	Y+2, r25	; 0x02
     9e4:	89 83       	std	Y+1, r24	; 0x01
     9e6:	3e c0       	rjmp	.+124    	; 0xa64 <Timer0_Delay+0x18c>
     9e8:	23 e3       	ldi	r18, 0x33	; 51
     9ea:	33 e3       	ldi	r19, 0x33	; 51
     9ec:	43 e0       	ldi	r20, 0x03	; 3
     9ee:	50 e4       	ldi	r21, 0x40	; 64
     9f0:	c5 01       	movw	r24, r10
     9f2:	b4 01       	movw	r22, r8
     9f4:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     9f8:	18 16       	cp	r1, r24
     9fa:	2c f0       	brlt	.+10     	; 0xa06 <Timer0_Delay+0x12e>
     9fc:	88 e0       	ldi	r24, 0x08	; 8
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	9a 83       	std	Y+2, r25	; 0x02
     a02:	89 83       	std	Y+1, r24	; 0x01
     a04:	2f c0       	rjmp	.+94     	; 0xa64 <Timer0_Delay+0x18c>
     a06:	2d e3       	ldi	r18, 0x3D	; 61
     a08:	3a e0       	ldi	r19, 0x0A	; 10
     a0a:	43 e8       	ldi	r20, 0x83	; 131
     a0c:	51 e4       	ldi	r21, 0x41	; 65
     a0e:	c5 01       	movw	r24, r10
     a10:	b4 01       	movw	r22, r8
     a12:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     a16:	18 16       	cp	r1, r24
     a18:	2c f0       	brlt	.+10     	; 0xa24 <Timer0_Delay+0x14c>
     a1a:	80 e4       	ldi	r24, 0x40	; 64
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	9a 83       	std	Y+2, r25	; 0x02
     a20:	89 83       	std	Y+1, r24	; 0x01
     a22:	20 c0       	rjmp	.+64     	; 0xa64 <Timer0_Delay+0x18c>
     a24:	2b e7       	ldi	r18, 0x7B	; 123
     a26:	34 e1       	ldi	r19, 0x14	; 20
     a28:	43 e8       	ldi	r20, 0x83	; 131
     a2a:	52 e4       	ldi	r21, 0x42	; 66
     a2c:	c5 01       	movw	r24, r10
     a2e:	b4 01       	movw	r22, r8
     a30:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     a34:	18 16       	cp	r1, r24
     a36:	2c f0       	brlt	.+10     	; 0xa42 <Timer0_Delay+0x16a>
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	9a 83       	std	Y+2, r25	; 0x02
     a3e:	89 83       	std	Y+1, r24	; 0x01
     a40:	11 c0       	rjmp	.+34     	; 0xa64 <Timer0_Delay+0x18c>
     a42:	2c ee       	ldi	r18, 0xEC	; 236
     a44:	31 e1       	ldi	r19, 0x11	; 17
     a46:	43 e8       	ldi	r20, 0x83	; 131
     a48:	53 e4       	ldi	r21, 0x43	; 67
     a4a:	c5 01       	movw	r24, r10
     a4c:	b4 01       	movw	r22, r8
     a4e:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
     a52:	18 16       	cp	r1, r24
     a54:	2c f0       	brlt	.+10     	; 0xa60 <Timer0_Delay+0x188>
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	94 e0       	ldi	r25, 0x04	; 4
     a5a:	9a 83       	std	Y+2, r25	; 0x02
     a5c:	89 83       	std	Y+1, r24	; 0x01
     a5e:	02 c0       	rjmp	.+4      	; 0xa64 <Timer0_Delay+0x18c>
     a60:	1a 82       	std	Y+2, r1	; 0x02
     a62:	19 82       	std	Y+1, r1	; 0x01
     a64:	89 81       	ldd	r24, Y+1	; 0x01
     a66:	9a 81       	ldd	r25, Y+2	; 0x02
     a68:	80 34       	cpi	r24, 0x40	; 64
     a6a:	91 05       	cpc	r25, r1
     a6c:	09 f4       	brne	.+2      	; 0xa70 <Timer0_Delay+0x198>
     a6e:	45 c0       	rjmp	.+138    	; 0xafa <Timer0_Delay+0x222>
     a70:	30 f4       	brcc	.+12     	; 0xa7e <Timer0_Delay+0x1a6>
     a72:	81 30       	cpi	r24, 0x01	; 1
     a74:	91 05       	cpc	r25, r1
     a76:	69 f0       	breq	.+26     	; 0xa92 <Timer0_Delay+0x1ba>
     a78:	08 97       	sbiw	r24, 0x08	; 8
     a7a:	29 f1       	breq	.+74     	; 0xac6 <Timer0_Delay+0x1ee>
     a7c:	8c c0       	rjmp	.+280    	; 0xb96 <Timer0_Delay+0x2be>
     a7e:	81 15       	cp	r24, r1
     a80:	21 e0       	ldi	r18, 0x01	; 1
     a82:	92 07       	cpc	r25, r18
     a84:	09 f4       	brne	.+2      	; 0xa88 <Timer0_Delay+0x1b0>
     a86:	53 c0       	rjmp	.+166    	; 0xb2e <Timer0_Delay+0x256>
     a88:	81 15       	cp	r24, r1
     a8a:	94 40       	sbci	r25, 0x04	; 4
     a8c:	09 f4       	brne	.+2      	; 0xa90 <Timer0_Delay+0x1b8>
     a8e:	69 c0       	rjmp	.+210    	; 0xb62 <Timer0_Delay+0x28a>
     a90:	82 c0       	rjmp	.+260    	; 0xb96 <Timer0_Delay+0x2be>
     a92:	6f 2d       	mov	r22, r15
     a94:	70 e0       	ldi	r23, 0x00	; 0
     a96:	80 e0       	ldi	r24, 0x00	; 0
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     a9e:	9b 01       	movw	r18, r22
     aa0:	ac 01       	movw	r20, r24
     aa2:	68 eb       	ldi	r22, 0xB8	; 184
     aa4:	7e e1       	ldi	r23, 0x1E	; 30
     aa6:	85 e8       	ldi	r24, 0x85	; 133
     aa8:	9e e3       	ldi	r25, 0x3E	; 62
     aaa:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     aae:	2f e6       	ldi	r18, 0x6F	; 111
     ab0:	32 e1       	ldi	r19, 0x12	; 18
     ab2:	43 e8       	ldi	r20, 0x83	; 131
     ab4:	5a e3       	ldi	r21, 0x3A	; 58
     ab6:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     aba:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     abe:	62 bf       	out	0x32, r22	; 50
     ac0:	81 e8       	ldi	r24, 0x81	; 129
     ac2:	83 bf       	out	0x33, r24	; 51
     ac4:	6a c0       	rjmp	.+212    	; 0xb9a <Timer0_Delay+0x2c2>
     ac6:	6f 2d       	mov	r22, r15
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     ad2:	9b 01       	movw	r18, r22
     ad4:	ac 01       	movw	r20, r24
     ad6:	63 e3       	ldi	r22, 0x33	; 51
     ad8:	73 e3       	ldi	r23, 0x33	; 51
     ada:	83 e0       	ldi	r24, 0x03	; 3
     adc:	90 e4       	ldi	r25, 0x40	; 64
     ade:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     ae2:	2f e6       	ldi	r18, 0x6F	; 111
     ae4:	32 e1       	ldi	r19, 0x12	; 18
     ae6:	43 e0       	ldi	r20, 0x03	; 3
     ae8:	5c e3       	ldi	r21, 0x3C	; 60
     aea:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     aee:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     af2:	62 bf       	out	0x32, r22	; 50
     af4:	82 e8       	ldi	r24, 0x82	; 130
     af6:	83 bf       	out	0x33, r24	; 51
     af8:	50 c0       	rjmp	.+160    	; 0xb9a <Timer0_Delay+0x2c2>
     afa:	6f 2d       	mov	r22, r15
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	6d e3       	ldi	r22, 0x3D	; 61
     b0c:	7a e0       	ldi	r23, 0x0A	; 10
     b0e:	83 e8       	ldi	r24, 0x83	; 131
     b10:	91 e4       	ldi	r25, 0x41	; 65
     b12:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     b16:	2f e6       	ldi	r18, 0x6F	; 111
     b18:	32 e1       	ldi	r19, 0x12	; 18
     b1a:	43 e8       	ldi	r20, 0x83	; 131
     b1c:	5d e3       	ldi	r21, 0x3D	; 61
     b1e:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     b22:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     b26:	62 bf       	out	0x32, r22	; 50
     b28:	83 e8       	ldi	r24, 0x83	; 131
     b2a:	83 bf       	out	0x33, r24	; 51
     b2c:	36 c0       	rjmp	.+108    	; 0xb9a <Timer0_Delay+0x2c2>
     b2e:	6f 2d       	mov	r22, r15
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     b3a:	9b 01       	movw	r18, r22
     b3c:	ac 01       	movw	r20, r24
     b3e:	6b e7       	ldi	r22, 0x7B	; 123
     b40:	74 e1       	ldi	r23, 0x14	; 20
     b42:	83 e8       	ldi	r24, 0x83	; 131
     b44:	92 e4       	ldi	r25, 0x42	; 66
     b46:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     b4a:	2f e6       	ldi	r18, 0x6F	; 111
     b4c:	32 e1       	ldi	r19, 0x12	; 18
     b4e:	43 e8       	ldi	r20, 0x83	; 131
     b50:	5e e3       	ldi	r21, 0x3E	; 62
     b52:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     b56:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     b5a:	62 bf       	out	0x32, r22	; 50
     b5c:	84 e8       	ldi	r24, 0x84	; 132
     b5e:	83 bf       	out	0x33, r24	; 51
     b60:	1c c0       	rjmp	.+56     	; 0xb9a <Timer0_Delay+0x2c2>
     b62:	6f 2d       	mov	r22, r15
     b64:	70 e0       	ldi	r23, 0x00	; 0
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	0e 94 3a 07 	call	0xe74	; 0xe74 <__floatsisf>
     b6e:	9b 01       	movw	r18, r22
     b70:	ac 01       	movw	r20, r24
     b72:	6c ee       	ldi	r22, 0xEC	; 236
     b74:	71 e1       	ldi	r23, 0x11	; 17
     b76:	83 e8       	ldi	r24, 0x83	; 131
     b78:	93 e4       	ldi	r25, 0x43	; 67
     b7a:	0e 94 25 06 	call	0xc4a	; 0xc4a <__subsf3>
     b7e:	2f e6       	ldi	r18, 0x6F	; 111
     b80:	32 e1       	ldi	r19, 0x12	; 18
     b82:	43 e8       	ldi	r20, 0x83	; 131
     b84:	5f e3       	ldi	r21, 0x3F	; 63
     b86:	0e 94 97 06 	call	0xd2e	; 0xd2e <__divsf3>
     b8a:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixunssfsi>
     b8e:	62 bf       	out	0x32, r22	; 50
     b90:	85 e8       	ldi	r24, 0x85	; 133
     b92:	83 bf       	out	0x33, r24	; 51
     b94:	02 c0       	rjmp	.+4      	; 0xb9a <Timer0_Delay+0x2c2>
     b96:	12 be       	out	0x32, r1	; 50
     b98:	13 be       	out	0x33, r1	; 51
     b9a:	08 b6       	in	r0, 0x38	; 56
     b9c:	00 fe       	sbrs	r0, 0
     b9e:	fd cf       	rjmp	.-6      	; 0xb9a <Timer0_Delay+0x2c2>
     ba0:	88 b7       	in	r24, 0x38	; 56
     ba2:	81 60       	ori	r24, 0x01	; 1
     ba4:	88 bf       	out	0x38, r24	; 56
     ba6:	13 be       	out	0x33, r1	; 51
     ba8:	27 96       	adiw	r28, 0x07	; 7
     baa:	0f b6       	in	r0, 0x3f	; 63
     bac:	f8 94       	cli
     bae:	de bf       	out	0x3e, r29	; 62
     bb0:	0f be       	out	0x3f, r0	; 63
     bb2:	cd bf       	out	0x3d, r28	; 61
     bb4:	df 91       	pop	r29
     bb6:	cf 91       	pop	r28
     bb8:	1f 91       	pop	r17
     bba:	ff 90       	pop	r15
     bbc:	ef 90       	pop	r14
     bbe:	df 90       	pop	r13
     bc0:	cf 90       	pop	r12
     bc2:	bf 90       	pop	r11
     bc4:	af 90       	pop	r10
     bc6:	9f 90       	pop	r9
     bc8:	8f 90       	pop	r8
     bca:	08 95       	ret

00000bcc <__vector_11>:

ISR(TIMER0_OVF_vect)
{
     bcc:	1f 92       	push	r1
     bce:	0f 92       	push	r0
     bd0:	0f b6       	in	r0, 0x3f	; 63
     bd2:	0f 92       	push	r0
     bd4:	11 24       	eor	r1, r1
     bd6:	2f 93       	push	r18
     bd8:	3f 93       	push	r19
     bda:	4f 93       	push	r20
     bdc:	5f 93       	push	r21
     bde:	6f 93       	push	r22
     be0:	7f 93       	push	r23
     be2:	8f 93       	push	r24
     be4:	9f 93       	push	r25
     be6:	af 93       	push	r26
     be8:	bf 93       	push	r27
     bea:	ef 93       	push	r30
     bec:	ff 93       	push	r31
	if(g_callBackPtr_0 != NULL_PTR)
     bee:	e0 91 7f 00 	lds	r30, 0x007F	; 0x80007f <g_callBackPtr_0>
     bf2:	f0 91 80 00 	lds	r31, 0x0080	; 0x800080 <g_callBackPtr_0+0x1>
     bf6:	30 97       	sbiw	r30, 0x00	; 0
     bf8:	b9 f0       	breq	.+46     	; 0xc28 <__vector_11+0x5c>
	{
		if(NO_OF_OVERFLOWS > 0)
     bfa:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <NO_OF_OVERFLOWS>
     bfe:	88 23       	and	r24, r24
     c00:	79 f0       	breq	.+30     	; 0xc20 <__vector_11+0x54>
		{
			g_tick++;
     c02:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <g_tick>
     c06:	8f 5f       	subi	r24, 0xFF	; 255
     c08:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <g_tick>
			if(g_tick == NO_OF_OVERFLOWS)
     c0c:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <g_tick>
     c10:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <NO_OF_OVERFLOWS>
     c14:	98 13       	cpse	r25, r24
     c16:	08 c0       	rjmp	.+16     	; 0xc28 <__vector_11+0x5c>
			{
				g_callBackPtr_0();
     c18:	09 95       	icall
				g_tick = 0; //clear the tick counter again to start new count
     c1a:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <g_tick>
     c1e:	04 c0       	rjmp	.+8      	; 0xc28 <__vector_11+0x5c>
			}
		}
		else
		{
			g_callBackPtr_0();
     c20:	09 95       	icall
			TCNT0=init_value;
     c22:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <init_value>
     c26:	82 bf       	out	0x32, r24	; 50
		}
	}
}
     c28:	ff 91       	pop	r31
     c2a:	ef 91       	pop	r30
     c2c:	bf 91       	pop	r27
     c2e:	af 91       	pop	r26
     c30:	9f 91       	pop	r25
     c32:	8f 91       	pop	r24
     c34:	7f 91       	pop	r23
     c36:	6f 91       	pop	r22
     c38:	5f 91       	pop	r21
     c3a:	4f 91       	pop	r20
     c3c:	3f 91       	pop	r19
     c3e:	2f 91       	pop	r18
     c40:	0f 90       	pop	r0
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	0f 90       	pop	r0
     c46:	1f 90       	pop	r1
     c48:	18 95       	reti

00000c4a <__subsf3>:
     c4a:	50 58       	subi	r21, 0x80	; 128

00000c4c <__addsf3>:
     c4c:	bb 27       	eor	r27, r27
     c4e:	aa 27       	eor	r26, r26
     c50:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__addsf3x>
     c54:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__fp_round>
     c58:	0e 94 a2 07 	call	0xf44	; 0xf44 <__fp_pscA>
     c5c:	38 f0       	brcs	.+14     	; 0xc6c <__addsf3+0x20>
     c5e:	0e 94 a9 07 	call	0xf52	; 0xf52 <__fp_pscB>
     c62:	20 f0       	brcs	.+8      	; 0xc6c <__addsf3+0x20>
     c64:	39 f4       	brne	.+14     	; 0xc74 <__addsf3+0x28>
     c66:	9f 3f       	cpi	r25, 0xFF	; 255
     c68:	19 f4       	brne	.+6      	; 0xc70 <__addsf3+0x24>
     c6a:	26 f4       	brtc	.+8      	; 0xc74 <__addsf3+0x28>
     c6c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__fp_nan>
     c70:	0e f4       	brtc	.+2      	; 0xc74 <__addsf3+0x28>
     c72:	e0 95       	com	r30
     c74:	e7 fb       	bst	r30, 7
     c76:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>

00000c7a <__addsf3x>:
     c7a:	e9 2f       	mov	r30, r25
     c7c:	0e 94 c1 07 	call	0xf82	; 0xf82 <__fp_split3>
     c80:	58 f3       	brcs	.-42     	; 0xc58 <__addsf3+0xc>
     c82:	ba 17       	cp	r27, r26
     c84:	62 07       	cpc	r22, r18
     c86:	73 07       	cpc	r23, r19
     c88:	84 07       	cpc	r24, r20
     c8a:	95 07       	cpc	r25, r21
     c8c:	20 f0       	brcs	.+8      	; 0xc96 <__addsf3x+0x1c>
     c8e:	79 f4       	brne	.+30     	; 0xcae <__addsf3x+0x34>
     c90:	a6 f5       	brtc	.+104    	; 0xcfa <__addsf3x+0x80>
     c92:	0c 94 e3 07 	jmp	0xfc6	; 0xfc6 <__fp_zero>
     c96:	0e f4       	brtc	.+2      	; 0xc9a <__addsf3x+0x20>
     c98:	e0 95       	com	r30
     c9a:	0b 2e       	mov	r0, r27
     c9c:	ba 2f       	mov	r27, r26
     c9e:	a0 2d       	mov	r26, r0
     ca0:	0b 01       	movw	r0, r22
     ca2:	b9 01       	movw	r22, r18
     ca4:	90 01       	movw	r18, r0
     ca6:	0c 01       	movw	r0, r24
     ca8:	ca 01       	movw	r24, r20
     caa:	a0 01       	movw	r20, r0
     cac:	11 24       	eor	r1, r1
     cae:	ff 27       	eor	r31, r31
     cb0:	59 1b       	sub	r21, r25
     cb2:	99 f0       	breq	.+38     	; 0xcda <__addsf3x+0x60>
     cb4:	59 3f       	cpi	r21, 0xF9	; 249
     cb6:	50 f4       	brcc	.+20     	; 0xccc <__addsf3x+0x52>
     cb8:	50 3e       	cpi	r21, 0xE0	; 224
     cba:	68 f1       	brcs	.+90     	; 0xd16 <__addsf3x+0x9c>
     cbc:	1a 16       	cp	r1, r26
     cbe:	f0 40       	sbci	r31, 0x00	; 0
     cc0:	a2 2f       	mov	r26, r18
     cc2:	23 2f       	mov	r18, r19
     cc4:	34 2f       	mov	r19, r20
     cc6:	44 27       	eor	r20, r20
     cc8:	58 5f       	subi	r21, 0xF8	; 248
     cca:	f3 cf       	rjmp	.-26     	; 0xcb2 <__addsf3x+0x38>
     ccc:	46 95       	lsr	r20
     cce:	37 95       	ror	r19
     cd0:	27 95       	ror	r18
     cd2:	a7 95       	ror	r26
     cd4:	f0 40       	sbci	r31, 0x00	; 0
     cd6:	53 95       	inc	r21
     cd8:	c9 f7       	brne	.-14     	; 0xccc <__addsf3x+0x52>
     cda:	7e f4       	brtc	.+30     	; 0xcfa <__addsf3x+0x80>
     cdc:	1f 16       	cp	r1, r31
     cde:	ba 0b       	sbc	r27, r26
     ce0:	62 0b       	sbc	r22, r18
     ce2:	73 0b       	sbc	r23, r19
     ce4:	84 0b       	sbc	r24, r20
     ce6:	ba f0       	brmi	.+46     	; 0xd16 <__addsf3x+0x9c>
     ce8:	91 50       	subi	r25, 0x01	; 1
     cea:	a1 f0       	breq	.+40     	; 0xd14 <__addsf3x+0x9a>
     cec:	ff 0f       	add	r31, r31
     cee:	bb 1f       	adc	r27, r27
     cf0:	66 1f       	adc	r22, r22
     cf2:	77 1f       	adc	r23, r23
     cf4:	88 1f       	adc	r24, r24
     cf6:	c2 f7       	brpl	.-16     	; 0xce8 <__addsf3x+0x6e>
     cf8:	0e c0       	rjmp	.+28     	; 0xd16 <__addsf3x+0x9c>
     cfa:	ba 0f       	add	r27, r26
     cfc:	62 1f       	adc	r22, r18
     cfe:	73 1f       	adc	r23, r19
     d00:	84 1f       	adc	r24, r20
     d02:	48 f4       	brcc	.+18     	; 0xd16 <__addsf3x+0x9c>
     d04:	87 95       	ror	r24
     d06:	77 95       	ror	r23
     d08:	67 95       	ror	r22
     d0a:	b7 95       	ror	r27
     d0c:	f7 95       	ror	r31
     d0e:	9e 3f       	cpi	r25, 0xFE	; 254
     d10:	08 f0       	brcs	.+2      	; 0xd14 <__addsf3x+0x9a>
     d12:	b0 cf       	rjmp	.-160    	; 0xc74 <__addsf3+0x28>
     d14:	93 95       	inc	r25
     d16:	88 0f       	add	r24, r24
     d18:	08 f0       	brcs	.+2      	; 0xd1c <__addsf3x+0xa2>
     d1a:	99 27       	eor	r25, r25
     d1c:	ee 0f       	add	r30, r30
     d1e:	97 95       	ror	r25
     d20:	87 95       	ror	r24
     d22:	08 95       	ret

00000d24 <__cmpsf2>:
     d24:	0e 94 75 07 	call	0xeea	; 0xeea <__fp_cmp>
     d28:	08 f4       	brcc	.+2      	; 0xd2c <__cmpsf2+0x8>
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	08 95       	ret

00000d2e <__divsf3>:
     d2e:	0e 94 ab 06 	call	0xd56	; 0xd56 <__divsf3x>
     d32:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__fp_round>
     d36:	0e 94 a9 07 	call	0xf52	; 0xf52 <__fp_pscB>
     d3a:	58 f0       	brcs	.+22     	; 0xd52 <__divsf3+0x24>
     d3c:	0e 94 a2 07 	call	0xf44	; 0xf44 <__fp_pscA>
     d40:	40 f0       	brcs	.+16     	; 0xd52 <__divsf3+0x24>
     d42:	29 f4       	brne	.+10     	; 0xd4e <__divsf3+0x20>
     d44:	5f 3f       	cpi	r21, 0xFF	; 255
     d46:	29 f0       	breq	.+10     	; 0xd52 <__divsf3+0x24>
     d48:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
     d4c:	51 11       	cpse	r21, r1
     d4e:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_szero>
     d52:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__fp_nan>

00000d56 <__divsf3x>:
     d56:	0e 94 c1 07 	call	0xf82	; 0xf82 <__fp_split3>
     d5a:	68 f3       	brcs	.-38     	; 0xd36 <__divsf3+0x8>

00000d5c <__divsf3_pse>:
     d5c:	99 23       	and	r25, r25
     d5e:	b1 f3       	breq	.-20     	; 0xd4c <__divsf3+0x1e>
     d60:	55 23       	and	r21, r21
     d62:	91 f3       	breq	.-28     	; 0xd48 <__divsf3+0x1a>
     d64:	95 1b       	sub	r25, r21
     d66:	55 0b       	sbc	r21, r21
     d68:	bb 27       	eor	r27, r27
     d6a:	aa 27       	eor	r26, r26
     d6c:	62 17       	cp	r22, r18
     d6e:	73 07       	cpc	r23, r19
     d70:	84 07       	cpc	r24, r20
     d72:	38 f0       	brcs	.+14     	; 0xd82 <__divsf3_pse+0x26>
     d74:	9f 5f       	subi	r25, 0xFF	; 255
     d76:	5f 4f       	sbci	r21, 0xFF	; 255
     d78:	22 0f       	add	r18, r18
     d7a:	33 1f       	adc	r19, r19
     d7c:	44 1f       	adc	r20, r20
     d7e:	aa 1f       	adc	r26, r26
     d80:	a9 f3       	breq	.-22     	; 0xd6c <__divsf3_pse+0x10>
     d82:	35 d0       	rcall	.+106    	; 0xdee <__divsf3_pse+0x92>
     d84:	0e 2e       	mov	r0, r30
     d86:	3a f0       	brmi	.+14     	; 0xd96 <__divsf3_pse+0x3a>
     d88:	e0 e8       	ldi	r30, 0x80	; 128
     d8a:	32 d0       	rcall	.+100    	; 0xdf0 <__divsf3_pse+0x94>
     d8c:	91 50       	subi	r25, 0x01	; 1
     d8e:	50 40       	sbci	r21, 0x00	; 0
     d90:	e6 95       	lsr	r30
     d92:	00 1c       	adc	r0, r0
     d94:	ca f7       	brpl	.-14     	; 0xd88 <__divsf3_pse+0x2c>
     d96:	2b d0       	rcall	.+86     	; 0xdee <__divsf3_pse+0x92>
     d98:	fe 2f       	mov	r31, r30
     d9a:	29 d0       	rcall	.+82     	; 0xdee <__divsf3_pse+0x92>
     d9c:	66 0f       	add	r22, r22
     d9e:	77 1f       	adc	r23, r23
     da0:	88 1f       	adc	r24, r24
     da2:	bb 1f       	adc	r27, r27
     da4:	26 17       	cp	r18, r22
     da6:	37 07       	cpc	r19, r23
     da8:	48 07       	cpc	r20, r24
     daa:	ab 07       	cpc	r26, r27
     dac:	b0 e8       	ldi	r27, 0x80	; 128
     dae:	09 f0       	breq	.+2      	; 0xdb2 <__divsf3_pse+0x56>
     db0:	bb 0b       	sbc	r27, r27
     db2:	80 2d       	mov	r24, r0
     db4:	bf 01       	movw	r22, r30
     db6:	ff 27       	eor	r31, r31
     db8:	93 58       	subi	r25, 0x83	; 131
     dba:	5f 4f       	sbci	r21, 0xFF	; 255
     dbc:	3a f0       	brmi	.+14     	; 0xdcc <__divsf3_pse+0x70>
     dbe:	9e 3f       	cpi	r25, 0xFE	; 254
     dc0:	51 05       	cpc	r21, r1
     dc2:	78 f0       	brcs	.+30     	; 0xde2 <__divsf3_pse+0x86>
     dc4:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
     dc8:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_szero>
     dcc:	5f 3f       	cpi	r21, 0xFF	; 255
     dce:	e4 f3       	brlt	.-8      	; 0xdc8 <__divsf3_pse+0x6c>
     dd0:	98 3e       	cpi	r25, 0xE8	; 232
     dd2:	d4 f3       	brlt	.-12     	; 0xdc8 <__divsf3_pse+0x6c>
     dd4:	86 95       	lsr	r24
     dd6:	77 95       	ror	r23
     dd8:	67 95       	ror	r22
     dda:	b7 95       	ror	r27
     ddc:	f7 95       	ror	r31
     dde:	9f 5f       	subi	r25, 0xFF	; 255
     de0:	c9 f7       	brne	.-14     	; 0xdd4 <__divsf3_pse+0x78>
     de2:	88 0f       	add	r24, r24
     de4:	91 1d       	adc	r25, r1
     de6:	96 95       	lsr	r25
     de8:	87 95       	ror	r24
     dea:	97 f9       	bld	r25, 7
     dec:	08 95       	ret
     dee:	e1 e0       	ldi	r30, 0x01	; 1
     df0:	66 0f       	add	r22, r22
     df2:	77 1f       	adc	r23, r23
     df4:	88 1f       	adc	r24, r24
     df6:	bb 1f       	adc	r27, r27
     df8:	62 17       	cp	r22, r18
     dfa:	73 07       	cpc	r23, r19
     dfc:	84 07       	cpc	r24, r20
     dfe:	ba 07       	cpc	r27, r26
     e00:	20 f0       	brcs	.+8      	; 0xe0a <__divsf3_pse+0xae>
     e02:	62 1b       	sub	r22, r18
     e04:	73 0b       	sbc	r23, r19
     e06:	84 0b       	sbc	r24, r20
     e08:	ba 0b       	sbc	r27, r26
     e0a:	ee 1f       	adc	r30, r30
     e0c:	88 f7       	brcc	.-30     	; 0xdf0 <__divsf3_pse+0x94>
     e0e:	e0 95       	com	r30
     e10:	08 95       	ret

00000e12 <__fixunssfsi>:
     e12:	0e 94 c9 07 	call	0xf92	; 0xf92 <__fp_splitA>
     e16:	88 f0       	brcs	.+34     	; 0xe3a <__fixunssfsi+0x28>
     e18:	9f 57       	subi	r25, 0x7F	; 127
     e1a:	98 f0       	brcs	.+38     	; 0xe42 <__fixunssfsi+0x30>
     e1c:	b9 2f       	mov	r27, r25
     e1e:	99 27       	eor	r25, r25
     e20:	b7 51       	subi	r27, 0x17	; 23
     e22:	b0 f0       	brcs	.+44     	; 0xe50 <__fixunssfsi+0x3e>
     e24:	e1 f0       	breq	.+56     	; 0xe5e <__fixunssfsi+0x4c>
     e26:	66 0f       	add	r22, r22
     e28:	77 1f       	adc	r23, r23
     e2a:	88 1f       	adc	r24, r24
     e2c:	99 1f       	adc	r25, r25
     e2e:	1a f0       	brmi	.+6      	; 0xe36 <__fixunssfsi+0x24>
     e30:	ba 95       	dec	r27
     e32:	c9 f7       	brne	.-14     	; 0xe26 <__fixunssfsi+0x14>
     e34:	14 c0       	rjmp	.+40     	; 0xe5e <__fixunssfsi+0x4c>
     e36:	b1 30       	cpi	r27, 0x01	; 1
     e38:	91 f0       	breq	.+36     	; 0xe5e <__fixunssfsi+0x4c>
     e3a:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__fp_zero>
     e3e:	b1 e0       	ldi	r27, 0x01	; 1
     e40:	08 95       	ret
     e42:	0c 94 e3 07 	jmp	0xfc6	; 0xfc6 <__fp_zero>
     e46:	67 2f       	mov	r22, r23
     e48:	78 2f       	mov	r23, r24
     e4a:	88 27       	eor	r24, r24
     e4c:	b8 5f       	subi	r27, 0xF8	; 248
     e4e:	39 f0       	breq	.+14     	; 0xe5e <__fixunssfsi+0x4c>
     e50:	b9 3f       	cpi	r27, 0xF9	; 249
     e52:	cc f3       	brlt	.-14     	; 0xe46 <__fixunssfsi+0x34>
     e54:	86 95       	lsr	r24
     e56:	77 95       	ror	r23
     e58:	67 95       	ror	r22
     e5a:	b3 95       	inc	r27
     e5c:	d9 f7       	brne	.-10     	; 0xe54 <__fixunssfsi+0x42>
     e5e:	3e f4       	brtc	.+14     	; 0xe6e <__fixunssfsi+0x5c>
     e60:	90 95       	com	r25
     e62:	80 95       	com	r24
     e64:	70 95       	com	r23
     e66:	61 95       	neg	r22
     e68:	7f 4f       	sbci	r23, 0xFF	; 255
     e6a:	8f 4f       	sbci	r24, 0xFF	; 255
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	08 95       	ret

00000e70 <__floatunsisf>:
     e70:	e8 94       	clt
     e72:	09 c0       	rjmp	.+18     	; 0xe86 <__floatsisf+0x12>

00000e74 <__floatsisf>:
     e74:	97 fb       	bst	r25, 7
     e76:	3e f4       	brtc	.+14     	; 0xe86 <__floatsisf+0x12>
     e78:	90 95       	com	r25
     e7a:	80 95       	com	r24
     e7c:	70 95       	com	r23
     e7e:	61 95       	neg	r22
     e80:	7f 4f       	sbci	r23, 0xFF	; 255
     e82:	8f 4f       	sbci	r24, 0xFF	; 255
     e84:	9f 4f       	sbci	r25, 0xFF	; 255
     e86:	99 23       	and	r25, r25
     e88:	a9 f0       	breq	.+42     	; 0xeb4 <__floatsisf+0x40>
     e8a:	f9 2f       	mov	r31, r25
     e8c:	96 e9       	ldi	r25, 0x96	; 150
     e8e:	bb 27       	eor	r27, r27
     e90:	93 95       	inc	r25
     e92:	f6 95       	lsr	r31
     e94:	87 95       	ror	r24
     e96:	77 95       	ror	r23
     e98:	67 95       	ror	r22
     e9a:	b7 95       	ror	r27
     e9c:	f1 11       	cpse	r31, r1
     e9e:	f8 cf       	rjmp	.-16     	; 0xe90 <__floatsisf+0x1c>
     ea0:	fa f4       	brpl	.+62     	; 0xee0 <__floatsisf+0x6c>
     ea2:	bb 0f       	add	r27, r27
     ea4:	11 f4       	brne	.+4      	; 0xeaa <__floatsisf+0x36>
     ea6:	60 ff       	sbrs	r22, 0
     ea8:	1b c0       	rjmp	.+54     	; 0xee0 <__floatsisf+0x6c>
     eaa:	6f 5f       	subi	r22, 0xFF	; 255
     eac:	7f 4f       	sbci	r23, 0xFF	; 255
     eae:	8f 4f       	sbci	r24, 0xFF	; 255
     eb0:	9f 4f       	sbci	r25, 0xFF	; 255
     eb2:	16 c0       	rjmp	.+44     	; 0xee0 <__floatsisf+0x6c>
     eb4:	88 23       	and	r24, r24
     eb6:	11 f0       	breq	.+4      	; 0xebc <__floatsisf+0x48>
     eb8:	96 e9       	ldi	r25, 0x96	; 150
     eba:	11 c0       	rjmp	.+34     	; 0xede <__floatsisf+0x6a>
     ebc:	77 23       	and	r23, r23
     ebe:	21 f0       	breq	.+8      	; 0xec8 <__floatsisf+0x54>
     ec0:	9e e8       	ldi	r25, 0x8E	; 142
     ec2:	87 2f       	mov	r24, r23
     ec4:	76 2f       	mov	r23, r22
     ec6:	05 c0       	rjmp	.+10     	; 0xed2 <__floatsisf+0x5e>
     ec8:	66 23       	and	r22, r22
     eca:	71 f0       	breq	.+28     	; 0xee8 <__floatsisf+0x74>
     ecc:	96 e8       	ldi	r25, 0x86	; 134
     ece:	86 2f       	mov	r24, r22
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	2a f0       	brmi	.+10     	; 0xee0 <__floatsisf+0x6c>
     ed6:	9a 95       	dec	r25
     ed8:	66 0f       	add	r22, r22
     eda:	77 1f       	adc	r23, r23
     edc:	88 1f       	adc	r24, r24
     ede:	da f7       	brpl	.-10     	; 0xed6 <__floatsisf+0x62>
     ee0:	88 0f       	add	r24, r24
     ee2:	96 95       	lsr	r25
     ee4:	87 95       	ror	r24
     ee6:	97 f9       	bld	r25, 7
     ee8:	08 95       	ret

00000eea <__fp_cmp>:
     eea:	99 0f       	add	r25, r25
     eec:	00 08       	sbc	r0, r0
     eee:	55 0f       	add	r21, r21
     ef0:	aa 0b       	sbc	r26, r26
     ef2:	e0 e8       	ldi	r30, 0x80	; 128
     ef4:	fe ef       	ldi	r31, 0xFE	; 254
     ef6:	16 16       	cp	r1, r22
     ef8:	17 06       	cpc	r1, r23
     efa:	e8 07       	cpc	r30, r24
     efc:	f9 07       	cpc	r31, r25
     efe:	c0 f0       	brcs	.+48     	; 0xf30 <__fp_cmp+0x46>
     f00:	12 16       	cp	r1, r18
     f02:	13 06       	cpc	r1, r19
     f04:	e4 07       	cpc	r30, r20
     f06:	f5 07       	cpc	r31, r21
     f08:	98 f0       	brcs	.+38     	; 0xf30 <__fp_cmp+0x46>
     f0a:	62 1b       	sub	r22, r18
     f0c:	73 0b       	sbc	r23, r19
     f0e:	84 0b       	sbc	r24, r20
     f10:	95 0b       	sbc	r25, r21
     f12:	39 f4       	brne	.+14     	; 0xf22 <__fp_cmp+0x38>
     f14:	0a 26       	eor	r0, r26
     f16:	61 f0       	breq	.+24     	; 0xf30 <__fp_cmp+0x46>
     f18:	23 2b       	or	r18, r19
     f1a:	24 2b       	or	r18, r20
     f1c:	25 2b       	or	r18, r21
     f1e:	21 f4       	brne	.+8      	; 0xf28 <__fp_cmp+0x3e>
     f20:	08 95       	ret
     f22:	0a 26       	eor	r0, r26
     f24:	09 f4       	brne	.+2      	; 0xf28 <__fp_cmp+0x3e>
     f26:	a1 40       	sbci	r26, 0x01	; 1
     f28:	a6 95       	lsr	r26
     f2a:	8f ef       	ldi	r24, 0xFF	; 255
     f2c:	81 1d       	adc	r24, r1
     f2e:	81 1d       	adc	r24, r1
     f30:	08 95       	ret

00000f32 <__fp_inf>:
     f32:	97 f9       	bld	r25, 7
     f34:	9f 67       	ori	r25, 0x7F	; 127
     f36:	80 e8       	ldi	r24, 0x80	; 128
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	08 95       	ret

00000f3e <__fp_nan>:
     f3e:	9f ef       	ldi	r25, 0xFF	; 255
     f40:	80 ec       	ldi	r24, 0xC0	; 192
     f42:	08 95       	ret

00000f44 <__fp_pscA>:
     f44:	00 24       	eor	r0, r0
     f46:	0a 94       	dec	r0
     f48:	16 16       	cp	r1, r22
     f4a:	17 06       	cpc	r1, r23
     f4c:	18 06       	cpc	r1, r24
     f4e:	09 06       	cpc	r0, r25
     f50:	08 95       	ret

00000f52 <__fp_pscB>:
     f52:	00 24       	eor	r0, r0
     f54:	0a 94       	dec	r0
     f56:	12 16       	cp	r1, r18
     f58:	13 06       	cpc	r1, r19
     f5a:	14 06       	cpc	r1, r20
     f5c:	05 06       	cpc	r0, r21
     f5e:	08 95       	ret

00000f60 <__fp_round>:
     f60:	09 2e       	mov	r0, r25
     f62:	03 94       	inc	r0
     f64:	00 0c       	add	r0, r0
     f66:	11 f4       	brne	.+4      	; 0xf6c <__fp_round+0xc>
     f68:	88 23       	and	r24, r24
     f6a:	52 f0       	brmi	.+20     	; 0xf80 <__fp_round+0x20>
     f6c:	bb 0f       	add	r27, r27
     f6e:	40 f4       	brcc	.+16     	; 0xf80 <__fp_round+0x20>
     f70:	bf 2b       	or	r27, r31
     f72:	11 f4       	brne	.+4      	; 0xf78 <__fp_round+0x18>
     f74:	60 ff       	sbrs	r22, 0
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <__fp_round+0x20>
     f78:	6f 5f       	subi	r22, 0xFF	; 255
     f7a:	7f 4f       	sbci	r23, 0xFF	; 255
     f7c:	8f 4f       	sbci	r24, 0xFF	; 255
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	08 95       	ret

00000f82 <__fp_split3>:
     f82:	57 fd       	sbrc	r21, 7
     f84:	90 58       	subi	r25, 0x80	; 128
     f86:	44 0f       	add	r20, r20
     f88:	55 1f       	adc	r21, r21
     f8a:	59 f0       	breq	.+22     	; 0xfa2 <__fp_splitA+0x10>
     f8c:	5f 3f       	cpi	r21, 0xFF	; 255
     f8e:	71 f0       	breq	.+28     	; 0xfac <__fp_splitA+0x1a>
     f90:	47 95       	ror	r20

00000f92 <__fp_splitA>:
     f92:	88 0f       	add	r24, r24
     f94:	97 fb       	bst	r25, 7
     f96:	99 1f       	adc	r25, r25
     f98:	61 f0       	breq	.+24     	; 0xfb2 <__fp_splitA+0x20>
     f9a:	9f 3f       	cpi	r25, 0xFF	; 255
     f9c:	79 f0       	breq	.+30     	; 0xfbc <__fp_splitA+0x2a>
     f9e:	87 95       	ror	r24
     fa0:	08 95       	ret
     fa2:	12 16       	cp	r1, r18
     fa4:	13 06       	cpc	r1, r19
     fa6:	14 06       	cpc	r1, r20
     fa8:	55 1f       	adc	r21, r21
     faa:	f2 cf       	rjmp	.-28     	; 0xf90 <__fp_split3+0xe>
     fac:	46 95       	lsr	r20
     fae:	f1 df       	rcall	.-30     	; 0xf92 <__fp_splitA>
     fb0:	08 c0       	rjmp	.+16     	; 0xfc2 <__fp_splitA+0x30>
     fb2:	16 16       	cp	r1, r22
     fb4:	17 06       	cpc	r1, r23
     fb6:	18 06       	cpc	r1, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	f1 cf       	rjmp	.-30     	; 0xf9e <__fp_splitA+0xc>
     fbc:	86 95       	lsr	r24
     fbe:	71 05       	cpc	r23, r1
     fc0:	61 05       	cpc	r22, r1
     fc2:	08 94       	sec
     fc4:	08 95       	ret

00000fc6 <__fp_zero>:
     fc6:	e8 94       	clt

00000fc8 <__fp_szero>:
     fc8:	bb 27       	eor	r27, r27
     fca:	66 27       	eor	r22, r22
     fcc:	77 27       	eor	r23, r23
     fce:	cb 01       	movw	r24, r22
     fd0:	97 f9       	bld	r25, 7
     fd2:	08 95       	ret

00000fd4 <__mulsf3>:
     fd4:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3x>
     fd8:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__fp_round>
     fdc:	0e 94 a2 07 	call	0xf44	; 0xf44 <__fp_pscA>
     fe0:	38 f0       	brcs	.+14     	; 0xff0 <__mulsf3+0x1c>
     fe2:	0e 94 a9 07 	call	0xf52	; 0xf52 <__fp_pscB>
     fe6:	20 f0       	brcs	.+8      	; 0xff0 <__mulsf3+0x1c>
     fe8:	95 23       	and	r25, r21
     fea:	11 f0       	breq	.+4      	; 0xff0 <__mulsf3+0x1c>
     fec:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
     ff0:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__fp_nan>
     ff4:	11 24       	eor	r1, r1
     ff6:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_szero>

00000ffa <__mulsf3x>:
     ffa:	0e 94 c1 07 	call	0xf82	; 0xf82 <__fp_split3>
     ffe:	70 f3       	brcs	.-36     	; 0xfdc <__mulsf3+0x8>

00001000 <__mulsf3_pse>:
    1000:	95 9f       	mul	r25, r21
    1002:	c1 f3       	breq	.-16     	; 0xff4 <__mulsf3+0x20>
    1004:	95 0f       	add	r25, r21
    1006:	50 e0       	ldi	r21, 0x00	; 0
    1008:	55 1f       	adc	r21, r21
    100a:	62 9f       	mul	r22, r18
    100c:	f0 01       	movw	r30, r0
    100e:	72 9f       	mul	r23, r18
    1010:	bb 27       	eor	r27, r27
    1012:	f0 0d       	add	r31, r0
    1014:	b1 1d       	adc	r27, r1
    1016:	63 9f       	mul	r22, r19
    1018:	aa 27       	eor	r26, r26
    101a:	f0 0d       	add	r31, r0
    101c:	b1 1d       	adc	r27, r1
    101e:	aa 1f       	adc	r26, r26
    1020:	64 9f       	mul	r22, r20
    1022:	66 27       	eor	r22, r22
    1024:	b0 0d       	add	r27, r0
    1026:	a1 1d       	adc	r26, r1
    1028:	66 1f       	adc	r22, r22
    102a:	82 9f       	mul	r24, r18
    102c:	22 27       	eor	r18, r18
    102e:	b0 0d       	add	r27, r0
    1030:	a1 1d       	adc	r26, r1
    1032:	62 1f       	adc	r22, r18
    1034:	73 9f       	mul	r23, r19
    1036:	b0 0d       	add	r27, r0
    1038:	a1 1d       	adc	r26, r1
    103a:	62 1f       	adc	r22, r18
    103c:	83 9f       	mul	r24, r19
    103e:	a0 0d       	add	r26, r0
    1040:	61 1d       	adc	r22, r1
    1042:	22 1f       	adc	r18, r18
    1044:	74 9f       	mul	r23, r20
    1046:	33 27       	eor	r19, r19
    1048:	a0 0d       	add	r26, r0
    104a:	61 1d       	adc	r22, r1
    104c:	23 1f       	adc	r18, r19
    104e:	84 9f       	mul	r24, r20
    1050:	60 0d       	add	r22, r0
    1052:	21 1d       	adc	r18, r1
    1054:	82 2f       	mov	r24, r18
    1056:	76 2f       	mov	r23, r22
    1058:	6a 2f       	mov	r22, r26
    105a:	11 24       	eor	r1, r1
    105c:	9f 57       	subi	r25, 0x7F	; 127
    105e:	50 40       	sbci	r21, 0x00	; 0
    1060:	9a f0       	brmi	.+38     	; 0x1088 <__mulsf3_pse+0x88>
    1062:	f1 f0       	breq	.+60     	; 0x10a0 <__mulsf3_pse+0xa0>
    1064:	88 23       	and	r24, r24
    1066:	4a f0       	brmi	.+18     	; 0x107a <__mulsf3_pse+0x7a>
    1068:	ee 0f       	add	r30, r30
    106a:	ff 1f       	adc	r31, r31
    106c:	bb 1f       	adc	r27, r27
    106e:	66 1f       	adc	r22, r22
    1070:	77 1f       	adc	r23, r23
    1072:	88 1f       	adc	r24, r24
    1074:	91 50       	subi	r25, 0x01	; 1
    1076:	50 40       	sbci	r21, 0x00	; 0
    1078:	a9 f7       	brne	.-22     	; 0x1064 <__mulsf3_pse+0x64>
    107a:	9e 3f       	cpi	r25, 0xFE	; 254
    107c:	51 05       	cpc	r21, r1
    107e:	80 f0       	brcs	.+32     	; 0x10a0 <__mulsf3_pse+0xa0>
    1080:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
    1084:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_szero>
    1088:	5f 3f       	cpi	r21, 0xFF	; 255
    108a:	e4 f3       	brlt	.-8      	; 0x1084 <__mulsf3_pse+0x84>
    108c:	98 3e       	cpi	r25, 0xE8	; 232
    108e:	d4 f3       	brlt	.-12     	; 0x1084 <__mulsf3_pse+0x84>
    1090:	86 95       	lsr	r24
    1092:	77 95       	ror	r23
    1094:	67 95       	ror	r22
    1096:	b7 95       	ror	r27
    1098:	f7 95       	ror	r31
    109a:	e7 95       	ror	r30
    109c:	9f 5f       	subi	r25, 0xFF	; 255
    109e:	c1 f7       	brne	.-16     	; 0x1090 <__mulsf3_pse+0x90>
    10a0:	fe 2b       	or	r31, r30
    10a2:	88 0f       	add	r24, r24
    10a4:	91 1d       	adc	r25, r1
    10a6:	96 95       	lsr	r25
    10a8:	87 95       	ror	r24
    10aa:	97 f9       	bld	r25, 7
    10ac:	08 95       	ret

000010ae <_exit>:
    10ae:	f8 94       	cli

000010b0 <__stop_program>:
    10b0:	ff cf       	rjmp	.-2      	; 0x10b0 <__stop_program>
